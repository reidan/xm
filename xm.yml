openapi: 3.0.0
servers:
  - url: /api/xm/1
info:
  title: xM API Spec
  description: xM API Spec (Detailed specs for stories. May or may not be implemented)
  version: '1'
paths:
  /agents:
    get:
      summary: Returns information about agents
      description: Returns information about agents
      operationId: getAgents
      parameters:
        - description: ACTIVE or INACTIVE
          in: query
          name: status
          required: false
          schema:
            type: string
            enum:
              - ACTIVE
              - INACTIVE
        - $ref: '#/components/parameters/query-offset'
        - $ref: '#/components/parameters/query-limit'
        - $ref: '#/components/parameters/query-embed'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentPagination'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
      tags:
        - Agents
    post:
      summary: Update an agent
      description: Update an agent
      operationId: postAgent
      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Agent'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          $ref: '#/components/responses/409'
      tags:
        - Agents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgentInput'
        description: Agent update data
        required: true
  '/agents/{agentId}':
    delete:
      summary: Delete an agent
      description: Delete an agent
      operationId: deleteAgent
      parameters:
        - $ref: '#/components/parameters/path-agentId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Agent'
        '204':
          $ref: '#/components/responses/204'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '409':
          $ref: '#/components/responses/409'
      tags:
        - Agents
    get:
      summary: Returns information about an agent
      description: Returns information about an agent
      operationId: getAgent
      parameters:
        - $ref: '#/components/parameters/path-agentId'
        - $ref: '#/components/parameters/query-embed'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Agent'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      tags:
        - Agents
  '/agents/{agentId}/integrations':
    get:
      summary: Get integrations that can be executed on this agent
      description: Get integrations that can be executed on this agent
      operationId: getAgentIntegrations
      parameters:
        - $ref: '#/components/parameters/path-agentId'
        - $ref: '#/components/parameters/query-embed'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationPagination'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      tags:
        - Agents
  '/agents/{agentId}/monitors':
    get:
      summary: Return agent monitors
      description: Return agent monitors
      operationId: getAgentMonitors
      parameters:
        - $ref: '#/components/parameters/path-agentId'
        - $ref: '#/components/parameters/query-embed'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentMonitorPagination'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      tags:
        - Agents
    post:
      summary: Add or update an agent monitor
      description: Add or update an agent monitor
      operationId: postAgentMonitor
      parameters:
        - $ref: '#/components/parameters/path-agentId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentMonitor'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentMonitor'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          $ref: '#/components/responses/409'
      tags:
        - Agents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgentMonitorInput'
        description: Agent Monitor
        required: true
    put:
      summary: Replace agent monitors
      description: Replace agent monitors
      operationId: putAgentMonitors
      parameters:
        - $ref: '#/components/parameters/path-agentId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentMonitorPagination'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          $ref: '#/components/responses/409'
      tags:
        - Agents
      requestBody:
        content:
          application/json:
            schema:
              description: An array containing the agent monitors
              type: array
              items:
                $ref: '#/components/schemas/AgentMonitorInput'
        description: An array containing the agent monitors
        required: true
  '/agents/{agentId}/monitors/{monitorId}':
    delete:
      summary: Delete an agent monitor
      description: Delete an agent monitor
      operationId: deleteAgentMonitor
      parameters:
        - $ref: '#/components/parameters/path-agentId'
        - $ref: '#/components/parameters/path-monitorId'
        - $ref: '#/components/parameters/query-embed'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentMonitor'
        '204':
          $ref: '#/components/responses/204'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          $ref: '#/components/responses/409'
      tags:
        - Agents
  '/agents/{agentId}/owners':
    get:
      summary: Return agent owners
      description: Return agent owners
      operationId: getAgentOwners
      parameters:
        - $ref: '#/components/parameters/path-agentId'
        - $ref: '#/components/parameters/query-embed'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentOwnerPagination'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      tags:
        - Agents
    post:
      summary: Add an agent owner
      description: Add an agent owner
      operationId: postAgentOwner
      parameters:
        - $ref: '#/components/parameters/path-agentId'
        - $ref: '#/components/parameters/query-embed'
      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentOwner'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentOwner'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          $ref: '#/components/responses/409'
      tags:
        - Agents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgentOwnerInput'
        description: Owner
        required: true
  '/agents/{agentId}/owners/{personId}':
    delete:
      summary: Delete an agent owner
      description: Delete an agent owner
      operationId: deleteAgentOwner
      parameters:
        - $ref: '#/components/parameters/path-agentId'
        - $ref: '#/components/parameters/path-personId'
        - $ref: '#/components/parameters/query-embed'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentOwner'
        '204':
          $ref: '#/components/responses/204'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          $ref: '#/components/responses/409'
      tags:
        - Agents
  '/agent-installers/{versionId}':
    get:
      summary: Returns information about agent install packages
      description: Returns information about agent install packages
      operationId: getAgentInstaller
      parameters:
        - $ref: '#/components/parameters/path-versionId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentInstaller'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      tags:
        - Agents
  /audits:
    get:
      summary: Audit records
      description: Audit records
      operationId: getAudits
      parameters:
        - description: The effect of this param is to trigger the use of the audit store and importantly act as an upper bound for recency. This is important because the auditstore is eventually consistent. Ask for the audits at=, then make the same call a few seconds later and you may get a different result. Ask for the audits at= and and the results will never change, because all the audits in transit would have arrived.
          in: query
          name: at
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/query-from'
        - $ref: '#/components/parameters/query-to'
        - $ref: '#/components/parameters/query-after'
        - $ref: '#/components/parameters/query-before'
        - $ref: '#/components/parameters/query-event'
        - $ref: '#/components/parameters/query-person'
        - $ref: '#/components/parameters/query-device'
        - $ref: '#/components/parameters/query-auditType'
        - $ref: '#/components/parameters/query-embed'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditPagination'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
      tags:
        - Audit
  /built-in-plans:
    post:
      summary: Create or update a built-in communication plan
      description: Create or update a built-in communication plan
      operationId: postBuiltInPlan
      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plan'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plan'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '409':
          $ref: '#/components/responses/409'
      tags:
        - Communication Plans
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuiltInPlanInput'
        description: Built-in plan
        required: true
  /conferences:
    get:
      summary: Get conferences
      description: Returns information about conferences
      operationId: getConferences
      parameters:
        - description: Filter by associated events
          in: query
          name: event
          required: false
          schema:
            type: string
        - description: Filter by status
          in: query
          name: status
          required: false
          schema:
            type: string
            enum:
              - INACTIVE
              - WAITING
              - ACTIVE
        - description: Filter by case insensitive substring match within name
          in: query
          name: name
          required: false
          schema:
            type: string
        - description: Filter by case insensitive substring match within description
          in: query
          name: description
          required: false
          schema:
            type: string
        - description: Filter by case insensitive substring match within bridge number
          in: query
          name: bridgeId
          required: false
          schema:
            type: string
        - description: Filter by case insensitive substring match within host
          in: query
          name: host
          required: false
          schema:
            type: string
        - description: Sort results by
          in: query
          name: sortBy
          required: false
          schema:
            type: string
            enum:
              - STATUS
              - NAME
              - HOST
              - START_TIME
        - $ref: '#/components/parameters/query-sortOrder'
        - $ref: '#/components/parameters/query-at'
        - $ref: '#/components/parameters/query-offset'
        - $ref: '#/components/parameters/query-limit'
        - $ref: '#/components/parameters/query-include'
        - description: Domain entities to embed in the response (e.g. host,activeParticipantCount,participants,events)
          in: query
          name: embed
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConferencePagination'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
      tags:
        - Conferences
  '/conferences/{conferenceId}':
    get:
      summary: Returns information about a conference
      description: Returns information about a conference
      operationId: getConference
      parameters:
        - $ref: '#/components/parameters/path-conferenceId'
        - $ref: '#/components/parameters/query-include'
        - $ref: '#/components/parameters/query-at'
        - $ref: '#/components/parameters/query-embed'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Conference'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      tags:
        - Conferences
  '/conferences/{conferenceId}/participants':
    get:
      summary: Get conference participants
      description: Returns information about conference participants
      operationId: getConferenceParticipants
      parameters:
        - $ref: '#/components/parameters/path-conferenceId'
        - $ref: '#/components/parameters/query-at'
        - $ref: '#/components/parameters/query-offset'
        - $ref: '#/components/parameters/query-limit'
        - $ref: '#/components/parameters/query-include'
        - $ref: '#/components/parameters/query-embed'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConferenceParticipantPagination'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      tags:
        - Conferences
    post:
      summary: Add a conference participant
      description: Add a conference participant
      operationId: postConferenceParticipant
      parameters:
        - $ref: '#/components/parameters/path-conferenceId'
      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConferenceParticipant'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConferenceParticipant'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '409':
          $ref: '#/components/responses/409'
      tags:
        - Conferences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConferenceParticipantInput'
        description: A new conference participant
        required: true
  /countries:
    get:
      description: List of countries
      operationId: getCountries
      parameters:
        - $ref: '#/components/parameters/query-used'
        - $ref: '#/components/parameters/query-at'
        - $ref: '#/components/parameters/query-offset'
        - $ref: '#/components/parameters/query-limit'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CountryPagination'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
      summary: List of countries
      tags:
        - Countries
  /deep-links:
    get:
      summary: Returns information about deep links
      description: Returns information about deep links
      operationId: getDeepLinks
      parameters:
        - $ref: '#/components/parameters/query-person'
        - description: Deep link code
          in: query
          name: code
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeepLinkPagination'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
      tags:
        - Deep Links
    post:
      description: >-
        Generate a single use, expiring, link with associated action and meta
        data
      operationId: postDeepLink
      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeepLink'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeepLink'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '409':
          $ref: '#/components/responses/409'
      summary: Create or update a deep link
      tags:
        - Deep Links
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeepLinkInput'
        description: An object that contains the definition of the new link
        required: true
  '/deep-links/{deepLinkToken}':
    get:
      description: Returns information about a deep link
      operationId: getDeepLink
      parameters:
        - $ref: '#/components/parameters/path-deepLinkToken'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeepLink'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      summary: Returns information about a deep link
      tags:
        - Deep Links
  /device-names:
    get:
      description: Returns information about device names
      operationId: getDeviceNames
      parameters:
        - $ref: '#/components/parameters/query-deviceType'
        - $ref: '#/components/parameters/query-deviceName'
        - $ref: '#/components/parameters/query-offset'
        - $ref: '#/components/parameters/query-limit'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceNamePagination'
        '401':
          $ref: '#/components/responses/401'
      summary: Returns information about device names
      tags:
        - Device Names
  /device-types:
    get:
      description: Returns device types
      operationId: getDeviceTypes
      parameters:
        - $ref: '#/components/parameters/query-offset'
        - $ref: '#/components/parameters/query-limit'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceTypePagination'
        '401':
          $ref: '#/components/responses/401'
      summary: Returns device types
      tags:
        - Device Types
  /devices:
    get:
      summary: Returns information about devices
      description: Returns information about devices
      operationId: getDevices
      parameters:
        - $ref: '#/components/parameters/query-deviceType'
        - $ref: '#/components/parameters/query-phoneNumberFormat'
        - description: Recipient status
          in: query
          name: status
          required: false
          schema:
            type: string
            enum:
              - ACTIVE
              - INACTIVE
              - INVALID
        - $ref: '#/components/parameters/query-at'
        - $ref: '#/components/parameters/query-offset'
        - $ref: '#/components/parameters/query-limit'
        - $ref: '#/components/parameters/query-embed'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DevicePagination'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
      tags:
        - Devices
    post:
      description: Add a device
      operationId: postDevice
      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '409':
          $ref: '#/components/responses/409'
      summary: Add a device
      tags:
        - Devices
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceInput'
        description: An object that contains the definition of the new device
        required: true
  '/devices/{deviceId}':
    get:
      description: >-
        Returns information about a device. Use embed=timeframes to include
        device timeframes in the response
      operationId: getDevice
      parameters:
        - $ref: '#/components/parameters/path-deviceId'
        - $ref: '#/components/parameters/query-embed'
        - $ref: '#/components/parameters/query-at'
        - $ref: '#/components/parameters/query-phoneNumberFormat'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      summary: Returns information about a device
      tags:
        - Devices
    delete:
      description: Deletes a device and removes it from the owner's device list
      operationId: deleteDevice
      parameters:
        - $ref: '#/components/parameters/path-deviceId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
        '204':
          $ref: '#/components/responses/204'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '409':
          $ref: '#/components/responses/409'
      summary: Deletes a device
      tags:
        - Devices
  '/devices/{deviceId}/notifications':
    delete:
      summary: De-link notifications for a device
      description: De-link notifications for a device
      operationId: deleteDeviceNotifications
      parameters:
        - $ref: '#/components/parameters/path-deviceId'
        - description: Only repeat notifications
          in: query
          name: repeat
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: OK
        '204':
          $ref: '#/components/responses/204'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '409':
          $ref: '#/components/responses/409'
      tags:
        - Notifications
  /device-tests:
    post:
      summary: Test a device
      description: Test a device
      operationId: postDeviceTest
      responses:
        '202':
          description: Accepted
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
      tags:
        - Devices
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceTestInput'
        description: Test a device
        required: true
  '/downloads/{downloadId}':
    get:
      summary: Download a file
      description: Download a file
      operationId: getDownload
      parameters:
        - description: Download identifier
          in: path
          name: downloadId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A file
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
      tags:
        - File Transfer
  /dynamic-teams:
    get:
      summary: Get dynamic teams
      description: Get dynamic teams
      operationId: getDynamicTeams
      parameters:
        - $ref: '#/components/parameters/query-name'
        - $ref: '#/components/parameters/query-site'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DynamicTeamPagination'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
      tags:
        - Dynamic Teams
    post:
      summary: Add or update a dynamic team
      description: Add or update a dynamic team
      operationId: postDynamicTeam
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DynamicTeamInput'
        required: true
      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DynamicTeam'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DynamicTeam'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '409':
          $ref: '#/components/responses/409'
      tags:
        - Dynamic Teams
  '/dynamic-teams/{dynamicTeamId}':
    get:
      summary: Get a dynamic team
      description: Get a dynamic team
      operationId: getDynamicTeam
      parameters:
        - $ref: '#/components/parameters/path-dynamicTeamId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DynamicTeam'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      tags:
        - Dynamic Teams
    delete:
      summary: Delete a dynamic team
      description: Delete a dynamic team
      operationId: deleteDynamicTeam
      parameters:
        - $ref: '#/components/parameters/path-dynamicTeamId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DynamicTeam'
        '204':
          $ref: '#/components/responses/204'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
      tags:
        - Dynamic Teams
  /email-delivery-status-notifications:
    post:
      summary: Email delivery status notification
      description: Email delivery status notification
      operationId: postEmailDeliveryStatusNotification
      responses:
        '202':
          description: Accepted
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
      tags:
        - Email Delivery Status Notification
      requestBody:
        content:
          application/json:
            schema:
              description: Email delivery status notifications
              type: array
              items:
                $ref: '#/components/schemas/EmailDeliveryStatus'
              minItems: 1
              maxItems: 1000
        description: Email delivery status notifications
        required: true
  /email-delivery-status-notifications/mailgun-bounce:
    post:
      summary: MailGun email delivery status notifications
      description: MailGun email delivery status notifications
      operationId: postEmailDeliveryStatusNotificationMailGun
      responses:
        '202':
          description: Accepted
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
      tags:
        - Email Delivery Status Notification
  /email-delivery-status-notifications/sendgrid:
    post:
      summary: SendGrid email delivery status notifications
      description: SendGrid email delivery status notifications
      operationId: postEmailDeliveryStatusNotificationSendGrid
      responses:
        '202':
          description: Accepted
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
      tags:
        - Email Delivery Status Notification
  /events:
    get:
      summary: Get Events
      description: Returns a list of event resources in the xMatters system
      operationId: getEvents
      parameters:
        - $ref: '#/components/parameters/query-eventType'
        - $ref: '#/components/parameters/query-plan'
        - $ref: '#/components/parameters/query-form'
        - $ref: '#/components/parameters/query-integration'
        - $ref: '#/components/parameters/query-submitter'
        - $ref: '#/components/parameters/query-priority'
        - $ref: '#/components/parameters/query-propertyName'
        - $ref: '#/components/parameters/query-propertyValue'
        - $ref: '#/components/parameters/query-request'
        - description: Filter by associated conferences
          in: query
          name: conference
          required: false
          schema:
            type: string
        - description: Event status
          in: query
          name: status
          required: false
          schema:
            type: string
            enum:
              - ACTIVE
              - SUSPENDED
              - TERMINATED
        - description: Search string
          in: query
          name: search
          required: false
          schema:
            type: string
        - description: Restrict search to these fields (comma separated list of attribute names, exact match). Supported attributes are name
          in: query
          name: fields
          required: false
          schema:
            type: string
        - description: Sort results by
          in: query
          name: sortBy
          required: false
          schema:
            type: string
            enum:
              - STATUS
              - EVENT_ID
              - SUBMITTER
              - START_TIME
              - NAME
              - PLAN
        - $ref: '#/components/parameters/query-sortOrder'
        - $ref: '#/components/parameters/query-from'
        - $ref: '#/components/parameters/query-to'
        - $ref: '#/components/parameters/query-before'
        - $ref: '#/components/parameters/query-after'
        - $ref: '#/components/parameters/query-at'
        - description: Domain entities to embed in the response (e.g. form,integration,recipients,responseOptions,submitter,annotations)
          in: query
          name: embed
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventPagination'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
      tags:
        - Events
    post:
      summary: Submit or update an event
      description: Submit or update an event
      operationId: postEvent
      requestBody:
        $ref: '#/components/requestBodies/EventInput'
      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '409':
          $ref: '#/components/responses/409'
      tags:
        - Events
  '/events/{eventId}':
    get:
      description: >-
        Returns information about an event. Use embed=conference,recipients to
        include conference and resolved recipients in the response
      operationId: getEvent
      parameters:
        - $ref: '#/components/parameters/path-eventId'
        - $ref: '#/components/parameters/query-at'
        - description: Domain entities to embed in the response (e.g. form,integration,recipients,responseOptions,submitter,annotations)
          in: query
          name: embed
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      summary: Returns information about an event
      tags:
        - Events
  '/events/{eventId}/recipients':
    get:
      description: Returns information about event recipients
      operationId: getEventRecipients
      parameters:
        - $ref: '#/components/parameters/path-eventId'
        - description: Case insensitive substring match within firstName, lastName, id, targetName, webLogin, email, phoneNumber. Search terms may be separated by spaces, results are returned that match ANY of the search terms
          in: query
          name: search
          required: false
          schema:
            type: string
        - description: searchType
          in: query
          name: searchType
          required: false
          schema:
            type: string
            enum:
              - CONTAINS
              - STARTS_WITH
              - ENDS_WITH
              - EQUALS
        - description: recipientType
          in: query
          name: recipientType
          required: false
          schema:
            type: string
            enum:
              - PERSON
              - DEVICE
              - GROUP
        - description: targeted
          in: query
          name: targeted
          required: false
          schema:
            type: boolean
        - description: deliveryStatus
          in: query
          name: deliveryStatus
          required: false
          schema:
            type: string
            enum:
              - PENDING
              - DELIVERED
              - RESPONDED
              - FAILED
        - $ref: '#/components/parameters/query-at'
        - $ref: '#/components/parameters/query-offset'
        - $ref: '#/components/parameters/query-limit'
        - $ref: '#/components/parameters/query-embed'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecipientPagination'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      summary: Returns information about event recipients
      tags:
        - Events
  '/events/{eventId}/recipients/{recipientId}/notifications':
    get:
      summary: Retrieve event recipient notifications
      description: Retrieve event recipient notifications
      operationId: getEventRecipientNotifications
      parameters:
        - $ref: '#/components/parameters/path-eventId'
        - $ref: '#/components/parameters/path-recipientId'
        - description: deliveryStatus
          in: query
          name: deliveryStatus
          required: false
          schema:
            type: string
            enum:
              - PENDING
              - DELIVERED
              - RESPONDED
              - FAILED
        - $ref: '#/components/parameters/query-at'
        - $ref: '#/components/parameters/query-offset'
        - $ref: '#/components/parameters/query-limit'
        - description: Domain entities to embed in the response (e.g. responseOptions)
          in: query
          name: embed
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationPagination'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      tags:
        - Events
  '/events/{eventId}/annotations':
    get:
      summary: Get event annotations
      description: Get event annotations
      operationId: getEventAnnotations
      parameters:
        - $ref: '#/components/parameters/path-eventId'
        - $ref: '#/components/parameters/query-at'
        - $ref: '#/components/parameters/query-offset'
        - $ref: '#/components/parameters/query-limit'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventAnnotationPagination'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      tags:
        - Events
    post:
      summary: Add an event annotation
      description: Add an event annotation
      operationId: postEventAnnotation
      parameters:
        - $ref: '#/components/parameters/path-eventId'
      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventAnnotation'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventAnnotation'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '409':
          $ref: '#/components/responses/409'
      tags:
        - Events
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventAnnotationInput'
        description: An event annotation
        required: true
  '/events/{eventId}/annotations/{annotationId}':
    delete:
      summary: Remove an event annotation
      description: Remove an event annotation
      operationId: deleteEventAnnotation
      parameters:
        - $ref: '#/components/parameters/path-eventId'
        - $ref: '#/components/parameters/path-annotationId'
        - $ref: '#/components/parameters/query-at'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventAnnotation'
        '204':
          $ref: '#/components/responses/204'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
      tags:
        - Events
    get:
      summary: Get an event annotation
      description: Get an event annotation
      operationId: getEventAnnotation
      parameters:
        - $ref: '#/components/parameters/path-eventId'
        - $ref: '#/components/parameters/path-annotationId'
        - $ref: '#/components/parameters/query-at'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventAnnotation'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      tags:
        - Events
  '/events/{eventId}/messages':
    get:
      summary: Get messages
      description: Get messages
      operationId: getEventMessages
      parameters:
        - $ref: '#/components/parameters/path-eventId'
        - $ref: '#/components/parameters/query-at'
        - $ref: '#/components/parameters/query-offset'
        - $ref: '#/components/parameters/query-limit'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessagePagination'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      tags:
        - Messages
  '/events/{eventId}/messages/{messageId}':
    get:
      summary: Get a message
      description: Get a message
      operationId: getEventMessage
      parameters:
        - $ref: '#/components/parameters/path-eventId'
        - $ref: '#/components/parameters/path-messageId'
        - $ref: '#/components/parameters/query-at'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      tags:
        - Messages
  '/events/{eventId}/file-attachments':
    get:
      summary: Get file attachments
      description: Get file attachments
      operationId: getEventFileAttachments
      parameters:
        - $ref: '#/components/parameters/path-eventId'
        - $ref: '#/components/parameters/query-offset'
        - $ref: '#/components/parameters/query-limit'
        - $ref: '#/components/parameters/query-at'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileAttachmentPagination'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      tags:
        - Events
    post:
      summary: Upload a file attachment
      description: Upload a file attachment
      operationId: postEventFileAttachment
      parameters:
        - $ref: '#/components/parameters/path-eventId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileAttachment'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '409':
          $ref: '#/components/responses/409'
      tags:
        - Events
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                attachment:
                  description: File attachment
                  type: string
                  format: binary
              required:
                - attachment
  /event-filters:
    get:
      summary: Get event filters
      description: Get event filters
      operationId: getEventFilters
      parameters:
        - $ref: '#/components/parameters/query-offset'
        - $ref: '#/components/parameters/query-limit'
        - $ref: '#/components/parameters/query-embed'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventFilterPagination'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
      tags:
        - Filters
    post:
      summary: Add or update event filters
      description: Add or update event filters
      operationId: postEventFilter
      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventFilter'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventFilter'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '409':
          $ref: '#/components/responses/409'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventFilterInput'
        required: true
      tags:
        - Filters
  '/event-filters/{filterId}':
    parameters:
      - $ref: '#/components/parameters/path-filterId'
    get:
      summary: Get event filter
      description: Get event filter
      operationId: getEventFilter
      parameters:
        - $ref: '#/components/parameters/query-embed'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventFilter'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      tags:
        - Filters
    delete:
      summary: Delete event filter
      description: Delete event filter
      operationId: deleteEventFilter
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventFilter'
        '204':
          $ref: '#/components/responses/204'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '409':
          $ref: '#/components/responses/409'
      tags:
        - Filters
  /event-schedules:
    get:
      summary: Get event schedules
      description: Returns a list of event schedules
      operationId: getEventSchedules
      parameters:
        - description: Name
          in: query
          name: name
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/query-event'
        - $ref: '#/components/parameters/query-offset'
        - $ref: '#/components/parameters/query-limit'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSchedulePagination'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
      tags:
        - Event Schedules
    post:
      summary: Insert or update an event schedule
      description: Insert or update an event schedule
      operationId: postEventSchedule
      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSchedule'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSchedule'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '409':
          $ref: '#/components/responses/409'
      tags:
        - Event Schedules
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventScheduleInput'
        required: true
  '/event-schedules/{eventScheduleId}':
    get:
      summary: Get event schedule
      description: Returns an event schedule
      operationId: getEventSchedules
      parameters:
        - description: Event schedule id or name
          in: path
          name: eventScheduleId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSchedule'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
      tags:
        - Event Schedules
    delete:
      summary: Delete an event schedule
      description: Delete an event schedule
      operationId: deleteEventSchedule
      parameters:
        - description: Event schedule id or name
          in: path
          name: eventScheduleId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSchedule'
        '204':
          $ref: '#/components/responses/204'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
      tags:
        - Event Schedules
  /event-suppressions:
    get:
      summary: Get event suppressions
      description: Get event suppressions
      operationId: getEventSuppressions
      parameters:
        - $ref: '#/components/parameters/query-event'
        - $ref: '#/components/parameters/query-offset'
        - $ref: '#/components/parameters/query-limit'
        - $ref: '#/components/parameters/query-embed'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSuppressionPagination'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
      tags:
        - Event Suppressions
  '/event-suppressions/{eventSuppressionId}':
    get:
      summary: Get event suppression
      description: Get event suppression
      operationId: getEventSuppression
      parameters:
        - $ref: '#/components/parameters/path-eventSuppressionId'
        - $ref: '#/components/parameters/query-embed'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSuppression'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      tags:
        - Event Suppressions
  /feature-toggles:
    get:
      tags:
        - Feature Toggles
      summary: Get feature toggles
      description: Get feature toggles
      operationId: getFeatureToggles
      parameters:
        - name: name
          in: query
          description: The toggle name
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureTogglePagination'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
  /forms:
    get:
      summary: List forms
      description: List forms
      operationId: getForms
      parameters:
        - description: Search
          in: query
          name: search
          required: false
          schema:
            type: string
        - description: Sort results by
          in: query
          name: sortBy
          required: false
          schema:
            type: string
            enum:
              - NAME
              - USER_DEFINED
        - description: Comma separated list of linked domain entities to embed in the response
          in: query
          name: embed
          required: false
          schema:
            type: string
          example: plan,recipients,responseOptions,messages
        - $ref: '#/components/parameters/query-sortOrder'
        - $ref: '#/components/parameters/query-at'
        - $ref: '#/components/parameters/query-offset'
        - $ref: '#/components/parameters/query-limit'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormPagination'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
      tags:
        - Forms
  /groups:
    get:
      summary: List Groups
      description: List Groups
      operationId: getGroups
      parameters:
        - description: Case insensitive substring match within name, description. Search terms may be separated by spaces, results are returned that match ALL if the search terms of the operand is set to AND, or ANY of the search terms if the operand is set to OR
          in: query
          name: search
          required: false
          schema:
            type: string
        - description: Group supervisors include this person. UUID or targetName
          in: query
          name: supervisor
          required: false
          schema:
            type: string
        - description: Operand to use in search
          in: query
          name: operand
          required: false
          schema:
            type: string
            enum:
              - OR
              - AND
            default: OR
        - description: Restrict search to these fields (comma separated list of attribute names, exact match). Supported attributes are name, description
          in: query
          name: fields
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/query-at'
        - $ref: '#/components/parameters/query-offset'
        - $ref: '#/components/parameters/query-limit'
        - $ref: '#/components/parameters/query-embed'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupPagination'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
      tags:
        - Groups
    post:
      description: Creates a group
      operationId: postGroup
      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '409':
          $ref: '#/components/responses/409'
      summary: Creates a group
      tags:
        - Groups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupInput'
        description: An object that contains a description of the new group
        required: true
  '/groups/{groupId}':
    delete:
      description: Deletes a Group
      operationId: deleteGroup
      parameters:
        - $ref: '#/components/parameters/path-groupId'
        - $ref: '#/components/parameters/query-at'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
        '204':
          $ref: '#/components/responses/204'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
      summary: Deletes a Group
      tags:
        - Groups
    get:
      description: Returns information about a Group
      operationId: getGroup
      parameters:
        - $ref: '#/components/parameters/path-groupId'
        - $ref: '#/components/parameters/query-at'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      summary: Returns information about a Group
      tags:
        - Groups
  '/groups/{groupId}/calendar':
    get:
      description: Shift occurrence calendar
      operationId: getGroupCalendar
      parameters:
        - $ref: '#/components/parameters/path-groupId'
        - $ref: '#/components/parameters/query-from'
        - $ref: '#/components/parameters/query-to'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShiftOccurrencePagination'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      summary: Shift occurrence calendar
      tags:
        - Group Calendar
  '/groups/{groupId}/members':
    get:
      description: List Group members
      operationId: getGroupMembers
      parameters:
        - $ref: '#/components/parameters/path-groupId'
        - $ref: '#/components/parameters/query-at'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupMemberPagination'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      summary: List Group members
      tags:
        - Group Members
    post:
      description: Add Group members
      operationId: postGroupMember
      parameters:
        - $ref: '#/components/parameters/path-groupId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupMember'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          $ref: '#/components/responses/409'
      summary: Add Group members
      tags:
        - Group Members
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecipientPointer'
        description: Member to add
        required: true
  '/groups/{groupId}/members/{memberId}':
    delete:
      description: Removes a Group Member
      operationId: deleteGroupMember
      parameters:
        - $ref: '#/components/parameters/path-groupId'
        - $ref: '#/components/parameters/path-memberId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupMember'
        '204':
          $ref: '#/components/responses/204'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/403'
      summary: Removes a Group Member
      tags:
        - Group Members
  '/groups/{groupId}/roster':
    get:
      description: >-
        List group roster. This is the same as group members with the notable
        exception that devices that are direct members of groups are not
        returned as such. They are instead returned in the devices of their
        owner (Person)
      operationId: getGroupRoster
      parameters:
        - $ref: '#/components/parameters/path-groupId'
        - $ref: '#/components/parameters/query-at'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RosterMemberPagination'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      summary: List group roster
      tags:
        - Group Members
  '/groups/{groupId}/shifts':
    get:
      description: List shifts
      operationId: getShifts
      parameters:
        - $ref: '#/components/parameters/path-groupId'
        - description: Filter by status
          in: query
          name: status
          required: false
          schema:
            type: string
            enum:
              - ACTIVE
              - INACTIVE
        - $ref: '#/components/parameters/query-embed'
        - $ref: '#/components/parameters/query-at'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShiftPagination'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      summary: List shifts
      tags:
        - Shifts
    post:
      description: Add or update a shift
      operationId: postShift
      parameters:
        - description: The group uuid or targetName
          in: path
          name: groupId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shift'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          $ref: '#/components/responses/409'
      summary: Add or update a shift
      tags:
        - Shifts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShiftInput'
        required: true
  '/groups/{groupId}/shifts/{shiftId}':
    get:
      description: Returns information about a Shift
      operationId: getShift
      parameters:
        - $ref: '#/components/parameters/path-groupId'
        - $ref: '#/components/parameters/path-shiftId'
        - $ref: '#/components/parameters/query-at'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shift'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      summary: Returns information about a Shift
      tags:
        - Shifts
    delete:
      summary: Delete a shift
      description: Delete a shift
      operationId: deleteShift
      parameters:
        - $ref: '#/components/parameters/path-groupId'
        - $ref: '#/components/parameters/path-shiftId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shift'
        '204':
          $ref: '#/components/responses/204'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '409':
          $ref: '#/components/responses/409'
      tags:
        - Shifts
  '/groups/{groupId}/shifts/{shiftId}/members':
    get:
      description: List Shift members
      operationId: getGroupShiftMembers
      parameters:
        - $ref: '#/components/parameters/path-groupId'
        - $ref: '#/components/parameters/path-shiftId'
        - $ref: '#/components/parameters/query-at'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShiftMemberPagination'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      summary: List Shift members
      tags:
        - Shift Members
    post:
      description: Add or update a shift membership
      operationId: postShiftMember
      parameters:
        - $ref: '#/components/parameters/path-groupId'
        - $ref: '#/components/parameters/path-shiftId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShiftMember'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          $ref: '#/components/responses/409'
      summary: Add or update a shift membership
      tags:
        - Shift Members
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShiftMemberInput'
        description: Shift Member
        required: true
  '/groups/{groupId}/shifts/{shiftId}/occurrences':
    get:
      summary: List shift occurrences
      description: >-
        List shift occurrences in reverse chronological order, by start time,
        before the given 'at' timestamp (this route is only available via the
        auditstore)
      operationId: getGroupShiftOccurrences
      parameters:
        - $ref: '#/components/parameters/path-groupId'
        - $ref: '#/components/parameters/path-shiftId'
        - $ref: '#/components/parameters/query-embed'
        - $ref: '#/components/parameters/query-at'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShiftOccurrencePagination'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      tags:
        - Shift Occurrences
  '/groups/{groupId}/supervisors':
    get:
      summary: List Group supervisors
      description: List Group supervisors
      operationId: getGroupSupervisors
      parameters:
        - $ref: '#/components/parameters/path-groupId'
        - $ref: '#/components/parameters/query-embed'
        - $ref: '#/components/parameters/query-at'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonPagination'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      tags:
        - Group Supervisors
  /imports:
    get:
      summary: Imports
      description: Imports
      operationId: getImports
      parameters:
        - $ref: '#/components/parameters/query-offset'
        - $ref: '#/components/parameters/query-limit'
        - $ref: '#/components/parameters/query-from'
        - $ref: '#/components/parameters/query-to'
        - $ref: '#/components/parameters/query-embed'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportPagination'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      tags:
        - File Transfer
  '/imports/{importId}':
    get:
      summary: Import
      description: Import
      operationId: getImport
      parameters:
        - $ref: '#/components/parameters/path-importId'
        - $ref: '#/components/parameters/query-embed'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Import'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      tags:
        - File Transfer
    patch:
      summary: Update an import
      description: Update an import
      operationId: patchImport
      parameters:
        - $ref: '#/components/parameters/path-importId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportUpdate'
        required: true
      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Import'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '409':
          $ref: '#/components/responses/409'
      tags:
        - File Transfer
  /integration-agents:
    get:
      summary: Returns information about agents
      description: Returns information about agents
      operationId: getIntegrationAgents
      parameters:
        - description: ACTIVE or INACTIVE
          in: query
          name: status
          required: false
          schema:
            type: string
            enum:
              - ACTIVE
              - INACTIVE
        - $ref: '#/components/parameters/query-offset'
        - $ref: '#/components/parameters/query-limit'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationAgentPagination'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
      tags:
        - Agents
    post:
      summary: Update an agent
      description: Update an agent
      operationId: postIntegrationAgent
      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationAgent'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          $ref: '#/components/responses/409'
      tags:
        - Agents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IntegrationAgentInput'
        description: Agent update data
        required: true
  '/integration-agents/{agentId}':
    delete:
      summary: Delete an agent
      description: Delete an agent
      operationId: deleteIntegrationAgent
      parameters:
        - $ref: '#/components/parameters/path-agentId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationAgent'
        '204':
          $ref: '#/components/responses/204'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '409':
          $ref: '#/components/responses/409'
      tags:
        - Agents
    get:
      summary: Returns information about an agent
      description: Returns information about an agent
      operationId: getIntegrationAgent
      parameters:
        - $ref: '#/components/parameters/path-agentId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationAgent'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      tags:
        - Agents
  /integration-services:
    get:
      summary: List integration services
      description: List integration services
      operationId: getIntegrationServices
      parameters:
        - $ref: '#/components/parameters/query-offset'
        - $ref: '#/components/parameters/query-limit'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationServicePagination'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
      tags:
        - Agents
  /logs:
    post:
      summary: Logging
      description: Logging
      operationId: postLogs
      responses:
        '202':
          description: Accepted
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '409':
          $ref: '#/components/responses/409'
      tags:
        - Logs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogEntryInput'
        description: A log entry
        required: true
  '/messages':
    get:
      summary: Get messages
      description: Get messages
      operationId: getMessages
      parameters:
        - $ref: '#/components/parameters/query-event'
        - $ref: '#/components/parameters/query-at'
        - $ref: '#/components/parameters/query-offset'
        - $ref: '#/components/parameters/query-limit'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessagePagination'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
      tags:
        - Messages
  '/messages/{messageId}':
    get:
      summary: Get a message
      description: Get a message
      operationId: getMessage
      parameters:
        - $ref: '#/components/parameters/path-messageId'
        - $ref: '#/components/parameters/query-at'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      tags:
        - Messages
  '/notifications/{notificationId}':
    delete:
      description: De-links a Notification
      operationId: deleteNotification
      parameters:
        - $ref: '#/components/parameters/path-notificationId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
        '204':
          $ref: '#/components/responses/204'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
      summary: De-links a Notification
      tags:
        - Notifications
  /notification-filters:
    get:
      summary: Get notification filters
      description: Get notification filters
      operationId: getNotificationFilters
      parameters:
        - $ref: '#/components/parameters/query-plan'
        - $ref: '#/components/parameters/query-form'
        - $ref: '#/components/parameters/query-integration'
        - $ref: '#/components/parameters/query-offset'
        - $ref: '#/components/parameters/query-limit'
        - $ref: '#/components/parameters/query-embed'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationFilterPagination'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
      tags:
        - Filters
    post:
      summary: Add or update notification filters
      description: Add or update notification filters
      operationId: postNotificationFilter
      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationFilter'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationFilter'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '409':
          $ref: '#/components/responses/409'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationFilterInput'
        required: true
      tags:
        - Filters
  '/notification-filters/{filterId}':
    parameters:
      - $ref: '#/components/parameters/path-filterId'
    get:
      summary: Get notification filter
      description: Get notification filter
      operationId: getNotificationFilter
      parameters:
        - $ref: '#/components/parameters/query-embed'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationFilter'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      tags:
        - Filters
    delete:
      summary: Delete notification filter
      description: Delete notification filter
      operationId: deleteNotificationFilter
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationFilter'
        '204':
          $ref: '#/components/responses/204'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '409':
          $ref: '#/components/responses/409'
      tags:
        - Filters
  /oauth2/authorize:
    get:
      summary: Authorize
      description: Authorize
      operationId: getOauth2Authorize
      parameters:
        - description: Client ID
          in: query
          name: client_id
          required: true
          schema:
            type: string
        - description: Response Type
          in: query
          name: response_type
          required: true
          schema:
            type: string
            enum:
              - code
        - description: Redirect URI
          in: query
          name: redirect_uri
          required: true
          schema:
            type: string
        - description: Scope
          in: query
          name: scope
          required: false
          schema:
            type: string
        - description: State
          in: query
          name: state
          required: false
          schema:
            type: string
      responses:
        '302':
          description: Redirect
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      tags:
        - Authentication
    post:
      summary: Authorize
      description: Authorize
      operationId: postOauth2Authorize
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                client_id:
                  type: string
                response_type:
                  type: string
                  enum:
                    - code
                redirect_uri:
                  type: string
                  format: url
                scope:
                  type: string
                state:
                  type: string
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      tags:
        - Authentication
  /oauth2/token:
    post:
      summary: Generate a token
      description: Generate a token
      operationId: postOauth2Token
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessToken'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      tags:
        - Authentication
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                grant_type:
                  type: string
                  enum:
                    - password
                    - refresh_token
                    - authorization_code
                client_id:
                  type: string
                client_secret:
                  type: string
                username:
                  type: string
                password:
                  type: string
                refresh_token:
                  type: string
                code:
                  type: string
  /on-call:
    get:
      summary: On call report
      description: On call report
      operationId: getOnCall
      parameters:
        - $ref: '#/components/parameters/query-at'
        - $ref: '#/components/parameters/query-embed'
        - $ref: '#/components/parameters/query-groups'
        - description: Comma separated list of person uuid or targetName, only group schedules that include these members should be returned
          in: query
          name: members
          required: false
          style: form
          schema:
            type: array
            items:
              type: string
        - $ref: '#/components/parameters/query-from'
        - $ref: '#/components/parameters/query-to'
        - $ref: '#/components/parameters/query-shift'
        - description: Limit number of shift occurrence members returned
          in: query
          name: membersPerShift
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OnCallPagination'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
      tags:
        - Reports
  /organization:
    get:
      summary: Returns information about the organization
      description: Returns information about the organization
      operationId: getOrganization
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
      tags:
        - Organization
    post:
      summary: Update an organization
      description: Update an organization
      operationId: postOrganization
      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '409':
          $ref: '#/components/responses/409'
      tags:
        - Organization
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationInput'
        description: Data for update
        required: true
    delete:
      summary: Deletes the organization
      description: >-
        Deletes the organization as determined by the domain. This is kind of a
        big deal so should be authorized only to services.
      operationId: deleteOrganization
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
        '204':
          $ref: '#/components/responses/204'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '409':
          $ref: '#/components/responses/409'
      tags:
        - Organization
  /organization/config:
    get:
      summary: Organization configuration
      description: Organization configuration
      operationId: getOrganizationConfig
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationConfig'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
      tags:
        - Organization
    post:
      summary: Set organization configuration
      description: Set organization configuration
      operationId: postOrganizationConfig
      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationConfig'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '409':
          $ref: '#/components/responses/409'
      tags:
        - Organization
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationConfigInput'
        description: Data for insert or update
        required: true
  /permissibles:
    get:
      summary: Search permissible entities
      description: Search permissible entities
      operationId: getPermissibles
      parameters:
        - $ref: '#/components/parameters/query-offset'
        - $ref: '#/components/parameters/query-limit'
        - $ref: '#/components/parameters/query-embed'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissiblePagination'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
      tags:
        - Permissable
  /people:
    get:
      summary: Retrieve information about users
      description: Retrieve information about users
      operationId: getPeople
      parameters:
        - description: Case insensitive substring match within firstName, lastName, id, targetName, webLogin, email, phoneNumber. Search terms may be separated by spaces, results are returned that match ANY of the search terms
          in: query
          name: search
          required: false
          schema:
            type: string
        - description: Recipient status
          in: query
          name: status
          required: false
          schema:
            type: string
            enum:
              - ACTIVE
              - INACTIVE
              - INVALID
        - $ref: '#/components/parameters/query-site'
        - $ref: '#/components/parameters/query-webLogin'
        - $ref: '#/components/parameters/query-role'
        - $ref: '#/components/parameters/query-propertyName'
        - $ref: '#/components/parameters/query-propertyValue'
        - $ref: '#/components/parameters/query-at'
        - $ref: '#/components/parameters/query-offset'
        - $ref: '#/components/parameters/query-limit'
        - $ref: '#/components/parameters/query-embed'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonPagination'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
      tags:
        - People
    post:
      description: Creates a new user
      operationId: postPerson
      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '409':
          $ref: '#/components/responses/409'
      summary: Creates a new user
      tags:
        - People
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonInput'
        description: An object that describes the new user
        required: true
  '/people/{personId}':
    delete:
      description: Deletes a user
      operationId: deletePerson
      parameters:
        - $ref: '#/components/parameters/path-personId'
        - $ref: '#/components/parameters/query-personMatch'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
        '204':
          $ref: '#/components/responses/204'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '409':
          $ref: '#/components/responses/409'
      summary: Deletes a user
      tags:
        - People
    get:
      description: Returns information about a user
      operationId: getPerson
      parameters:
        - $ref: '#/components/parameters/path-personId'
        - $ref: '#/components/parameters/query-personMatch'
        - $ref: '#/components/parameters/query-at'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      summary: Returns information about a user
      tags:
        - People
  '/people/{personId}/api-keys':
    get:
      summary: Get API keys
      description: Get API keys
      operationId: getPersonAPIKeys
      parameters:
        - $ref: '#/components/parameters/path-personId'
        - $ref: '#/components/parameters/query-offset'
        - $ref: '#/components/parameters/query-limit'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIKeyPagination'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      tags:
        - People
    post:
      summary: Add an API Key
      description: Add an API Key
      operationId: postPersonAPIKey
      parameters:
        - $ref: '#/components/parameters/path-personId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIKey'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIKey'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          $ref: '#/components/responses/409'
      tags:
        - People
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/APIKeyInput'
        description: API Key
        required: true
  '/people/{personId}/devices':
    get:
      description: >-
        Retrieves a list of a user's devices. Use embed=timeframes to include
        device timeframes in the response
      operationId: getPersonDevices
      parameters:
        - $ref: '#/components/parameters/path-personId'
        - $ref: '#/components/parameters/query-personMatch'
        - $ref: '#/components/parameters/query-phoneNumberFormat'
        - $ref: '#/components/parameters/query-at'
        - $ref: '#/components/parameters/query-embed'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DevicePagination'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      summary: Retrieves a list of a user's devices
      tags:
        - Devices
    put:
      description: Set devices. Returns the pagination of the person's devices
      operationId: putPersonDevices
      parameters:
        - $ref: '#/components/parameters/path-personId'
        - $ref: '#/components/parameters/query-personMatch'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DevicePagination'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '409':
          $ref: '#/components/responses/409'
      summary: Set devices
      tags:
        - Devices
      requestBody:
        content:
          application/json:
            schema:
              description: An array containing the device updates or insertions
              type: array
              items:
                $ref: '#/components/schemas/DeviceInput'
        description: An array containing the device updates or insertions
        required: true
  '/people/{personId}/groups':
    get:
      summary: Get user's groups
      description: >-
        Retrieves a list of a groups the user, or any of their devices is a
        member of
      operationId: getPersonGroups
      parameters:
        - $ref: '#/components/parameters/path-personId'
        - $ref: '#/components/parameters/query-personMatch'
        - $ref: '#/components/parameters/query-at'
        - $ref: '#/components/parameters/query-embed'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupPagination'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      tags:
        - People
  '/people/{personId}/group-memberships':
    get:
      summary: Get user's group memberships
      description: >-
        Retrieves a list of user's group memberships. Use embed=group to embed
        the group
      operationId: getPersonGroupMemberships
      parameters:
        - $ref: '#/components/parameters/path-personId'
        - $ref: '#/components/parameters/query-personMatch'
        - $ref: '#/components/parameters/query-at'
        - $ref: '#/components/parameters/query-embed'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupMemberPagination'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      tags:
        - People
  '/people/{personId}/on-call-reminder-config':
    get:
      tags:
        - On-Call Reminders
      summary: Configuration for on-call reminders
      description: Configuration for on-call reminders
      operationId: getPersonOnCallReminderConfig
      parameters:
        - $ref: '#/components/parameters/path-personId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OnCallReminderConfig'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    post:
      tags:
        - On-Call Reminders
      summary: Creates configuration for on-call reminders.
      description: Creates configuration for on-call reminders.
      operationId: postPersonOnCallReminderConfig
      parameters:
        - $ref: '#/components/parameters/path-personId'
      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OnCallReminderConfig'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OnCallReminderConfig'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '409':
          $ref: '#/components/responses/409'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OnCallReminderConfigInput'
        description: An object that describes the configuration for on-call reminders.
        required: true
  '/people/{personId}/refresh-tokens':
    get:
      summary: Returns refresh tokens for a user
      description: Returns refresh tokens for a user
      operationId: getPersonRefreshTokens
      parameters:
        - $ref: '#/components/parameters/path-personId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RefreshTokenPagination'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      tags:
        - Authentication
    delete:
      summary: Revoke all refresh tokens for a user
      description: Revoke all refresh tokens for a user
      operationId: deletePersonRefreshTokens
      parameters:
        - $ref: '#/components/parameters/path-personId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RefreshTokenPagination'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      tags:
        - Authentication
  '/people/{personId}/refresh-tokens/{tokenId}':
    delete:
      summary: Invalidates a person's refresh token
      description: Invalidates a person's refresh token
      operationId: deletePersonRefreshToken
      parameters:
        - $ref: '#/components/parameters/path-personId'
        - $ref: '#/components/parameters/path-tokenId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RefreshToken'
        '204':
          $ref: '#/components/responses/204'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '409':
          $ref: '#/components/responses/409'
      tags:
        - Authentication
  '/people/{personId}/roles':
    get:
      summary: Retrieves a list of a user's roles
      description: Retrieves a list of a user's roles
      operationId: getPersonRoles
      parameters:
        - $ref: '#/components/parameters/path-personId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolePagination'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      tags:
        - Authorization
    patch:
      summary: Add user roles
      description: Add user roles
      operationId: patchPersonRoles
      parameters:
        - $ref: '#/components/parameters/path-personId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolePagination'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      tags:
        - Authorization
      requestBody:
        content:
          application/json:
            schema:
              description: An array containing the roles to add
              type: array
              items:
                $ref: '#/components/schemas/RolePointer'
        description: Role
        required: true
  '/people/{personId}/roles/{roleId}':
    delete:
      tags:
        - Authorization
      summary: Remove a person's role
      description: Remove a person's role
      operationId: deletePersonRole
      parameters:
        - $ref: '#/components/parameters/path-personId'
        - $ref: '#/components/parameters/path-roleId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
        '204':
          $ref: '#/components/responses/204'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '409':
          $ref: '#/components/responses/409'
  '/people/{personId}/functions':
    get:
      tags:
        - Authorization
      summary: Retrieves a list of a user's functions
      description: Retrieves a list of a user's functions
      operationId: getPersonFunctions
      parameters:
        - $ref: '#/components/parameters/path-personId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FunctionPagination'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/people/{personId}/password':
    post:
      tags:
        - Authorization
      summary: Set user password
      description: Set user password
      operationId: postPersonPassword
      parameters:
        - $ref: '#/components/parameters/path-personId'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      requestBody:
        content:
          application/json:
            schema:
              description: password
              properties:
                password:
                  type: string
              required:
                - password
        description: Password
        required: true
  '/people/{personId}/permissions':
    get:
      tags:
        - Authorization
      summary: Retrieves a list of a user's permissions
      description: Retrieves a list of a user's permissions
      operationId: getPersonPermissions
      parameters:
        - $ref: '#/components/parameters/path-personId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionPagination'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/people/{personId}/subscriptions':
    get:
      summary: List subscriptions for a person
      description: List subscriptions for a person
      operationId: getPersonSubscriptions
      parameters:
        - $ref: '#/components/parameters/path-personId'
        - description: Filter by name
          in: query
          name: name
          required: false
          schema:
            type: string
        - description: Filter by case insensitive substring match within description
          in: query
          name: description
          required: false
          schema:
            type: string
        - description: Filter subscription form name
          in: query
          name: subscriptionFormName
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/query-at'
        - $ref: '#/components/parameters/query-offset'
        - $ref: '#/components/parameters/query-limit'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionPagination'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
      tags:
        - Subscriptions
  '/people/{personId}/subscriptions/{subscriptionId}':
    delete:
      summary: Delete a subscription for a person
      description: Delete the subscription if the person is the owner. Otherwise remove the person from the subscription recipients.
      operationId: deletePersonSubscription
      parameters:
        - $ref: '#/components/parameters/path-personId'
        - $ref: '#/components/parameters/path-subscriptionId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
        '204':
          $ref: '#/components/responses/204'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '409':
          $ref: '#/components/responses/409'
      tags:
        - Subscriptions
  '/people/{personId}/supervisors':
    get:
      tags:
        - People
      summary: Retrieves a list of a user's supervisors
      description: Retrieves a list of a user's supervisors
      operationId: getPersonSupervisors
      parameters:
        - $ref: '#/components/parameters/path-personId'
        - $ref: '#/components/parameters/query-at'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonPagination'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  /plans:
    get:
      summary: List communication plans
      description: List communication plans
      operationId: getPlans
      parameters:
        - $ref: '#/components/parameters/query-planType'
        - $ref: '#/components/parameters/query-builtInPlanType'
        - $ref: '#/components/parameters/query-name'
        - description: Is a custom integration (Has email initiation, or is webservice enabled, or has an inbound, or outbound integration)
          in: query
          name: customIntegration
          required: false
          schema:
            type: boolean
        - description: Is accessible by specified user
          in: query
          name: accessibleBy
          required: false
          schema:
            type: string
        - description: Case insensitive contains within name, description. Search terms may be separated by spaces, results are returned that match ANY of the search terms
          in: query
          name: search
          required: false
          schema:
            type: string
        - description: Comma separated list of linked domain entities to embed in the response
          in: query
          name: embed
          required: false
          example: constants,endpoints,forms,integrations,integrations.ownerApiKey,integrations.agents,permitted,propertyDefinitions
          schema:
            type: string
        - description: Sort results by
          in: query
          name: sortBy
          required: false
          schema:
            type: string
            enum:
              - NAME
              - USER_DEFINED
        - $ref: '#/components/parameters/query-at'
        - $ref: '#/components/parameters/query-sortOrder'
        - $ref: '#/components/parameters/query-offset'
        - $ref: '#/components/parameters/query-limit'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanPagination'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
      tags:
        - Communication Plans
    post:
      summary: Add or update a communication plan
      description: Add or update a communication plan
      operationId: postPlan
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plan'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          $ref: '#/components/responses/409'
      tags:
        - Communication Plans
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlanInput'
        description: Plan
        required: true
  '/plans/{planId}':
    get:
      summary: Get communication plan
      description: Get communication plan
      operationId: getPlan
      parameters:
        - $ref: '#/components/parameters/path-planId'
        - description: Comma separated list of linked domain entities to embed in the response
          in: query
          name: embed
          required: false
          example: constants,endpoints,forms,integrations,integrations.ownerApiKey,integrations.agents,permitted,propertyDefinitions
          schema:
            type: string
        - $ref: '#/components/parameters/query-at'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plan'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      tags:
        - Communication Plans
    delete:
      summary: Delete a plan
      description: Delete a plan
      operationId: deletePlan
      parameters:
        - $ref: '#/components/parameters/path-planId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plan'
        '204':
          $ref: '#/components/responses/204'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '409':
          $ref: '#/components/responses/409'
      tags:
        - Communication Plans
  '/plans/{planId}/constants':
    get:
      summary: List plan constants
      description: List plan constants
      operationId: getPlanConstants
      parameters:
        - $ref: '#/components/parameters/path-planId'
        - $ref: '#/components/parameters/query-at'
        - $ref: '#/components/parameters/query-offset'
        - $ref: '#/components/parameters/query-limit'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConstantPagination'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      tags:
        - Communication Plans
    post:
      summary: Add or update plan constants
      description: Add or update plan constants
      operationId: postPlanConstant
      parameters:
        - $ref: '#/components/parameters/path-planId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Constant'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          $ref: '#/components/responses/409'
      tags:
        - Communication Plans
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConstantInput'
        description: Plan Constant
        required: true
  '/plans/{planId}/constants/{constantId}':
    get:
      summary: Get communication plan constant
      description: Get communication plan constant
      operationId: getPlanConstant
      parameters:
        - $ref: '#/components/parameters/path-planId'
        - $ref: '#/components/parameters/path-constantId'
        - $ref: '#/components/parameters/query-embed'
        - $ref: '#/components/parameters/query-at'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Constant'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      tags:
        - Communication Plans
    delete:
      summary: Delete a plan constant
      description: Delete a plan constant
      operationId: deletePlanConstant
      parameters:
        - $ref: '#/components/parameters/path-planId'
        - $ref: '#/components/parameters/path-constantId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Constant'
        '204':
          $ref: '#/components/responses/204'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '409':
          $ref: '#/components/responses/409'
      tags:
        - Communication Plans
  '/plans/{planId}/endpoints':
    get:
      summary: List plan endpoints
      description: List plan endpoints
      operationId: getPlanEndpoints
      parameters:
        - $ref: '#/components/parameters/path-planId'
        - $ref: '#/components/parameters/query-at'
        - $ref: '#/components/parameters/query-offset'
        - $ref: '#/components/parameters/query-limit'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EndpointPagination'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      tags:
        - Communication Plans
    post:
      summary: Add or update plan endpoints
      description: Add or update plan endpoints
      operationId: postPlanEndpoint
      parameters:
        - $ref: '#/components/parameters/path-planId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Endpoint'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          $ref: '#/components/responses/409'
      tags:
        - Communication Plans
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EndpointInput'
        description: Plan Endpoint
        required: true
  '/plans/{planId}/endpoints/{endpointId}':
    get:
      summary: Get communication plan endpoint
      description: Get communication plan endpoint
      operationId: getPlanEndpoint
      parameters:
        - $ref: '#/components/parameters/path-planId'
        - $ref: '#/components/parameters/path-endpointId'
        - $ref: '#/components/parameters/query-at'
        - $ref: '#/components/parameters/query-embed'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Endpoint'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      tags:
        - Communication Plans
    delete:
      summary: Delete a plan endpoint
      description: Delete a plan endpoint
      operationId: deletePlanEndpoint
      parameters:
        - $ref: '#/components/parameters/path-planId'
        - $ref: '#/components/parameters/path-endpointId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Endpoint'
        '204':
          $ref: '#/components/responses/204'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '409':
          $ref: '#/components/responses/409'
      tags:
        - Communication Plans
  '/plans/{planId}/forms':
    get:
      summary: List of forms
      description: List of forms
      operationId: getPlanForms
      parameters:
        - $ref: '#/components/parameters/path-planId'
        - description: Sort results by
          in: query
          name: sortBy
          required: false
          schema:
            type: string
            enum:
              - NAME
              - USER_DEFINED
        - description: Comma separated list of linked domain entities to embed in the response
          in: query
          name: embed
          required: false
          schema:
            type: string
          example: plan,recipients,responseOptions,messages
        - $ref: '#/components/parameters/query-sortOrder'
        - $ref: '#/components/parameters/query-at'
        - $ref: '#/components/parameters/query-offset'
        - $ref: '#/components/parameters/query-limit'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormPagination'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      tags:
        - Forms
    post:
      summary: Add or update form
      description: Add or update form
      operationId: postForm
      parameters:
        - $ref: '#/components/parameters/path-planId'
      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Form'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Form'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '409':
          $ref: '#/components/responses/409'
      tags:
        - Forms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FormInput'
        required: true
  '/plans/{planId}/forms/{formId}':
    get:
      summary: Get a form
      description: Get a form
      operationId: getPlanForm
      parameters:
        - $ref: '#/components/parameters/path-planId'
        - $ref: '#/components/parameters/path-formId'
        - description: Comma separated list of linked domain entities to embed in the response
          in: query
          name: embed
          required: false
          schema:
            type: string
          example: plan,recipients,responseOptions,messages
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Form'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      tags:
        - Forms
  '/plans/{planId}/forms/{formId}/recipients':
    get:
      summary: List of form recipients
      description: List of form recipients
      operationId: getPlanFormRecipients
      parameters:
        - $ref: '#/components/parameters/path-planId'
        - $ref: '#/components/parameters/path-formId'
        - $ref: '#/components/parameters/query-at'
        - $ref: '#/components/parameters/query-offset'
        - $ref: '#/components/parameters/query-limit'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecipientPagination'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      tags:
        - Forms
    put:
      summary: Replace form recipients
      description: Replace form recipients
      operationId: putPlanFormRecipients
      parameters:
        - $ref: '#/components/parameters/path-planId'
        - $ref: '#/components/parameters/path-formId'
      requestBody:
        content:
          application/json:
            schema:
              description: An array containing the form recipients
              type: array
              items:
                $ref: '#/components/schemas/RecipientPointer'
        description: Form recipients
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecipientPagination'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '409':
          $ref: '#/components/responses/409'
      tags:
        - Forms
  '/plans/{planId}/forms/{formId}/response-options':
    get:
      summary: List of form response options
      description: List of form response options
      operationId: getPlanFormResponseOptions
      parameters:
        - $ref: '#/components/parameters/path-planId'
        - $ref: '#/components/parameters/path-formId'
        - $ref: '#/components/parameters/query-at'
        - $ref: '#/components/parameters/query-offset'
        - $ref: '#/components/parameters/query-limit'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOptionPagination'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      tags:
        - Forms
  '/plans/{planId}/forms/{formId}/scenarios':
    get:
      summary: List of scenarios
      description: List of scenarios
      operationId: getPlanFormScenarios
      parameters:
        - $ref: '#/components/parameters/path-planId'
        - $ref: '#/components/parameters/path-formId'
        - description: Sort results by
          in: query
          name: sortBy
          required: false
          schema:
            type: string
            enum:
              - NAME
              - USER_DEFINED
        - $ref: '#/components/parameters/query-at'
        - $ref: '#/components/parameters/query-sortOrder'
        - $ref: '#/components/parameters/query-offset'
        - $ref: '#/components/parameters/query-limit'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScenarioPagination'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      tags:
        - Forms
  '/plans/{planId}/forms/{formId}/events':
    post:
      summary: Submit an event
      description: Submit an event (legacy alias for POST /events)
      operationId: postPlanFormEvent
      parameters:
        - $ref: '#/components/parameters/path-planId'
        - $ref: '#/components/parameters/path-formId'
      requestBody:
        $ref: '#/components/requestBodies/EventInput'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '409':
          $ref: '#/components/responses/409'
      tags:
        - Forms
  '/plans/{planId}/forms/{formId}/triggers':
    post:
      summary: Submit a form
      description: Submit a form (legacy alias for POST /events)
      operationId: postTrigger
      parameters:
        - $ref: '#/components/parameters/path-planId'
        - $ref: '#/components/parameters/path-formId'
      requestBody:
        $ref: '#/components/requestBodies/EventInput'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '409':
          $ref: '#/components/responses/409'
      tags:
        - Forms
  '/plans/{planId}/integrations':
    get:
      summary: List plan integrations
      description: List plan integrations
      operationId: getPlanIntegrations
      parameters:
        - $ref: '#/components/parameters/path-planId'
        - $ref: '#/components/parameters/query-integrationType'
        - in: query
          name: deployed
          required: false
          schema:
            type: boolean
        - description: Comma separated list of linked domain entities to embed in the response
          in: query
          name: embed
          required: false
          example: ownerApiKey,agents
          schema:
            type: string
        - $ref: '#/components/parameters/query-offset'
        - $ref: '#/components/parameters/query-limit'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationPagination'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      tags:
        - Integrations
    post:
      summary: Insert or update an integration
      description: Insert or update an integration
      operationId: postPlanIntegration
      parameters:
        - $ref: '#/components/parameters/path-planId'
      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Integration'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Integration'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '409':
          $ref: '#/components/responses/409'
      tags:
        - Integrations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IntegrationInput'
        required: true
  '/plans/{planId}/integrations/{integrationId}':
    get:
      summary: Get an integration
      description: Get an integration
      operationId: getPlanIntegration
      parameters:
        - $ref: '#/components/parameters/path-planId'
        - $ref: '#/components/parameters/path-integrationId'
        - description: Comma separated list of linked domain entities to embed in the response
          in: query
          name: embed
          required: false
          example: ownerApiKey,agents
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Integration'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      tags:
        - Integrations
    delete:
      summary: Delete an integration
      description: Delete an integration
      operationId: deletePlanIntegration
      parameters:
        - $ref: '#/components/parameters/path-planId'
        - $ref: '#/components/parameters/path-integrationId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Integration'
        '204':
          $ref: '#/components/responses/204'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '409':
          $ref: '#/components/responses/409'
      tags:
        - Integrations
  '/plans/{planId}/integrations/{integrationId}/agents':
    get:
      summary: Get agents that can execute this integration
      description: Get agents that can execute this integration
      operationId: getPlanIntegrationAgents
      parameters:
        - $ref: '#/components/parameters/path-planId'
        - $ref: '#/components/parameters/path-integrationId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentPagination'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      tags:
        - Integrations
  '/plans/{planId}/integrations/{integrationId}/logs':
    get:
      summary: Get integration logs
      description: Get integration logs
      operationId: getPlanIntegrationLogs
      parameters:
        - $ref: '#/components/parameters/path-planId'
        - $ref: '#/components/parameters/path-integrationId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationLogPagination'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      tags:
        - Integrations
  '/plans/{planId}/integrations/{integrationId}/logs/{logId}':
    get:
      summary: Get integration log
      description: Get integration log as IntegrationLog object or file download
      operationId: getPlanIntegrationLog
      parameters:
        - $ref: '#/components/parameters/path-planId'
        - $ref: '#/components/parameters/path-integrationId'
        - $ref: '#/components/parameters/path-logId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationLog'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/IntegrationLog'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      tags:
        - Integrations
  '/plans/{planId}/permitted':
    get:
      summary: Get permitted entities
      description: Get permitted entities
      operationId: getPlanPermitted
      parameters:
        - $ref: '#/components/parameters/path-planId'
        - $ref: '#/components/parameters/query-offset'
        - $ref: '#/components/parameters/query-limit'
        - $ref: '#/components/parameters/query-embed'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissiblePagination'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
      tags:
        - Communication Plans
    put:
      summary: Replace permitted entities
      description: Replace permitted entities
      operationId: putPlanPermitted
      parameters:
        - $ref: '#/components/parameters/path-planId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissiblePagination'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '409':
          $ref: '#/components/responses/409'
      tags:
        - Communication Plans
      requestBody:
        content:
          application/json:
            schema:
              description: An array containing the permitted entities
              type: array
              items:
                $ref: '#/components/schemas/PermissiblePointer'
        description: Permitted recipients
        required: true
  '/plans/{planId}/property-definitions':
    get:
      summary: List plan property definitions
      description: List plan property definitions
      operationId: getPlanPropertyDefinitions
      parameters:
        - $ref: '#/components/parameters/path-planId'
        - $ref: '#/components/parameters/query-offset'
        - $ref: '#/components/parameters/query-limit'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyDefinitionPagination'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      tags:
        - Communication Plans
  '/plans/{planId}/shared-libraries':
    get:
      summary: List plan shared libraries
      description: List plan shared libraries
      operationId: getPlanSharedLibraries
      parameters:
        - $ref: '#/components/parameters/path-planId'
        - $ref: '#/components/parameters/query-offset'
        - $ref: '#/components/parameters/query-limit'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedLibraryPagination'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      tags:
        - Integrations
  '/plans/{planId}/subscription-forms':
    get:
      summary: List subscription forms for a plan
      description: List subscription forms for a plan
      operationId: getPlanSubscriptionForms
      parameters:
        - $ref: '#/components/parameters/path-planId'
        - description: Sort results by
          in: query
          name: sortBy
          required: false
          schema:
            type: string
            enum:
              - NAME
              - DESCRIPTION
        - $ref: '#/components/parameters/query-sortOrder'
        - $ref: '#/components/parameters/query-at'
        - $ref: '#/components/parameters/query-offset'
        - $ref: '#/components/parameters/query-limit'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionFormPagination'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
      tags:
        - Subscriptions
  '/property-definitions':
    get:
      summary: List property definitions
      description: List property definitions
      operationId: getPropertyDefinitions
      parameters:
        - $ref: '#/components/parameters/query-offset'
        - $ref: '#/components/parameters/query-limit'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyDefinitionPagination'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      tags:
        - Property Definitions
  /recipients:
    get:
      description: Returns information about potential recipients
      operationId: getRecipients
      parameters:
        - description: Case insensitive substring match within firstName, lastName, id, targetName, webLogin, email, phoneNumber. Search terms may be separated by spaces, results are returned that match ANY of the search terms
          in: query
          name: search
          required: false
          schema:
            type: string
        - description: searchType
          in: query
          name: searchType
          required: false
          schema:
            type: string
            enum:
              - CONTAINS
              - STARTS_WITH
              - ENDS_WITH
              - EQUALS
        - description: 'recipientType e.g. PERSON,DEVICE,GROUP'
          in: query
          name: recipientType
          required: false
          schema:
            type: string
        - description: Recipient status
          in: query
          name: status
          required: false
          schema:
            type: string
            enum:
              - ACTIVE
              - INACTIVE
              - INVALID
        - $ref: '#/components/parameters/query-at'
        - $ref: '#/components/parameters/query-offset'
        - $ref: '#/components/parameters/query-limit'
        - $ref: '#/components/parameters/query-embed'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecipientPagination'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
      summary: Returns information about event recipients
      tags:
        - Recipients
  /responses:
    post:
      summary: Send a response
      description: Send a response
      operationId: postResponse
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '409':
          $ref: '#/components/responses/409'
      tags:
        - Responses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResponseInput'
        required: true
  /service-providers:
    get:
      description: Returns information about configured service providers
      operationId: getServiceProviders
      parameters:
        - $ref: '#/components/parameters/query-offset'
        - $ref: '#/components/parameters/query-limit'
        - $ref: '#/components/parameters/query-deviceType'
        - $ref: '#/components/parameters/query-at'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceProviderPagination'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
      summary: Returns information about configured service providers
      tags:
        - Service Providers
  '/shared-libraries':
    post:
      summary: Insert or update a shared library
      description: Insert or update a shared library
      operationId: postSharedLibrary
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SharedLibraryInput'
        required: true
      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedLibrary'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedLibrary'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '409':
          $ref: '#/components/responses/409'
      tags:
        - Integrations
  '/shared-libraries/{libraryId}':
    get:
      summary: Get a shared library
      description: Get a shared library
      operationId: getSharedLibrary
      parameters:
        - $ref: '#/components/parameters/path-libraryId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedLibrary'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      tags:
        - Integrations
    delete:
      summary: Delete a shared library
      description: Delete a shared library
      operationId: deleteSharedLibrary
      parameters:
        - $ref: '#/components/parameters/path-libraryId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedLibrary'
        '204':
          $ref: '#/components/responses/204'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '409':
          $ref: '#/components/responses/409'
      tags:
        - Integrations
  /shift-occurrences:
    get:
      summary: List shift occurrences
      description: List shift occurrences in reverse chronological order, by start time, before the given 'at' timestamp (this route is only available via the auditstore)
      operationId: getShiftOccurrences
      parameters:
        - $ref: '#/components/parameters/query-at'
        - $ref: '#/components/parameters/query-group'
        - $ref: '#/components/parameters/query-shift'
        - $ref: '#/components/parameters/query-members'
        - $ref: '#/components/parameters/query-from'
        - $ref: '#/components/parameters/query-to'
        - $ref: '#/components/parameters/query-before'
        - $ref: '#/components/parameters/query-after'
        - $ref: '#/components/parameters/query-embed'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShiftOccurrencePagination'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
      tags:
        - Shift Occurrences
  /sites:
    get:
      summary: List sites
      description: List sites
      operationId: getSites
      parameters:
        - description: Country
          in: query
          name: country
          required: false
          schema:
            type: string
        - description: Language
          in: query
          name: language
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/query-at'
        - $ref: '#/components/parameters/query-offset'
        - $ref: '#/components/parameters/query-limit'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SitePagination'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
      tags:
        - Sites
    post:
      summary: Insert or update a site
      description: Insert or update a site
      operationId: postSite
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SiteInput'
        required: true
      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '409':
          $ref: '#/components/responses/409'
      tags:
        - Sites
  '/sites/{siteId}':
    get:
      summary: Returns information about a site
      description: Returns information about a site
      operationId: getSite
      parameters:
        - $ref: '#/components/parameters/path-siteId'
        - $ref: '#/components/parameters/query-at'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      tags:
        - Sites
    delete:
      summary: Delete a Site
      description: Delete a Site
      operationId: deleteSite
      parameters:
        - $ref: '#/components/parameters/path-siteId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site'
        '204':
          $ref: '#/components/responses/204'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '409':
          $ref: '#/components/responses/409'
      tags:
        - Sites
  /subscriptions:
    get:
      summary: List subscriptions
      description: List subscriptions
      operationId: getSubscriptions
      parameters:
        - description: Filter by name
          in: query
          name: name
          required: false
          schema:
            type: string
        - description: Filter by case insensitive substring match within description
          in: query
          name: description
          required: false
          schema:
            type: string
        - description: Filter subscription form name
          in: query
          name: subscriptionFormName
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/query-at'
        - $ref: '#/components/parameters/query-offset'
        - $ref: '#/components/parameters/query-limit'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionPagination'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
      tags:
        - Subscriptions
    post:
      summary: Insert or update a subscription
      description: Insert or update a subscription
      operationId: postSubscription
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionInput'
        required: true
      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '409':
          $ref: '#/components/responses/409'
      tags:
        - Subscriptions
  '/subscriptions/{subscriptionId}':
    get:
      summary: Returns information about a subscription
      description: Returns information about a subscription
      operationId: getSubscription
      parameters:
        - $ref: '#/components/parameters/path-subscriptionId'
        - $ref: '#/components/parameters/query-at'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
      tags:
        - Subscriptions
    delete:
      summary: Delete a subscription
      description: Delete the subscription if the current user is the owner. Otherwise remove the current user from the subscription recipients.
      operationId: deleteSubscription
      parameters:
        - $ref: '#/components/parameters/path-subscriptionId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
        '204':
          $ref: '#/components/responses/204'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '409':
          $ref: '#/components/responses/409'
      tags:
        - Subscriptions
  /subscription-forms:
    get:
      summary: List subscription forms
      description: List subscription forms
      operationId: getSubscriptionForms
      parameters:
        - description: Sort results by
          in: query
          name: sortBy
          required: false
          schema:
            type: string
            enum:
              - NAME
              - DESCRIPTION
        - $ref: '#/components/parameters/query-sortOrder'
        - $ref: '#/components/parameters/query-at'
        - $ref: '#/components/parameters/query-offset'
        - $ref: '#/components/parameters/query-limit'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionFormPagination'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
      tags:
        - Subscriptions
  '/subscription-forms/{subscriptionFormId}':
    get:
      summary: Returns information about a subscription form
      description: Returns information about a subscription form
      operationId: getSubscriptionForm
      parameters:
        - $ref: '#/components/parameters/path-subscriptionFormId'
        - $ref: '#/components/parameters/query-at'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionForm'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
      tags:
        - Subscriptions
  /targetable:
    get:
      summary: Search targetable entities
      description: Search targetable entities
      operationId: getTargetable
      parameters:
        - $ref: '#/components/parameters/query-offset'
        - $ref: '#/components/parameters/query-limit'
        - $ref: '#/components/parameters/query-embed'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TargetablePagination'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      tags:
        - Targetable
  /temporary-absences:
    get:
      summary: Temporary Absences
      description: Temporary Absences
      operationId: getTemporaryAbsences
      parameters:
        - $ref: '#/components/parameters/query-group'
        - $ref: '#/components/parameters/query-member'
        - $ref: '#/components/parameters/query-absenceType'
        - $ref: '#/components/parameters/query-from'
        - $ref: '#/components/parameters/query-to'
        - $ref: '#/components/parameters/query-limit'
        - $ref: '#/components/parameters/query-offset'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemporaryAbsencePagination'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
      tags:
        - Temporary Absences
    post:
      summary: Insert or update Temporary Absence
      description: Insert or update Temporary Absence
      operationId: postTemporaryAbsence
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TemporaryAbsenceInput'
        required: true
      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemporaryAbsence'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemporaryAbsence'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '409':
          $ref: '#/components/responses/409'
      tags:
        - Temporary Absences
    patch:
      summary: Insert or update Temporary Absences
      description: Insert or update Temporary Absences
      operationId: patchTemporaryAbsences
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/TemporaryAbsenceInput'
              maxItems: 1000
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemporaryAbsencePagination'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '409':
          $ref: '#/components/responses/409'
      tags:
        - Temporary Absences
  /temporary-absences/{temporaryAbsenceId}:
    get:
      summary: Get Temporary Absences
      description: Get Temporary Absences
      operationId: getTemporaryAbsences
      parameters:
        - $ref: '#/components/parameters/path-temporaryAbsenceId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemporaryAbsence'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      tags:
        - Temporary Absences
    delete:
      summary: Delete a Temporary Absence
      description: Delete a Temporary Absence
      operationId: deleteTemporaryAbsence
      parameters:
        - $ref: '#/components/parameters/path-temporaryAbsenceId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemporaryAbsence'
        '204':
          $ref: '#/components/responses/204'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '409':
          $ref: '#/components/responses/409'
      tags:
        - Temporary Absences
  /timeline:
    get:
      summary: Get Timeline
      description: Returns a list of timeline events
      operationId: getTimeline
      parameters:
        - $ref: '#/components/parameters/query-incident'
        - $ref: '#/components/parameters/query-event'
        - $ref: '#/components/parameters/query-from'
        - $ref: '#/components/parameters/query-to'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventPagination'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
      tags:
        - Reports
  /transforms:
    get:
      summary: Transform definitions
      description: Transform definitions
      operationId: getTransforms
      parameters:
        - $ref: '#/components/parameters/query-offset'
        - $ref: '#/components/parameters/query-limit'
        - $ref: '#/components/parameters/query-embed'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransformPagination'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
      tags:
        - File Transfer
    post:
      summary: Set transform definition
      description: Set transform definition
      operationId: postTransform
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransformInput'
        description: Transform definition
        required: true
      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transform'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transform'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '409':
          $ref: '#/components/responses/409'
      tags:
        - File Transfer
  '/uploads/{transformId}':
    post:
      summary: Upload a file
      description: Upload a file
      operationId: postUpload
      parameters:
        - description: Transform identifier
          in: path
          name: transformId
          required: true
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                file:
                  description: File upload
                  type: string
                  format: binary
                name:
                  type: string
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Import'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '409':
          $ref: '#/components/responses/409'
      tags:
        - File Transfer
  /vendor-responses:
    post:
      summary: Report a vendor response
      description: Report a vendor response
      operationId: postVendorResponse
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VendorResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '409':
          $ref: '#/components/responses/409'
      tags:
        - Responses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VendorResponseInput'
        required: true
components:
  parameters:
    path-agentId:
      description: Agent ID
      in: path
      name: agentId
      required: true
      schema:
        type: string
    path-annotationId:
      description: Annotation identifier
      in: path
      name: annotationId
      required: true
      schema:
        type: string
    path-conferenceId:
      description: Conference identifier
      in: path
      name: conferenceId
      required: true
      schema:
        type: string
    path-constantId:
      description: Constant identifier
      in: path
      name: constantId
      required: true
      schema:
        type: string
    path-deepLinkToken:
      description: Deep link token
      in: path
      name: deepLinkToken
      required: true
      schema:
        type: string
    path-deviceId:
      description: The device uuid or targetName
      in: path
      name: deviceId
      required: true
      schema:
        type: string
    path-dynamicTeamId:
      description: The dynamic team uuid or name
      in: path
      name: dynamicTeamId
      required: true
      schema:
        type: string
    path-eventId:
      description: The event id
      in: path
      name: eventId
      required: true
      schema:
        type: string
    path-eventSuppressionId:
      description: Event suppression id
      in: path
      name: eventSuppressionId
      required: true
      schema:
        type: string
    path-endpointId:
      description: The endpoint name
      in: path
      name: endpointId
      required: true
      schema:
        type: string
    path-filterId:
      description: A filter identifier
      in: path
      name: filterId
      required: true
      schema:
        type: string
    path-formId:
      description: The form uuid or name
      in: path
      name: formId
      required: true
      schema:
        type: string
    path-groupId:
      in: path
      name: groupId
      required: true
      schema:
        type: string
    path-importId:
      description: Import identifier
      in: path
      name: importId
      required: true
      schema:
        type: string
        format: uuid
    path-integrationId:
      description: Integration identifier
      in: path
      name: integrationId
      required: true
      schema:
        type: string
    path-logId:
      description: Log identifier
      in: path
      name: logId
      required: true
      schema:
        type: string
    path-memberId:
      description: The recipient's uuid or targetName
      in: path
      name: memberId
      required: true
      schema:
        type: string
    path-monitorId:
      description: The monitor's uuid or targetName
      in: path
      name: monitorId
      required: true
      schema:
        type: string
    path-messageId:
      description: Message indentifier
      in: path
      name: messageId
      required: true
      schema:
        type: string
    path-notificationId:
      description: Notification identifier
      in: path
      name: notificationId
      required: true
      schema:
        type: string
        format: uuid
    path-personId:
      description: The person's uuid or targetName
      in: path
      name: personId
      required: true
      schema:
        type: string
    path-passwordRuleId:
      description: The password rule uuid
      in: path
      name: passwordRuleId
      required: true
      schema:
        type: string
    path-planId:
      description: The plan uuid or name
      in: path
      name: planId
      required: true
      schema:
        type: string
    path-recipientId:
      description: The uuid or targetName of the recipient
      in: path
      name: recipientId
      required: true
      schema:
        type: string
    path-roleId:
      description: The uuid or name of the role
      in: path
      name: roleId
      required: true
      schema:
        type: string
    path-shiftId:
      description: The uuid or name of the shift. e.g. 24/7 (Must be URL encoded)
      in: path
      name: shiftId
      required: true
      schema:
        type: string
    path-occurrenceId:
      description: 'The uuid, or start time, or sequence number of the shift occurrence'
      in: path
      name: occurrenceId
      required: true
      schema:
        type: string
    path-siteId:
      description: The site uuid or name
      in: path
      name: siteId
      required: true
      schema:
        type: string
    path-subscriptionId:
      description: The subscription uuid
      in: path
      name: subscriptionId
      required: true
      schema:
        type: string
    path-subscriptionFormId:
      description: The subscription form uuid or name
      in: path
      name: subscriptionFormId
      required: true
      schema:
        type: string
    path-libraryId:
      description: The library uuid
      in: path
      name: libraryId
      required: true
      schema:
        type: string
        format: uuid
    path-temporaryAbsenceId:
      description: Temporary Absence identifier
      name: temporaryAbsenceId
      in: path
      required: true
      schema:
        type: string
    path-tokenId:
      name: tokenId
      in: path
      description: Token name
      required: true
      schema:
        type: string
    path-versionId:
      name: versionId
      in: path
      description: Version (use 'latest' for latest version)
      required: true
      schema:
        type: string
    query-absenceType:
      description: Absence Type
      in: query
      name: absenceType
      required: false
      schema:
        type: string
        enum:
          - VACANCY
          - REPLACEMENT
    query-auditType:
      description: Audit type
      in: query
      name: auditType
      required: false
      schema:
        type: string
        enum:
          - EVENT_ANNOTATED
          - EVENT_COMPLETED
          - EVENT_CREATED
          - EVENT_RESUMED
          - EVENT_SUSPENDED
          - EVENT_TERMINATED
          - NOTIFICATION_DELAYED
          - NOTIFICATION_DELIVERED
          - NOTIFICATION_DISCARDED
          - NOTIFICATION_ESCALATED
          - NOTIFICATION_FAILED
          - NOTIFICATION_SUPPRESSED
          - RESPONSE_RECEIVED
    query-after:
      description: After this time or sequenced item identifier (exclusive)
      in: query
      name: after
      required: false
      schema:
        type: string
    query-at:
      description: At this time
      in: query
      name: at
      required: false
      schema:
        type: string
        format: date-time
    query-before:
      description: Before this time or sequenced item identifier (exclusive)
      in: query
      name: before
      required: false
      schema:
        type: string
    query-builtInPlanType:
      description: The built in plan type
      in: query
      name: builtInPlanType
      required: false
      schema:
        type: string
        enum:
          - APP_DYNAMICS
          - BIG_PANDA
          - DATADOG
          - DYNATRACE
          - HIPCHAT
          - ICINGA
          - JIRA
          - NEW_RELIC
          - PINGDOM
          - PINGDOM_SM
          - SCOUT
          - SENSU
          - SIGNALFX
          - SLACK_BOT
          - SOLAR_WINDS
          - SPLUNK
          - SPLUNK_ITSI
          - SUMO_LOGIC
          - WEBHOOK
    query-conference:
      description: Conference identifier
      in: query
      name: conference
      required: false
      schema:
        type: string
    query-device:
      description: The device uuid or name
      in: query
      name: device
      required: false
      schema:
        type: string
    query-deviceType:
      description: Device type
      in: query
      name: deviceType
      required: false
      schema:
        type: string
        enum:
          - ANDROID_PUSH
          - APPLE_PUSH
          - BLACKBERRY_PUSH
          - BROWSER
          - EMAIL
          - FAX
          - GENERIC
          - IM
          - NUMERIC_PAGER
          - TEXT_PAGER
          - TEXT_PHONE
          - VOICE
          - VOICE_IVR
    query-deviceName:
      description: Device name
      in: query
      name: deviceName
      required: false
      schema:
        type: string
    query-embed:
      description: List of linked domain entities to embed in the response
      in: query
      name: embed
      required: false
      schema:
        type: string
    query-event:
      description: Event identifier
      in: query
      name: event
      required: false
      schema:
        type: string
    query-eventType:
      description: Event type
      in: query
      name: eventType
      required: false
      schema:
        type: string
        enum:
          - USER
          - SYSTEM
    query-exclude:
      description: Exclude these default attributes
      in: query
      name: exclude
      required: false
      schema:
        type: string
    query-form:
      description: The form uuid or name
      in: query
      name: form
      required: false
      schema:
        type: string
    query-from:
      description: After this time or sequenced item identifier (inclusive)
      in: query
      name: from
      required: false
      schema:
        type: string
    query-group:
      description: Comma separated list of group uuid or targetName
      in: query
      name: groups
      required: false
      style: form
      schema:
        type: array
        items:
          type: string
    query-groups:
      description: Comma separated list of group uuid or targetName
      in: query
      name: groups
      required: false
      style: form
      schema:
        type: array
        items:
          type: string
    query-include:
      description: Include these optional attributes
      in: query
      name: include
      required: false
      schema:
        type: string
    query-integration:
      description: The integration id
      in: query
      name: integration
      required: false
      schema:
        type: string
    query-integrationType:
      description: Integration type
      in: query
      name: integrationType
      required: false
      schema:
        type: string
        enum:
          - INBOUND_WEBHOOK
          - OUTBOUND_WEBHOOK
    query-incident:
      description: Incident id
      in: query
      name: incident
      required: false
      schema:
        type: string
    query-limit:
      description: Maximum result size to return
      in: query
      name: limit
      required: false
      schema:
        type: integer
        maximum: 1000
        default: 100
      example: 100
    query-member:
      description: Member
      in: query
      name: member
      required: false
      schema:
        type: string
    query-members:
      description: Membership includes these people
      in: query
      name: members
      required: false
      schema:
        type: string
    query-name:
      description: Name
      in: query
      name: name
      required: false
      schema:
        type: string
    query-offset:
      description: Skip this many results before returning the result set
      in: query
      name: offset
      required: false
      schema:
        type: integer
        default: 0
      example: 0
    query-person:
      description: The person's uuid or targetName
      in: query
      name: person
      required: false
      schema:
        type: string
    query-phoneNumberFormat:
      description: Modify the format of the returned phoneNumber
      in: query
      name: phoneNumberFormat
      required: false
      schema:
        type: string
        enum:
          - E164
          - RAW
          - COUNTRY_CODE
          - CALLER_LOCALE
        default: E164
    query-plan:
      description: The plan uuid or name
      in: query
      name: plan
      required: false
      schema:
        type: string
    query-planType:
      description: The plan type
      in: query
      name: planType
      required: false
      schema:
        type: string
        enum:
          - PLAN
          - BUILT_IN
          - SYSTEM
    query-priority:
      description: Only records matching this priority
      in: query
      name: priority
      required: false
      schema:
        type: string
        enum:
          - LOW
          - MEDIUM
          - HIGH
    query-request:
      description: Request identifier
      in: query
      name: request
      required: false
      schema:
        type: string
    query-shift:
      description: Shift identifier
      in: query
      name: shift
      required: false
      schema:
        type: string
    query-site:
      description: Site identifier
      in: query
      name: site
      required: false
      schema:
        type: string
    query-sortOrder:
      description: The sort order of results
      in: query
      name: sortOrder
      required: false
      schema:
        type: string
        enum:
          - ASCENDING
          - DESCENDING
    query-submitter:
      description: The id or targetName of the submitter
      in: query
      name: submitter
      required: false
      schema:
        type: string
    query-to:
      description: Before this time or sequenced item identifier (inclusive)
      in: query
      name: to
      required: false
      schema:
        type: string
    query-used:
      description: is used
      in: query
      name: used
      required: false
      schema:
        type: boolean
    query-personMatch:
      description: Determines the attribute used to match the personId
      in: query
      name: personMatch
      required: false
      schema:
        type: string
        enum:
          - id
          - targetName
          - webLogin
    query-propertyName:
      description: Embedded property name
      in: query
      name: propertyName
      required: false
      schema:
        type: string
    query-propertyValue:
      description: Embedded property value
      in: query
      name: propertyValue
      required: false
      schema:
        type: string
    query-role:
      description: Has role
      in: query
      name: role
      required: false
      schema:
        type: string
    query-webLogin:
      description: Has webLogin
      in: query
      name: webLogin
      required: false
      schema:
        type: string
  responses:
    '204':
      description: No Content
    '400':
      description: Bad Request - The request is malformed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BadRequestResponse'
    '401':
      description: Unauthorized - The caller cannot be identified
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UnauthorizedResponse'
    '403':
      description: >-
        Forbidden - The authenticated user does not have permission to perform
        this action
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ForbiddenResponse'
    '404':
      description: Not Found - The requested resource does not exist
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotFoundResponse'
    '409':
      description: Conflict - The action cannot be performed in the system
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ConflictResponse'
  requestBodies:
    EventInput:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EventInput'
      required: true
  schemas:
    AccessToken:
      description: Access token response
      properties:
        access_token:
          type: string
        refresh_token:
          type: string
        expires_in:
          type: integer
          description: Seconds till access_token expiry
        token_type:
          type: string
          enum:
            - Bearer
      required:
        - access_token
        - expires_in
        - token_type
    Agent:
      description: An agent
      properties:
        id:
          type: string
          format: uuid
        externalId:
          type: string
          description: Legacy non-UUID identifier
        name:
          type: string
        version:
          type: string
        os:
          type: string
        status:
          type: string
          enum:
            - CONNECTED
            - DISCONNECTED
        addresses:
          type: string
        created:
          type: string
          format: date-time
        owners:
          $ref: '#/components/schemas/AgentOwnerPagination'
        monitors:
          $ref: '#/components/schemas/AgentMonitorPagination'
      required:
        - id
        - externalId
        - version
        - os
        - created
    AgentInput:
      description: An agent
      properties:
        id:
          type: string
          format: uuid
        externalId:
          type: string
          description: Legacy non-UUID identifier
        name:
          type: string
        version:
          type: string
        status:
          type: string
          enum:
            - CONNECTED
            - DISCONNECTED
        os:
          type: string
        addresses:
          type: string
        owners:
          description: Owners of this agent
          type: array
          items:
            $ref: '#/components/schemas/AgentOwnerInput'
        monitors:
          description: Recipients monitoring this agent
          type: array
          items:
            $ref: '#/components/schemas/AgentMonitorInput'
    AgentReference:
      description: An agent
      properties:
        id:
          type: string
          format: uuid
      required:
        - id
    AgentPointer:
      description: An agent
      properties:
        id:
          type: string
          format: uuid
      required:
        - id
    AgentInstaller:
      description: Agent installation information
      properties:
        version:
          type: string
        minimumCompatibleVersion:
          type: string
        downloadURL:
          type: string
        host:
          type: string
        key:
          type: string
      required:
        - version
        - minimumCompatibleVersion
        - downloadURL
        - host
        - key
    AgentMonitor:
      description: A recipient monitoring an agent
      properties:
        id:
          type: string
          format: uuid
          description: The unique identifier for this specific monitoring subscription
        agent:
          $ref: '#/components/schemas/AgentReference'
        recipient:
          $ref: '#/components/schemas/RecipientReference'
      required:
        - id
        - agent
        - recipient
    AgentMonitorInput:
      description: A recipient monitoring an agent
      properties:
        id:
          type: string
          format: uuid
          description: The unique identifier for this specific monitoring subscription
        agent:
          $ref: '#/components/schemas/AgentPointer'
        recipient:
          $ref: '#/components/schemas/RecipientPointer'
    AgentOwner:
      description: An agent owner
      properties:
        id:
          type: string
          format: uuid
        agent:
          $ref: '#/components/schemas/AgentReference'
        owner:
          $ref: '#/components/schemas/PersonReference'
        key:
          type: string
      required:
        - id
        - agent
        - owner
        - key
    AgentOwnerInput:
      description: An agent owner
      properties:
        agent:
          $ref: '#/components/schemas/AgentPointer'
        owner:
          $ref: '#/components/schemas/PersonPointer'
      required:
        - agent
        - owner
    APIKey:
      description: An API Key
      properties:
        id:
          type: string
          format: uuid
        key:
          type: string
        person:
          $ref: '#/components/schemas/PersonReference'
      required:
        - id
    APIKeyInput:
      description: An API Key
      properties:
        id:
          type: string
          format: uuid
        key:
          type: string
    IntegrationAgent:
      properties:
        id:
          type: string
          format: uuid
        externalId:
          type: string
          description: Legacy non-UUID identifier
        name:
          type: string
        version:
          type: string
        status:
          type: string
          enum:
            - CONNECTED
            - DISCONNECTED
        os:
          type: string
        statusAt:
          type: string
          format: date-time
        url:
          type: string
      required:
        - id
        - externalId
        - version
        - status
        - os
    IntegrationAgentInput:
      properties:
        id:
          type: string
          format: uuid
        externalId:
          type: string
          description: Legacy non-UUID identifier
        name:
          type: string
        version:
          type: string
        url:
          type: string
        status:
          type: string
          enum:
            - CONNECTED
            - DISCONNECTED
        os:
          type: string
        statusAt:
          type: string
          format: date-time
    IntegrationService:
      properties:
        name:
          type: string
        description:
          type: string
      required:
        - name
    Audit:
      oneOf:
        - $ref: '#/components/schemas/EventAnnotatedAudit'
        - $ref: '#/components/schemas/EventCompletedAudit'
        - $ref: '#/components/schemas/EventCreatedAudit'
        - $ref: '#/components/schemas/EventResumedAudit'
        - $ref: '#/components/schemas/EventSuspendedAudit'
        - $ref: '#/components/schemas/EventTerminatedAudit'
        - $ref: '#/components/schemas/ResponseReceivedAudit'
        - $ref: '#/components/schemas/NotificationDeliveredAudit'
        - $ref: '#/components/schemas/NotificationSuppressedAudit'
      discriminator:
        propertyName: auditType
    AbstractAudit:
      description: An audit
      type: object
      properties:
        id:
          type: string
          format: uuid
        at:
          description: Time this event happened (UTC)
          type: string
          format: date-time
        auditType:
          description: Audit types
          type: string
          enum:
            - EVENT_ANNOTATED
            - EVENT_COMPLETED
            - EVENT_CREATED
            - EVENT_RESUMED
            - EVENT_SUSPENDED
            - EVENT_TERMINATED
            - NOTIFICATION_DELAYED
            - NOTIFICATION_DELIVERED
            - NOTIFICATION_DISCARDED
            - NOTIFICATION_ESCALATED
            - NOTIFICATION_FAILED
            - NOTIFICATION_SUPPRESSED
            - RESPONSE_RECEIVED
        by:
          $ref: '#/components/schemas/PersonReference'
      required:
        - id
        - at
        - auditType
    EventAnnotatedAudit:
      description: An event annotated audit
      allOf:
        - $ref: '#/components/schemas/AbstractAudit'
        - properties:
            auditType:
              type: string
              enum:
                - EVENT_ANNOTATED
            annotation:
              $ref: '#/components/schemas/EventAnnotation'
          required:
            - auditType
            - annotation
    EventCompletedAudit:
      description: An event completed audit
      allOf:
        - $ref: '#/components/schemas/AbstractAudit'
        - properties:
            auditType:
              type: string
              enum:
                - EVENT_COMPLETED
            event:
              $ref: '#/components/schemas/Event'
          required:
            - auditType
            - event
    EventCreatedAudit:
      description: An event created audit
      allOf:
        - $ref: '#/components/schemas/AbstractAudit'
        - properties:
            auditType:
              type: string
              enum:
                - EVENT_CREATED
            event:
              $ref: '#/components/schemas/Event'
          required:
            - auditType
            - event
    EventResumedAudit:
      description: An event resumed audit
      allOf:
        - $ref: '#/components/schemas/AbstractAudit'
        - properties:
            auditType:
              type: string
              enum:
                - EVENT_RESUMED
            event:
              $ref: '#/components/schemas/Event'
          required:
            - auditType
            - event
    EventSuspendedAudit:
      description: An event suspended audit
      allOf:
        - $ref: '#/components/schemas/AbstractAudit'
        - properties:
            auditType:
              type: string
              enum:
                - EVENT_SUSPENDED
            event:
              $ref: '#/components/schemas/Event'
          required:
            - auditType
            - event
    EventTerminatedAudit:
      description: An event terminated audit
      allOf:
        - $ref: '#/components/schemas/AbstractAudit'
        - properties:
            auditType:
              type: string
              enum:
                - EVENT_TERMINATED
            event:
              $ref: '#/components/schemas/Event'
          required:
            - auditType
            - event
    ResponseReceivedAudit:
      description: A response received audit
      allOf:
        - $ref: '#/components/schemas/AbstractAudit'
        - properties:
            auditType:
              type: string
              enum:
                - RESPONSE_RECEIVED
            response:
              $ref: '#/components/schemas/Response'
          required:
            - auditType
            - response
    NotificationDeliveredAudit:
      description: A notification delivered audit
      allOf:
        - $ref: '#/components/schemas/AbstractAudit'
        - properties:
            auditType:
              type: string
              enum:
                - NOTIFICATION_DELIVERED
            notification:
              $ref: '#/components/schemas/Notification'
          required:
            - auditType
            - notification
    NotificationSuppressedAudit:
      description: A notification suppressed audit
      allOf:
        - $ref: '#/components/schemas/AbstractAudit'
        - properties:
            auditType:
              type: string
              enum:
                - NOTIFICATION_SUPPRESSED
            notification:
              $ref: '#/components/schemas/Notification'
          required:
            - auditType
            - notification
    Callback:
      properties:
        url:
          type: string
        type:
          enum:
            - status
            - deliveryStatus
            - response
          type: string
        authType:
          type: string
        authUserName:
          type: string
        authPassword:
          type: string
        iaId:
          type: string
      required:
        - url
        - type
    Credentials:
      description: Authentication credentials
      properties:
        grant_type:
          type: string
          enum:
            - password
            - refresh_token
        username:
          type: string
        password:
          type: string
        refresh_token:
          type: string
        client_id:
          type: string
        client_secret:
          type: string
      required:
        - grant_type
        - client_id
    Conference:
      properties:
        id:
          type: string
          format: uuid
        type:
          type: string
          enum:
            - BRIDGE
            - EXTERNAL
        bridgeId:
          type: string
        bridgeNumber:
          type: string
        name:
          type: string
        sid:
          type: string
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
        status:
          type: string
          enum:
            - INACTIVE
            - WAITING
            - ACTIVE
        description:
          type: string
        host:
          $ref: '#/components/schemas/PersonReference'
        activeParticipantCount:
          description: Count of active conference participants
          type: integer
        participants:
          $ref: '#/components/schemas/ConferenceParticipantPagination'
        events:
          $ref: '#/components/schemas/EventPagination'
      required:
        - type
    ConferencePointer:
      properties:
        id:
          type: string
          format: uuid
        type:
          enum:
            - BRIDGE
            - EXTERNAL
          type: string
        bridgeId:
          type: string
        bridgeNumber:
          type: string
        name:
          type: string
      required:
        - type
    ConferenceReference:
      properties:
        id:
          type: string
          format: uuid
        type:
          type: string
          enum:
            - BRIDGE
            - EXTERNAL
        bridgeId:
          type: string
        bridgeNumber:
          type: string
      required:
        - type
    ConferenceParticipant:
      properties:
        conference:
          $ref: '#/components/schemas/ConferenceReference'
        device:
          $ref: '#/components/schemas/DeviceReference'
        member:
          type: string
          description: Plivo member
        sid:
          type: string
        muted:
          type: boolean
        joined:
          type: string
          format: date-time
        left:
          type: string
          format: date-time
        displayName:
          type: string
        extensionInProgress:
          type: boolean
        warnedForExtension:
          type: string
          format: date-time
        phoneNumber:
          type: string
        willCallToExtend:
          type: boolean
        retries:
          type: integer
      required:
        - conference
    ConferenceParticipantInput:
      properties:
        conference:
          $ref: '#/components/schemas/ConferencePointer'
        device:
          $ref: '#/components/schemas/DevicePointer'
        member:
          type: string
          description: Plivo member id
        sid:
          type: string
        muted:
          type: boolean
        joined:
          type: string
          format: date-time
        left:
          type: string
          format: date-time
        displayName:
          type: string
        extensionInProgress:
          type: boolean
        warnedForExtension:
          type: string
          format: date-time
        phoneNumber:
          type: string
        willCallToExtend:
          type: boolean
        retries:
          type: integer
      required:
        - conference
    Constant:
      properties:
        id:
          type: string
          format: uuid
        plan:
          $ref: '#/components/schemas/PlanReference'
        name:
          type: string
        value:
          type: string
        description:
          type: string
      required:
        - id
        - plan
        - name
        - value
    ConstantInput:
      properties:
        id:
          type: string
        plan:
          $ref: '#/components/schemas/PlanPointer'
        name:
          type: string
        value:
          type: string
        description:
          type: string
      required:
        - name
        - value
    Country:
      description: A country
      properties:
        code2:
          type: string
        code3:
          type: string
        description:
          type: string
        name:
          type: string
      required:
        - code2
        - code3
        - name
    DeepLink:
      properties:
        token:
          description: Universally unique token
          type: string
        expiry:
          description: Expiry date
          type: string
          format: date-time
        url:
          description: Link URL
          type: string
        action:
          type: string
        status:
          description: Status of the token
          type: string
          enum:
            - UNUSED
            - USED
        attributes:
          type: object
      required:
        - token
        - expiry
        - url
        - action
        - status
    DeepLinkInput:
      properties:
        expiry:
          description: Expiry date
          type: string
          format: date-time
        url:
          description: Link URL
          type: string
        action:
          type: string
          description: Code to be used by URL handler to determine action
        status:
          description: Status of the token
          type: string
          enum:
            - UNUSED
            - USED
        attributes:
          type: object
      required:
        - expiry
        - url
        - action
    DeviceName:
      description: Customer defined Device categories e.g. Work Email
      properties:
        id:
          type: string
          format: uuid
        deviceType:
          description: The type of the device
          type: string
          enum:
            - ANDROID_PUSH
            - APPLE_PUSH
            - BLACKBERRY_PUSH
            - BROWSER
            - EMAIL
            - FAX
            - GENERIC
            - IM
            - NUMERIC_PAGER
            - TEXT_PAGER
            - TEXT_PHONE
            - VOICE
            - VOICE_IVR
        name:
          type: string
        description:
          type: string
        domains:
          type: string
      required:
        - deviceType
        - name
        - description
    DeviceNamePointer:
      properties:
        id:
          type: string
          format: uuid
        deviceType:
          description: The type of the device
          type: string
          enum:
            - ANDROID_PUSH
            - APPLE_PUSH
            - BLACKBERRY_PUSH
            - BROWSER
            - EMAIL
            - FAX
            - GENERIC
            - IM
            - NUMERIC_PAGER
            - TEXT_PAGER
            - TEXT_PHONE
            - VOICE
            - VOICE_IVR
        name:
          type: string
    DeviceNameReference:
      description: Customer defined Device categories e.g. Work Email
      properties:
        id:
          type: string
          format: uuid
        deviceType:
          description: The type of the device
          type: string
          enum:
            - ANDROID_PUSH
            - APPLE_PUSH
            - BLACKBERRY_PUSH
            - BROWSER
            - EMAIL
            - FAX
            - GENERIC
            - IM
            - NUMERIC_PAGER
            - TEXT_PAGER
            - TEXT_PHONE
            - VOICE
            - VOICE_IVR
        name:
          type: string
        description:
          type: string
      required:
        - deviceType
        - name
        - description
    Device:
      oneOf:
        - $ref: '#/components/schemas/AndroidPushDevice'
        - $ref: '#/components/schemas/ApplePushDevice'
        - $ref: '#/components/schemas/BlackberryPushDevice'
        - $ref: '#/components/schemas/EmailDevice'
        - $ref: '#/components/schemas/FaxDevice'
        - $ref: '#/components/schemas/GenericDevice'
        - $ref: '#/components/schemas/IMDevice'
        - $ref: '#/components/schemas/NumericPagerDevice'
        - $ref: '#/components/schemas/PublicAddressDevice'
        - $ref: '#/components/schemas/SMSDevice'
        - $ref: '#/components/schemas/TextPagerDevice'
        - $ref: '#/components/schemas/VoiceDevice'
      discriminator:
        propertyName: deviceType
    AbstractDevice:
      allOf:
        - $ref: '#/components/schemas/AbstractRecipient'
        - description: A device in xMatters is any means of receiving a notification message. Devices can include physical items like phones, or intangible items such as email accounts
          properties:
            defaultDevice:
              description: >-
                True if this device can receive notifications when the user has
                no active devices
              type: boolean
            delay:
              description: >-
                The number of minutes to wait for a response before contacting
                the next device
              format: int32
              type: integer
            description:
              description: A description of the device
              type: string
            deviceType:
              description: The type of the device
              type: string
              enum:
                - ANDROID_PUSH
                - APPLE_PUSH
                - BLACKBERRY_PUSH
                - BROWSER
                - EMAIL
                - FAX
                - GENERIC
                - IM
                - NUMERIC_PAGER
                - TEXT_PAGER
                - TEXT_PHONE
                - VOICE
                - VOICE_IVR
            name:
              type: string
              example: Work Email, Home Phone
            notifications:
              $ref: '#/components/schemas/NotificationPagination'
            owner:
              $ref: '#/components/schemas/PersonReference'
            priorityThreshold:
              description: >-
                The minimum priority of an event for it to be delivered to this
                device
              enum:
                - LOW
                - HIGH
                - MEDIUM
              type: string
            provider:
              $ref: '#/components/schemas/ServiceProviderReference'
            recipientType:
              enum:
                - DEVICE
              type: string
            sequence:
              description: >-
                The order in which the device will be contacted, where 0
                represents the first device contacted
              format: int32
              type: integer
            testStatus:
              description: Whether the device has been tested
              enum:
                - TESTED
                - UNTESTED
                - PENDING
                - INVALID
              type: string
            timeframes:
              $ref: '#/components/schemas/DeviceTimeframePagination'
          required:
            - owner
            - deviceType
    DeviceInput:
      oneOf:
        - $ref: '#/components/schemas/AndroidPushDeviceInput'
        - $ref: '#/components/schemas/ApplePushDeviceInput'
        - $ref: '#/components/schemas/BlackberryPushDeviceInput'
        - $ref: '#/components/schemas/EmailDeviceInput'
        - $ref: '#/components/schemas/FaxDeviceInput'
        - $ref: '#/components/schemas/GenericDeviceInput'
        - $ref: '#/components/schemas/IMDeviceInput'
        - $ref: '#/components/schemas/NumericPagerDeviceInput'
        - $ref: '#/components/schemas/PublicAddressDeviceInput'
        - $ref: '#/components/schemas/SMSDeviceInput'
        - $ref: '#/components/schemas/TextPagerDeviceInput'
        - $ref: '#/components/schemas/VoiceDeviceInput'
      discriminator:
        propertyName: deviceType
    AbstractDeviceInput:
      allOf:
        - $ref: '#/components/schemas/AbstractRecipientInput'
        - description: A device in xMatters is any means of receiving a notification message. Devices can include physical items like phones, or intangible items such as email accounts
          properties:
            defaultDevice:
              description: >-
                True if this device can receive notifications when the user has
                no active devices. a.k.a. Fail-safe device
              type: boolean
            delay:
              description: >-
                The number of minutes to wait for a response before contacting
                the next device
              format: int32
              type: integer
            deviceType:
              description: The type of the device
              type: string
              enum:
                - ANDROID_PUSH
                - APPLE_PUSH
                - BROWSER
                - EMAIL
                - FAX
                - GENERIC
                - IM
                - NUMERIC_PAGER
                - TEXT_PAGER
                - TEXT_PHONE
                - VOICE
                - VOICE_IVR
            name:
              type: string
              example: Work Email, Home Phone
            owner:
              $ref: '#/components/schemas/PersonPointer'
            priorityThreshold:
              description: >-
                The minimum priority of an event for it to be delivered to this
                device
              enum:
                - LOW
                - HIGH
                - MEDIUM
              type: string
            provider:
              $ref: '#/components/schemas/ServiceProviderPointer'
            recipientType:
              enum:
                - DEVICE
              type: string
            sequence:
              description: >-
                The order in which the device will be contacted, where 0
                represents the first device contacted
              format: int32
              type: integer
            testStatus:
              description: Whether the device has been tested
              enum:
                - TESTED
                - UNTESTED
                - PENDING
                - INVALID
              type: string
            timeframes:
              description: Timeframes when this device is active
              type: array
              items:
                $ref: '#/components/schemas/DeviceTimeframeInput'
          required:
            - deviceType
            - name
            - owner
    DevicePointer:
      description: A pointer to a device
      allOf:
        - $ref: '#/components/schemas/AbstractRecipientPointer'
        - properties:
            targetName:
              description: The target name of the resource
              type: string
    DeviceReference:
      allOf:
        - $ref: '#/components/schemas/AbstractRecipientReference'
        - properties:
            recipientType:
              type: string
              enum:
                - DEVICE
            deviceType:
              description: The type of the device
              type: string
              enum:
                - ANDROID_PUSH
                - APPLE_PUSH
                - BLACKBERRY_PUSH
                - BROWSER
                - EMAIL
                - FAX
                - GENERIC
                - IM
                - NUMERIC_PAGER
                - TEXT_PAGER
                - TEXT_PHONE
                - VOICE
                - VOICE_IVR
            name:
              type: string
              example: Work Email, Home Phone
            status:
              description: Whether the recipient is active. Inactive recipients do not receive notifications
              type: string
              enum:
                - ACTIVE
                - INACTIVE
                - INVALID
            links:
              $ref: '#/components/schemas/SelfLink'
          required:
            - deviceType
    DeviceTestInput:
      description: Test a device
      properties:
        device:
          $ref: '#/components/schemas/DevicePointer'
      required:
        - device
    AndroidPushDevice:
      allOf:
        - $ref: '#/components/schemas/AbstractDevice'
        - properties:
            accountId:
              type: string
            description:
              type: string
            deviceType:
              type: string
              enum:
                - ANDROID_PUSH
            registrationId:
              type: string
          required:
            - registrationId
    AndroidPushDeviceInput:
      allOf:
        - $ref: '#/components/schemas/AbstractDeviceInput'
        - properties:
            accountId:
              type: string
            description:
              type: string
            deviceType:
              type: string
              enum:
                - ANDROID_PUSH
            registrationId:
              type: string
          required:
            - accountId
            - registrationId
    ApplePushDevice:
      allOf:
        - $ref: '#/components/schemas/AbstractDevice'
        - properties:
            accountId:
              type: string
            alertSound:
              type: string
            apnToken:
              type: string
            description:
              type: string
            deviceType:
              type: string
              enum:
                - APPLE_PUSH
            soundStatus:
              type: string
            soundThreshold:
              type: string
              enum:
                - LOW
                - MEDIUM
                - HIGH
            repeatingAlerts:
              $ref: '#/components/schemas/RepeatingAlertConfig'
          required:
            - accountId
            - apnToken
    ApplePushDeviceInput:
      allOf:
        - $ref: '#/components/schemas/AbstractDeviceInput'
        - properties:
            accountId:
              type: string
            alertSound:
              type: string
            apnToken:
              type: string
            description:
              type: string
            deviceType:
              type: string
              enum:
                - APPLE_PUSH
            soundStatus:
              type: string
            soundThreshold:
              type: string
              enum:
                - LOW
                - MEDIUM
                - HIGH
            repeatingAlerts:
              $ref: '#/components/schemas/RepeatingAlertConfig'
          required:
            - accountId
            - apnToken
    BlackberryPushDevice:
      allOf:
        - $ref: '#/components/schemas/AbstractDevice'
        - properties:
            accountId:
              type: string
            description:
              type: string
            deviceType:
              enum:
                - BLACKBERRY_PUSH
              type: string
            registrationId:
              type: string
          required:
            - accountId
            - registrationId
    BlackberryPushDeviceInput:
      allOf:
        - $ref: '#/components/schemas/AbstractDeviceInput'
        - properties:
            accountId:
              type: string
            description:
              type: string
            deviceType:
              enum:
                - BLACKBERRY_PUSH
              type: string
            registrationId:
              type: string
          required:
            - accountId
            - registrationId
    EmailDevice:
      allOf:
        - $ref: '#/components/schemas/AbstractDevice'
        - properties:
            deviceType:
              enum:
                - EMAIL
              type: string
            emailAddress:
              type: string
          required:
            - emailAddress
    EmailDeviceInput:
      allOf:
        - $ref: '#/components/schemas/AbstractDeviceInput'
        - properties:
            deviceType:
              enum:
                - EMAIL
              type: string
            emailAddress:
              type: string
          required:
            - emailAddress
    FaxDevice:
      allOf:
        - $ref: '#/components/schemas/AbstractDevice'
        - properties:
            country:
              type: string
              enum:
                - AR
                - AU
                - BR
                - CA
                - FR
                - DE
                - HK
                - IN
                - IT
                - JP
                - PT
                - PR
                - GB
                - US
            deviceType:
              enum:
                - FAX
              type: string
            phoneNumber:
              pattern: '^\d{5,20}$'
              type: string
          required:
            - country
            - phoneNumber
    FaxDeviceInput:
      allOf:
        - $ref: '#/components/schemas/AbstractDeviceInput'
        - properties:
            country:
              type: string
              enum:
                - AR
                - AU
                - BR
                - CA
                - FR
                - DE
                - HK
                - IN
                - IT
                - JP
                - PT
                - PR
                - GB
                - US
            deviceType:
              enum:
                - FAX
              type: string
            phoneNumber:
              pattern: '^\d{5,20}$'
              type: string
          required:
            - country
            - phoneNumber
    GenericDevice:
      allOf:
        - $ref: '#/components/schemas/AbstractDevice'
        - properties:
            deviceType:
              type: string
              enum:
                - GENERIC
            pin:
              type: string
    GenericDeviceInput:
      allOf:
        - $ref: '#/components/schemas/AbstractDeviceInput'
        - properties:
            deviceType:
              type: string
              enum:
                - GENERIC
            pin:
              type: string
    IMDevice:
      allOf:
        - $ref: '#/components/schemas/AbstractDevice'
        - properties:
            address:
              type: string
            deviceType:
              type: string
              enum:
                - IM
          required:
            - address
    IMDeviceInput:
      allOf:
        - $ref: '#/components/schemas/AbstractDeviceInput'
        - properties:
            address:
              type: string
            deviceType:
              type: string
              enum:
                - IM
          required:
            - address
    NumericPagerDevice:
      allOf:
        - $ref: '#/components/schemas/AbstractDevice'
        - properties:
            areaCode:
              type: string
            country:
              type: string
              enum:
                - AF
                - AX
                - AL
                - DZ
                - AS
                - AD
                - AO
                - AI
                - AQ
                - AG
                - AR
                - AM
                - AW
                - AU
                - AT
                - AZ
                - BS
                - BH
                - BD
                - BB
                - BY
                - BE
                - BZ
                - BJ
                - BM
                - BT
                - BO
                - BQ
                - BA
                - BW
                - BV
                - BR
                - IO
                - BN
                - BG
                - BF
                - BI
                - KH
                - CM
                - CA
                - CV
                - KY
                - CF
                - TD
                - CL
                - CN
                - CX
                - CC
                - CO
                - KM
                - CG
                - CD
                - CK
                - CR
                - CI
                - HR
                - CU
                - CW
                - CY
                - CZ
                - DK
                - DJ
                - DM
                - DO
                - EC
                - EG
                - SV
                - GQ
                - ER
                - EE
                - ET
                - FK
                - FO
                - FJ
                - FI
                - FR
                - GF
                - PF
                - TF
                - GA
                - GM
                - GE
                - DE
                - GH
                - GI
                - GR
                - GL
                - GD
                - GP
                - GU
                - GT
                - GG
                - GN
                - GW
                - GY
                - HT
                - HM
                - VA
                - HN
                - HK
                - HU
                - IS
                - IN
                - ID
                - IR
                - IQ
                - IE
                - IM
                - IL
                - IT
                - JM
                - JP
                - JE
                - JO
                - KZ
                - KE
                - KI
                - KP
                - KR
                - KW
                - KG
                - LA
                - LV
                - LB
                - LS
                - LR
                - LY
                - LI
                - LT
                - LU
                - MO
                - MK
                - MG
                - MW
                - MY
                - MV
                - ML
                - MT
                - MH
                - MQ
                - MR
                - MU
                - YT
                - MX
                - FM
                - MD
                - MC
                - MN
                - ME
                - MS
                - MA
                - MZ
                - MM
                - NA
                - NR
                - NP
                - NL
                - NC
                - NZ
                - NI
                - NE
                - NG
                - NU
                - NF
                - MP
                - 'NO'
                - OM
                - PK
                - PW
                - PS
                - PA
                - PG
                - PY
                - PE
                - PH
                - PN
                - PL
                - PT
                - PR
                - QA
                - RE
                - RO
                - RU
                - RW
                - BL
                - SH
                - KN
                - LC
                - MF
                - PM
                - VC
                - WS
                - SM
                - ST
                - SA
                - SN
                - RS
                - SC
                - SL
                - SG
                - SX
                - SK
                - SI
                - SB
                - SO
                - ZA
                - GS
                - SS
                - ES
                - LK
                - SD
                - SR
                - SJ
                - SZ
                - SE
                - CH
                - SY
                - TW
                - TJ
                - TZ
                - TH
                - TL
                - TG
                - TK
                - TO
                - TT
                - TN
                - TR
                - TM
                - TC
                - TV
                - UG
                - UA
                - AE
                - GB
                - US
                - UM
                - UY
                - UZ
                - VU
                - VE
                - VN
                - VG
                - VI
                - WF
                - EH
                - YE
                - ZM
                - ZW
            deviceType:
              type: string
              enum:
                - NUMERIC_PAGER
            pagerNumber:
              type: string
            pin:
              type: string
    NumericPagerDeviceInput:
      allOf:
        - $ref: '#/components/schemas/AbstractDeviceInput'
        - properties:
            areaCode:
              type: string
            country:
              type: string
              enum:
                - AF
                - AX
                - AL
                - DZ
                - AS
                - AD
                - AO
                - AI
                - AQ
                - AG
                - AR
                - AM
                - AW
                - AU
                - AT
                - AZ
                - BS
                - BH
                - BD
                - BB
                - BY
                - BE
                - BZ
                - BJ
                - BM
                - BT
                - BO
                - BQ
                - BA
                - BW
                - BV
                - BR
                - IO
                - BN
                - BG
                - BF
                - BI
                - KH
                - CM
                - CA
                - CV
                - KY
                - CF
                - TD
                - CL
                - CN
                - CX
                - CC
                - CO
                - KM
                - CG
                - CD
                - CK
                - CR
                - CI
                - HR
                - CU
                - CW
                - CY
                - CZ
                - DK
                - DJ
                - DM
                - DO
                - EC
                - EG
                - SV
                - GQ
                - ER
                - EE
                - ET
                - FK
                - FO
                - FJ
                - FI
                - FR
                - GF
                - PF
                - TF
                - GA
                - GM
                - GE
                - DE
                - GH
                - GI
                - GR
                - GL
                - GD
                - GP
                - GU
                - GT
                - GG
                - GN
                - GW
                - GY
                - HT
                - HM
                - VA
                - HN
                - HK
                - HU
                - IS
                - IN
                - ID
                - IR
                - IQ
                - IE
                - IM
                - IL
                - IT
                - JM
                - JP
                - JE
                - JO
                - KZ
                - KE
                - KI
                - KP
                - KR
                - KW
                - KG
                - LA
                - LV
                - LB
                - LS
                - LR
                - LY
                - LI
                - LT
                - LU
                - MO
                - MK
                - MG
                - MW
                - MY
                - MV
                - ML
                - MT
                - MH
                - MQ
                - MR
                - MU
                - YT
                - MX
                - FM
                - MD
                - MC
                - MN
                - ME
                - MS
                - MA
                - MZ
                - MM
                - NA
                - NR
                - NP
                - NL
                - NC
                - NZ
                - NI
                - NE
                - NG
                - NU
                - NF
                - MP
                - 'NO'
                - OM
                - PK
                - PW
                - PS
                - PA
                - PG
                - PY
                - PE
                - PH
                - PN
                - PL
                - PT
                - PR
                - QA
                - RE
                - RO
                - RU
                - RW
                - BL
                - SH
                - KN
                - LC
                - MF
                - PM
                - VC
                - WS
                - SM
                - ST
                - SA
                - SN
                - RS
                - SC
                - SL
                - SG
                - SX
                - SK
                - SI
                - SB
                - SO
                - ZA
                - GS
                - SS
                - ES
                - LK
                - SD
                - SR
                - SJ
                - SZ
                - SE
                - CH
                - SY
                - TW
                - TJ
                - TZ
                - TH
                - TL
                - TG
                - TK
                - TO
                - TT
                - TN
                - TR
                - TM
                - TC
                - TV
                - UG
                - UA
                - AE
                - GB
                - US
                - UM
                - UY
                - UZ
                - VU
                - VE
                - VN
                - VG
                - VI
                - WF
                - EH
                - YE
                - ZM
                - ZW
            deviceType:
              enum:
                - NUMERIC_PAGER
              type: string
            pagerNumber:
              type: string
            pin:
              type: string
    PublicAddressDevice:
      allOf:
        - $ref: '#/components/schemas/AbstractDevice'
        - description: a.k.a. Voice IVR
          properties:
            deviceType:
              enum:
                - VOICE_IVR
              type: string
            phoneNumber:
              description: >-
                E.164 international format phone number including +, country
                code, and extension
              type: string
            country:
              type: string
              enum:
                - AF
                - AX
                - AL
                - DZ
                - AS
                - AD
                - AO
                - AI
                - AQ
                - AG
                - AR
                - AM
                - AW
                - AU
                - AT
                - AZ
                - BS
                - BH
                - BD
                - BB
                - BY
                - BE
                - BZ
                - BJ
                - BM
                - BT
                - BO
                - BQ
                - BA
                - BW
                - BV
                - BR
                - IO
                - BN
                - BG
                - BF
                - BI
                - KH
                - CM
                - CA
                - CV
                - KY
                - CF
                - TD
                - CL
                - CN
                - CX
                - CC
                - CO
                - KM
                - CG
                - CD
                - CK
                - CR
                - CI
                - HR
                - CU
                - CW
                - CY
                - CZ
                - DK
                - DJ
                - DM
                - DO
                - EC
                - EG
                - SV
                - GQ
                - ER
                - EE
                - ET
                - FK
                - FO
                - FJ
                - FI
                - FR
                - GF
                - PF
                - TF
                - GA
                - GM
                - GE
                - DE
                - GH
                - GI
                - GR
                - GL
                - GD
                - GP
                - GU
                - GT
                - GG
                - GN
                - GW
                - GY
                - HT
                - HM
                - VA
                - HN
                - HK
                - HU
                - IS
                - IN
                - ID
                - IR
                - IQ
                - IE
                - IM
                - IL
                - IT
                - JM
                - JP
                - JE
                - JO
                - KZ
                - KE
                - KI
                - KP
                - KR
                - KW
                - KG
                - LA
                - LV
                - LB
                - LS
                - LR
                - LY
                - LI
                - LT
                - LU
                - MO
                - MK
                - MG
                - MW
                - MY
                - MV
                - ML
                - MT
                - MH
                - MQ
                - MR
                - MU
                - YT
                - MX
                - FM
                - MD
                - MC
                - MN
                - ME
                - MS
                - MA
                - MZ
                - MM
                - NA
                - NR
                - NP
                - NL
                - NC
                - NZ
                - NI
                - NE
                - NG
                - NU
                - NF
                - MP
                - 'NO'
                - OM
                - PK
                - PW
                - PS
                - PA
                - PG
                - PY
                - PE
                - PH
                - PN
                - PL
                - PT
                - PR
                - QA
                - RE
                - RO
                - RU
                - RW
                - BL
                - SH
                - KN
                - LC
                - MF
                - PM
                - VC
                - WS
                - SM
                - ST
                - SA
                - SN
                - RS
                - SC
                - SL
                - SG
                - SX
                - SK
                - SI
                - SB
                - SO
                - ZA
                - GS
                - SS
                - ES
                - LK
                - SD
                - SR
                - SJ
                - SZ
                - SE
                - CH
                - SY
                - TW
                - TJ
                - TZ
                - TH
                - TL
                - TG
                - TK
                - TO
                - TT
                - TN
                - TR
                - TM
                - TC
                - TV
                - UG
                - UA
                - AE
                - GB
                - US
                - UM
                - UY
                - UZ
                - VU
                - VE
                - VN
                - VG
                - VI
                - WF
                - EH
                - YE
                - ZM
                - ZW
          required:
            - phoneNumber
    PublicAddressDeviceInput:
      allOf:
        - $ref: '#/components/schemas/AbstractDeviceInput'
        - description: a.k.a. Voice IVR
          properties:
            deviceType:
              enum:
                - VOICE_IVR
              type: string
            phoneNumber:
              description: >-
                E.164 international format phone number including country code
                and extension
              type: string
          required:
            - phoneNumber
    SMSDevice:
      allOf:
        - $ref: '#/components/schemas/AbstractDevice'
        - properties:
            deviceType:
              type: string
              enum:
                - TEXT_PHONE
            phoneNumber:
              description: >-
                E.164 international format phone number including + and country
                code
              type: string
            country:
              type: string
              enum:
                - AF
                - AX
                - AL
                - DZ
                - AS
                - AD
                - AO
                - AI
                - AQ
                - AG
                - AR
                - AM
                - AW
                - AU
                - AT
                - AZ
                - BS
                - BH
                - BD
                - BB
                - BY
                - BE
                - BZ
                - BJ
                - BM
                - BT
                - BO
                - BQ
                - BA
                - BW
                - BV
                - BR
                - IO
                - BN
                - BG
                - BF
                - BI
                - KH
                - CM
                - CA
                - CV
                - KY
                - CF
                - TD
                - CL
                - CN
                - CX
                - CC
                - CO
                - KM
                - CG
                - CD
                - CK
                - CR
                - CI
                - HR
                - CU
                - CW
                - CY
                - CZ
                - DK
                - DJ
                - DM
                - DO
                - EC
                - EG
                - SV
                - GQ
                - ER
                - EE
                - ET
                - FK
                - FO
                - FJ
                - FI
                - FR
                - GF
                - PF
                - TF
                - GA
                - GM
                - GE
                - DE
                - GH
                - GI
                - GR
                - GL
                - GD
                - GP
                - GU
                - GT
                - GG
                - GN
                - GW
                - GY
                - HT
                - HM
                - VA
                - HN
                - HK
                - HU
                - IS
                - IN
                - ID
                - IR
                - IQ
                - IE
                - IM
                - IL
                - IT
                - JM
                - JP
                - JE
                - JO
                - KZ
                - KE
                - KI
                - KP
                - KR
                - KW
                - KG
                - LA
                - LV
                - LB
                - LS
                - LR
                - LY
                - LI
                - LT
                - LU
                - MO
                - MK
                - MG
                - MW
                - MY
                - MV
                - ML
                - MT
                - MH
                - MQ
                - MR
                - MU
                - YT
                - MX
                - FM
                - MD
                - MC
                - MN
                - ME
                - MS
                - MA
                - MZ
                - MM
                - NA
                - NR
                - NP
                - NL
                - NC
                - NZ
                - NI
                - NE
                - NG
                - NU
                - NF
                - MP
                - 'NO'
                - OM
                - PK
                - PW
                - PS
                - PA
                - PG
                - PY
                - PE
                - PH
                - PN
                - PL
                - PT
                - PR
                - QA
                - RE
                - RO
                - RU
                - RW
                - BL
                - SH
                - KN
                - LC
                - MF
                - PM
                - VC
                - WS
                - SM
                - ST
                - SA
                - SN
                - RS
                - SC
                - SL
                - SG
                - SX
                - SK
                - SI
                - SB
                - SO
                - ZA
                - GS
                - SS
                - ES
                - LK
                - SD
                - SR
                - SJ
                - SZ
                - SE
                - CH
                - SY
                - TW
                - TJ
                - TZ
                - TH
                - TL
                - TG
                - TK
                - TO
                - TT
                - TN
                - TR
                - TM
                - TC
                - TV
                - UG
                - UA
                - AE
                - GB
                - US
                - UM
                - UY
                - UZ
                - VU
                - VE
                - VN
                - VG
                - VI
                - WF
                - EH
                - YE
                - ZM
                - ZW
          required:
            - phoneNumber
    SMSDeviceInput:
      allOf:
        - $ref: '#/components/schemas/AbstractDeviceInput'
        - properties:
            deviceType:
              enum:
                - TEXT_PHONE
              type: string
            phoneNumber:
              description: >-
                E.164 international format phone number including country code
                and extension
              type: string
          required:
            - phoneNumber
    TextPagerDevice:
      allOf:
        - $ref: '#/components/schemas/AbstractDevice'
        - properties:
            deviceType:
              enum:
                - TEXT_PAGER
              type: string
            pin:
              type: string
            twoWayDevice:
              type: boolean
          required:
            - pin
            - twoWayDevice
    TextPagerDeviceInput:
      allOf:
        - $ref: '#/components/schemas/AbstractDeviceInput'
        - properties:
            deviceType:
              enum:
                - TEXT_PAGER
              type: string
            pin:
              type: string
            twoWayDevice:
              type: boolean
          required:
            - pin
            - twoWayDevice
    VoiceDevice:
      allOf:
        - $ref: '#/components/schemas/AbstractDevice'
        - properties:
            deviceType:
              enum:
                - VOICE
              type: string
            phoneNumber:
              description: >-
                E.164 international format phone number including +, country
                code, and extension
              type: string
            country:
              type: string
              enum:
                - AF
                - AX
                - AL
                - DZ
                - AS
                - AD
                - AO
                - AI
                - AQ
                - AG
                - AR
                - AM
                - AW
                - AU
                - AT
                - AZ
                - BS
                - BH
                - BD
                - BB
                - BY
                - BE
                - BZ
                - BJ
                - BM
                - BT
                - BO
                - BQ
                - BA
                - BW
                - BV
                - BR
                - IO
                - BN
                - BG
                - BF
                - BI
                - KH
                - CM
                - CA
                - CV
                - KY
                - CF
                - TD
                - CL
                - CN
                - CX
                - CC
                - CO
                - KM
                - CG
                - CD
                - CK
                - CR
                - CI
                - HR
                - CU
                - CW
                - CY
                - CZ
                - DK
                - DJ
                - DM
                - DO
                - EC
                - EG
                - SV
                - GQ
                - ER
                - EE
                - ET
                - FK
                - FO
                - FJ
                - FI
                - FR
                - GF
                - PF
                - TF
                - GA
                - GM
                - GE
                - DE
                - GH
                - GI
                - GR
                - GL
                - GD
                - GP
                - GU
                - GT
                - GG
                - GN
                - GW
                - GY
                - HT
                - HM
                - VA
                - HN
                - HK
                - HU
                - IS
                - IN
                - ID
                - IR
                - IQ
                - IE
                - IM
                - IL
                - IT
                - JM
                - JP
                - JE
                - JO
                - KZ
                - KE
                - KI
                - KP
                - KR
                - KW
                - KG
                - LA
                - LV
                - LB
                - LS
                - LR
                - LY
                - LI
                - LT
                - LU
                - MO
                - MK
                - MG
                - MW
                - MY
                - MV
                - ML
                - MT
                - MH
                - MQ
                - MR
                - MU
                - YT
                - MX
                - FM
                - MD
                - MC
                - MN
                - ME
                - MS
                - MA
                - MZ
                - MM
                - NA
                - NR
                - NP
                - NL
                - NC
                - NZ
                - NI
                - NE
                - NG
                - NU
                - NF
                - MP
                - 'NO'
                - OM
                - PK
                - PW
                - PS
                - PA
                - PG
                - PY
                - PE
                - PH
                - PN
                - PL
                - PT
                - PR
                - QA
                - RE
                - RO
                - RU
                - RW
                - BL
                - SH
                - KN
                - LC
                - MF
                - PM
                - VC
                - WS
                - SM
                - ST
                - SA
                - SN
                - RS
                - SC
                - SL
                - SG
                - SX
                - SK
                - SI
                - SB
                - SO
                - ZA
                - GS
                - SS
                - ES
                - LK
                - SD
                - SR
                - SJ
                - SZ
                - SE
                - CH
                - SY
                - TW
                - TJ
                - TZ
                - TH
                - TL
                - TG
                - TK
                - TO
                - TT
                - TN
                - TR
                - TM
                - TC
                - TV
                - UG
                - UA
                - AE
                - GB
                - US
                - UM
                - UY
                - UZ
                - VU
                - VE
                - VN
                - VG
                - VI
                - WF
                - EH
                - YE
                - ZM
                - ZW
          required:
            - deviceType
            - phoneNumber
    VoiceDeviceInput:
      allOf:
        - $ref: '#/components/schemas/AbstractDeviceInput'
        - properties:
            deviceType:
              enum:
                - VOICE
              type: string
            phoneNumber:
              description: >-
                E.164 international format phone number including country code
                and extension
              type: string
          required:
            - deviceType
            - phoneNumber
    DeviceTimeframe:
      description: The timeframe in which a device is available to receive notifications
      properties:
        days:
          description: List of the days of the week this timeframe is active
          items:
            enum:
              - SU
              - MO
              - TU
              - WE
              - TH
              - FR
              - SA
            type: string
          type: array
        durationInMinutes:
          description: The length of the timeframe in minutes
          format: int32
          type: integer
        excludeHolidays:
          description: True if the timeframe is not active on holidays
          type: boolean
        name:
          type: string
          example: After hours
        startTime:
          description: >-
            The time of day that the timeframe begins, in the device owners
            timezone
          type: string
        timezone:
          description: The time zone of the device owner
          type: string
          example: US/Pacific
      required:
        - name
        - startTime
        - durationInMinutes
        - excludeHolidays
    DeviceTimeframeInput:
      description: The timeframe in which a device is available to receive notifications
      properties:
        days:
          description: List of the days of the week this timeframe is active
          items:
            enum:
              - SU
              - MO
              - TU
              - WE
              - TH
              - FR
              - SA
            type: string
          type: array
        durationInMinutes:
          description: The length of the timeframe in minutes
          format: int32
          type: integer
        excludeHolidays:
          description: True if the timeframe is not active on holidays
          type: boolean
        name:
          type: string
          example: After hours
        startTime:
          description: The time of day that the timeframe begins, in the device owners timezone
          type: string
          format: date-time
      required:
        - name
        - startTime
        - durationInMinutes
        - excludeHolidays
    DynamicTeam:
      allOf:
        - $ref: '#/components/schemas/AbstractRecipient'
        - description: Dynamic teams are used for collecting users and devices and organizing them into notification schedules
          properties:
            recipientType:
              type: string
              enum:
                - DYNAMIC_TEAM
            useDefaultDevices:
              type: boolean
            criteria:
              $ref: '#/components/schemas/SearchCriteria'
            site:
              $ref: '#/components/schemas/SiteReference'
            supervisors:
              $ref: '#/components/schemas/PersonPagination'
            observers:
              $ref: '#/components/schemas/ObserverPagination'
          required:
            - recipientType
    DynamicTeamInput:
      description: Dynamic teams are used for collecting users and devices and organizing them into notification schedules
      allOf:
        - $ref: '#/components/schemas/AbstractRecipientInput'
        - properties:
            recipientType:
              type: string
              enum:
                - GROUP
            description:
              type: string
            useDefaultDevices:
              type: boolean
            criteria:
              type: array
              items:
                $ref: '#/components/schemas/SearchCriteriaInput'
            site:
              $ref: '#/components/schemas/SitePointer'
            supervisors:
              description: A list of group supervisors. Groups must have at least one supervisor
              type: array
              items:
                $ref: '#/components/schemas/PersonPointer'
            observers:
              description: A list of observers
              type: array
              items:
                $ref: '#/components/schemas/ObserverPointer'
    DynamicTeamReference:
      allOf:
        - $ref: '#/components/schemas/AbstractRecipientReference'
        - properties:
            recipientType:
              type: string
              enum:
                - DYNAMIC_TEAM
    SearchCriteria:
      properties:
        operand:
          type: string
          enum:
            - AND
            - OR
        criteria:
          $ref: '#/components/schemas/SearchCriterionPagination'
    SearchCriteriaInput:
      properties:
        operand:
          type: string
          enum:
            - AND
            - OR
        criteria:
          type: array
          items:
            $ref: '#/components/schemas/SearchCriterion'
    SearchCriterion:
      oneOf:
        - $ref: '#/components/schemas/FieldSearchCriterion'
        - $ref: '#/components/schemas/CustomFieldSearchCriterion'
        - $ref: '#/components/schemas/CustomAttributeSearchCriterion'
      discriminator:
        propertyName: searchCriterionType
    AbstractSearchCriterion:
      properties:
        searchCriterionType:
          type: string
          enum:
            - FIELD
            - CUSTOM_FIELD
            - CUSTOM_ATTRIBUTE
      required:
        - searchCriterionType
    FieldSearchCriterion:
      allOf:
        - $ref: '#/components/schemas/AbstractSearchCriterion'
        - properties:
            searchCriterionType:
              type: string
              enum:
                - FIELD
            field:
              type: string
            operand:
              type: string
              enum:
                - EQUALS
                - BEGINS_WITH
                - ENDS_WITH
                - CONTAINS
            value:
              type: string
          required:
            - field
            - operand
            - value
    CustomFieldSearchCriterion:
      allOf:
        - $ref: '#/components/schemas/AbstractSearchCriterion'
        - properties:
            searchCriterionType:
              type: string
              enum:
                - CUSTOM_FIELD
            field:
              type: string
            operand:
              type: string
              enum:
                - EQUALS
                - BEGINS_WITH
                - ENDS_WITH
                - CONTAINS
                - TRUE
                - FALSE
            value:
              type: string
          required:
            - field
            - operand
            - value
    CustomAttributeSearchCriterion:
      allOf:
        - $ref: '#/components/schemas/AbstractSearchCriterion'
        - properties:
            searchCriterionType:
              type: string
              enum:
                - CUSTOM_ATTRIBUTE
            category:
              type: string
            values:
              type: array
              items:
                type: string
          required:
            - category
            - values
    RepeatingAlertConfig:
      type: object
      properties:
        enabled:
          type: boolean
        repetitions:
          type: integer
        intervalInSeconds:
          type: integer
        priorityThreshold:
          description: The minimum event priority to receive repeating alerts
          type: string
          enum:
            - LOW
            - HIGH
            - MEDIUM
    EmailDeliveryStatus:
      description: Email delivery status notification
      type: object
      properties:
        at:
          type: string
          format: date-time
        notification:
          $ref: '#/components/schemas/NotificationPointer'
        emailAddress:
          type: string
        status:
          description: Email delivery status
          type: string
          enum:
            - BOUNCED
    Event:
      description: An event in the xMatters system
      properties:
        id:
          type: string
          format: uuid
        eventId:
          description: A legacy identifier (numeric) that represents this resource
          type: string
        eventType:
          description: Event type
          type: string
          enum:
            - USER
            - SYSTEM
        systemEventType:
          description: System event type
          type: string
          enum:
            - DEVICE_VALIDATION
            - FORGOT_MY_PASSWORD
            - EPIC_NOTIFICATION
            - ON_CALL_START_SHIFT
            - SUPERVISOR_RESET
            - TEMP_REPLACEMENT
            - TEMP_REPLACEMENT_SUP
            - SYSTEM_MESSAGE
        name:
          description: >-
            Presentation name derived from various data sources depending on the
            type of the event
          type: string
        bypassPhoneIntro:
          type: boolean
        conference:
          $ref: '#/components/schemas/ConferenceReference'
        created:
          format: date-time
          type: string
        escalationOverride:
          type: boolean
        expirationInMinutes:
          type: integer
        terminated:
          format: date-time
          type: string
        plan:
          $ref: '#/components/schemas/PlanReference'
        form:
          $ref: '#/components/schemas/FormReference'
        incident:
          type: string
        integration:
          $ref: '#/components/schemas/IntegrationReference'
        overrideDeviceRestrictions:
          default: false
          type: boolean
        priority:
          type: string
          enum:
            - LOW
            - MEDIUM
            - HIGH
        properties:
          $ref: '#/components/schemas/Properties'
        recipients:
          $ref: '#/components/schemas/RecipientPagination'
        requestId:
          type: string
        requirePhonePassword:
          type: boolean
        responseCountsEnabled:
          default: false
          type: boolean
        oneWay:
          type: boolean
        otherResponseCount:
          type: integer
        otherResponseCountThreshold:
          type: integer
        responseOptions:
          $ref: '#/components/schemas/ResponseOptionPagination'
        senderOverrides:
          type: object
        status:
          type: string
          enum:
            - ACTIVE
            - SUSPENDED
            - TERMINATED
        targetAllDevices:
          description: Target all device types
          type: boolean
        targetDeviceNames:
          description: Target specific device categories
          type: array
          items:
            $ref: '#/components/schemas/DeviceName'
        floodControl:
          type: boolean
          description: True if filtering and suppression was active
        submitter:
          $ref: '#/components/schemas/PersonReference'
        subscription:
          type: boolean
        voicemailOptions:
          description: Voicemail Options
          properties:
            every:
              type: integer
            leave:
              type: string
            retry:
              type: integer
        messages:
          $ref: '#/components/schemas/MessagePagination'
        annotations:
          $ref: '#/components/schemas/EventAnnotationPagination'
        revision:
          $ref: '#/components/schemas/Revision'
      required:
        - id
        - eventId
        - created
        - status
        - priority
    EventInput:
      description: A form submission
      properties:
        id:
          type: string
          format: uuid
        bypassPhoneIntro:
          default: false
          type: boolean
        callbacks:
          items:
            $ref: '#/components/schemas/Callback'
          type: array
        conference:
          $ref: '#/components/schemas/ConferencePointer'
        escalationOverride:
          default: false
          type: boolean
        expirationInMinutes:
          type: integer
        form:
          $ref: '#/components/schemas/FormPointer'
        incident:
          type: string
        integration:
          $ref: '#/components/schemas/IntegrationPointer'
        overrideDeviceRestrictions:
          default: false
          type: boolean
        priority:
          type: string
          enum:
            - LOW
            - MEDIUM
            - HIGH
        properties:
          $ref: '#/components/schemas/Properties'
        recipients:
          description: 'Note: required if pre-configured recipients do not exist'
          items:
            $ref: '#/components/schemas/RecipientPointer'
          type: array
        requestId:
          type: string
        requirePhonePassword:
          default: false
          type: boolean
        otherResponseCountThreshold:
          description: >-
            Response fill count threshold. Alias otherResponseCount will be
            mapped to this attribute
          type: integer
        responseOptions:
          description: >-
            A list of the response options to be displayed for the event.
            Response options are identified by a Universally Unique Identifier
            (UUID)
          type: array
          items:
            $ref: '#/components/schemas/ResponseOptionInput'
        senderOverrides:
          type: object
        status:
          type: string
          enum:
            - ACTIVE
            - SUSPENDED
            - TERMINATED
        targetAllDevices:
          description: Target all device types
          type: boolean
        targetDeviceNames:
          description: Target specific device names
          type: array
          items:
            $ref: '#/components/schemas/DeviceNamePointer'
        voicemailOptions:
          description: Voicemail Options
          properties:
            every:
              type: integer
            leave:
              type: string
            retry:
              type: integer
        by:
          $ref: '#/components/schemas/PersonPointer'
    EventReference:
      properties:
        id:
          type: string
          format: uuid
        eventId:
          description: A legacy identifier (numeric) that represents this resource
          type: string
        eventType:
          description: User generated or System generated event
          type: string
          enum:
            - USER
            - SYSTEM
        priority:
          type: string
          enum:
            - LOW
            - MEDIUM
            - HIGH
        links:
          $ref: '#/components/schemas/SelfLink'
      required:
        - id
        - eventId
        - eventType
        - priority
    EventPointer:
      properties:
        id:
          type: string
          format: uuid
      required:
        - id
    EventAnnotation:
      description: An event annotation
      properties:
        id:
          type: string
          format: uuid
        event:
          $ref: '#/components/schemas/EventReference'
        author:
          $ref: '#/components/schemas/PersonReference'
        source:
          type: string
          enum:
            - BROWSER
            - IOS
            - ANDROID
        comment:
          type: string
        created:
          type: string
          format: date-time
        properties:
          $ref: '#/components/schemas/Properties'
      required:
        - id
        - event
        - author
        - comment
        - created
    EventAnnotationInput:
      description: An event annotation
      properties:
        comment:
          type: string
        source:
          type: string
          enum:
            - BROWSER
            - IOS
            - ANDROID
        properties:
          $ref: '#/components/schemas/Properties'
      required:
        - comment
    EventSchedule:
      description: A scheduled event or series of events
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        event:
          $ref: '#/components/schemas/EventInput'
        recurrence:
          $ref: '#/components/schemas/Recurrence'
        owner:
          $ref: '#/components/schemas/PersonReference'
      required:
        - name
        - event
        - recurrence
        - owner
    EventScheduleInput:
      description: A scheduled event or series of events
      properties:
        name:
          type: string
        event:
          $ref: '#/components/schemas/EventInput'
        recurrence:
          $ref: '#/components/schemas/Recurrence'
        owner:
          $ref: '#/components/schemas/PersonPointer'
      required:
        - name
        - event
        - recurrence
    EventSuppression:
      description: An event suppression
      properties:
        event:
          $ref: '#/components/schemas/EventReference'
        match:
          $ref: '#/components/schemas/EventReference'
        at:
          type: string
          format: date-time
        filters:
          $ref: '#/components/schemas/FilterPagination'
      required:
        - event
        - match
        - at
        - filters
    FeatureToggle:
      description: Feature toggle
      properties:
        name:
          type: string
        value:
          type: string
      required:
        - name
        - value
    FileAttachment:
      description: File attachment
      properties:
        id:
          type: string
          format: uuid
        name:
          description: File name
          type: string
        ext:
          description: File extension
          type: string
        mimeType:
          description: MIME type
          type: string
        size:
          description: File size in bytes
          type: integer
        url:
          description: File download URL
          type: string
      required:
        - id
        - url
    EventCorrelator:
      oneOf:
        - $ref: '#/components/schemas/PropertyEventCorrelator'
        - $ref: '#/components/schemas/AttributeEventCorrelator'
      discriminator:
        propertyName: eventCorrelationType
    AbstractEventCorrelator:
      properties:
        eventCorrelationType:
          type: string
          enum:
            - PROPERTY
            - ATTRIBUTE
      required:
        - eventCorrelationType
    PropertyEventCorrelator:
      properties:
        eventCorrelationType:
          type: string
          enum:
            - PROPERTY
        property:
          description: Case insensitive property name
          type: string
      required:
        - eventCorrelationType
        - property
    AttributeEventCorrelator:
      properties:
        eventCorrelationType:
          type: string
          enum:
            - ATTRIBUTE
        attribute:
          description: Case sensitive attribute name
          type: string
          enum:
            - recipients
            - priority
            - incident
            - integration
            - submitter
      required:
        - eventCorrelationType
        - attribute
    Filter:
      oneOf:
        - $ref: '#/components/schemas/EventFilter'
        - $ref: '#/components/schemas/NotificationFilter'
      discriminator:
        propertyName: filterType
    AbstractFilter:
      description: A filter
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        filterType:
          type: string
          enum:
            - EVENT
            - NOTIFICATION
        active:
          type: boolean
        plan:
          $ref: '#/components/schemas/PlanReference'
        integration:
          $ref: '#/components/schemas/IntegrationReference'
      required:
        - id
        - name
        - filterType
        - active
    EventFilter:
      oneOf:
        - $ref: '#/components/schemas/CorrelationEventFilter'
        - $ref: '#/components/schemas/FloodControlEventFilter'
      discriminator:
        propertyName: eventFilterType
    AbstractEventFilter:
      description: An event filter
      allOf:
        - $ref: '#/components/schemas/AbstractFilter'
        - properties:
            eventFilterType:
              type: string
              enum:
                - CORRELATION
                - FLOOD_CONTROL
          required:
            - eventFilterType
    CorrelationEventFilter:
      description: An event filter
      allOf:
        - $ref: '#/components/schemas/AbstractEventFilter'
        - properties:
            eventFilterType:
              type: string
              enum:
                - CORRELATION
            config:
              description: Configuration properties that will be passed to filter constructor
              type: object
              properties:
                windowDurationSeconds:
                  type: integer
                correlators:
                  type: array
                  items:
                    $ref: '#/components/schemas/EventCorrelator'
    FloodControlEventFilter:
      description: An event filter
      allOf:
        - $ref: '#/components/schemas/AbstractEventFilter'
        - properties:
            eventFilterType:
              type: string
              enum:
                - FLOOD_CONTROL
            config:
              description: Configuration properties that will be passed to filter constructor
              type: object
              properties:
                floodThreshold:
                  type: integer
                maxEventCount:
                  type: integer
                maxDurationSeconds:
                  type: integer
                correlationFilters:
                  $ref: '#/components/schemas/CorrelationEventFilterPagination'
    FilterInput:
      oneOf:
        - $ref: '#/components/schemas/EventFilterInput'
        - $ref: '#/components/schemas/NotificationFilterInput'
      discriminator:
        propertyName: filterType
    AbstractFilterInput:
      description: An event filter
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        filterType:
          type: string
          enum:
            - EVENT
            - NOTIFICATION
        active:
          type: boolean
        plan:
          $ref: '#/components/schemas/PlanPointer'
        integration:
          $ref: '#/components/schemas/IntegrationPointer'
    EventFilterInput:
      oneOf:
        - $ref: '#/components/schemas/CorrelationEventFilterInput'
        - $ref: '#/components/schemas/FloodControlEventFilterInput'
      discriminator:
        propertyName: eventFilterType
    AbstractEventFilterInput:
      description: An event filter
      allOf:
        - $ref: '#/components/schemas/AbstractFilter'
        - properties:
            filterType:
              type: string
              enum:
                - EVENT
            eventFilterType:
              type: string
              enum:
                - CORRELATION
                - FLOOD_CONTROL
    CorrelationEventFilterInput:
      allOf:
        - $ref: '#/components/schemas/AbstractEventFilterInput'
        - properties:
            eventFilterType:
              type: string
              enum:
                - CORRELATION
            config:
              description: Configuration properties that will be passed to filter constructor
              type: object
              properties:
                windowDurationSeconds:
                  type: integer
                correlators:
                  type: array
                  items:
                    $ref: '#/components/schemas/EventCorrelator'
    FloodControlEventFilterInput:
      allOf:
        - $ref: '#/components/schemas/AbstractEventFilterInput'
        - properties:
            eventFilterType:
              type: string
              enum:
                - FLOOD_CONTROL
            config:
              description: Configuration properties that will be passed to filter constructor
              type: object
              properties:
                floodThreshold:
                  type: integer
                maxEventCount:
                  type: integer
                maxDurationSeconds:
                  type: integer
                correlationFilters:
                  type: array
                  items:
                    $ref: '#/components/schemas/FilterPointer'
    NotificationFilter:
      oneOf:
        - $ref: '#/components/schemas/DefaultNotificationFilter'
      discriminator:
        propertyName: notificationFilterType
    AbstractNotificationFilter:
      description: A notification filter
      allOf:
        - $ref: '#/components/schemas/AbstractFilter'
        - properties:
            filterType:
              type: string
              enum:
                - NOTIFICATION
            notificationfilterType:
              type: string
              enum:
                - DEFAULT
    DefaultNotificationFilter:
      allOf:
        - $ref: '#/components/schemas/AbstractNotificationFilter'
        - properties:
            notificationfilterType:
              type: string
              enum:
                - DEFAULT
    NotificationFilterInput:
      oneOf:
        - $ref: '#/components/schemas/DefaultNotificationFilterInput'
      discriminator:
        propertyName: notificationFilterType
    AbstractNotificationFilterInput:
      allOf:
        - $ref: '#/components/schemas/AbstractFilterInput'
        - properties:
            filterType:
              type: string
              enum:
                - NOTIFICATION
            notificationfilterType:
              type: string
              enum:
                - DEFAULT
    DefaultNotificationFilterInput:
      allOf:
        - $ref: '#/components/schemas/AbstractNotificationFilterInput'
        - properties:
            notificationfilterType:
              type: string
              enum:
                - DEFAULT
    FilterReference:
      description: A reference to a filter
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        filterType:
          type: string
          enum:
            - EVENT
            - NOTIFICATION
      required:
        - id
        - name
        - filterType
    FilterPointer:
      description: A reference pointer to a filter
      properties:
        id:
          type: string
          format: uuid
      required:
        - id
    Import:
      description: An import is the process of uploading a file or files into xMatters systems via a transform. It tracks the status of the upload and transformation of the data.
      properties:
        id:
          type: string
          format: uuid
        transform:
          $ref: '#/components/schemas/TransformReference'
        status:
          type: string
          enum:
            - PENDING
            - PROCESSING
            - COMPLETE
            - FAILED
        started:
          type: string
          format: date-time
        processingAt:
          type: string
          format: date-time
        finishedAt:
          type: string
          format: date-time
        by:
          $ref: '#/components/schemas/PersonReference'
        processedCount:
          type: integer
        totalCount:
          type: integer
      required:
        - id
        - transform
        - status
    ImportInput:
      description: An import is the process of uploading a file or files into xMatters systems via a transform. It tracks the status of the upload and transformation of the data.
      properties:
        id:
          type: string
          format: uuid
        status:
          type: string
          enum:
            - PENDING
            - PROCESSING
            - COMPLETE
            - FAILED
    ImportUpdate:
      description: An import is the process of uploading a file or files into xMatters systems via a transform. It tracks the status of the upload and transformation of the data.
      properties:
        status:
          type: string
          enum:
            - PENDING
            - PROCESSING
            - COMPLETE
            - FAILED
        processedCount:
          type: integer
    Form:
      oneOf:
        - $ref: '#/components/schemas/CommunicationForm'
        - $ref: '#/components/schemas/SystemForm'
        - $ref: '#/components/schemas/SubscriptionForm'
      discriminator:
        propertyName: formType
    AbstractForm:
      properties:
        formType:
          type: string
          enum:
            - FORM
            - SYSTEM
            - SUBSCRIPTION
          default: FORM
      required:
        - formType
    CommunicationForm:
      allOf:
        - $ref: '#/components/schemas/AbstractForm'
        - description: A form
          properties:
            formType:
              type: string
              enum:
                - PLAN
            id:
              type: string
              format: uuid
            formId:
              type: string
              description: Legacy numeric form identifier
            name:
              type: string
            description:
              type: string
            status:
              type: string
            mobileEnabled:
              type: boolean
            uiEnabled:
              type: boolean
            apiEnabled:
              type: boolean
            senderOverrides:
              type: object
            plan:
              $ref: '#/components/schemas/PlanReference'
            recipients:
              $ref: '#/components/schemas/RecipientPagination'
            responseOptions:
              $ref: '#/components/schemas/ResponseOptionPagination'
            messages:
              $ref: '#/components/schemas/MessagePagination'
            revision:
              $ref: '#/components/schemas/Revision'
            links:
              $ref: '#/components/schemas/SelfLink'
          required:
            - id
            - name
            - description
            - status
    SystemForm:
      oneOf:
        - $ref: '#/components/schemas/DeviceValidationSystemForm'
        - $ref: '#/components/schemas/ForgotMyPasswordSystemForm'
        - $ref: '#/components/schemas/SupervisorResetSystemForm'
        - $ref: '#/components/schemas/TemporaryReplacementSupervisorsSystemForm'
        - $ref: '#/components/schemas/TemporaryReplacementReplacerSystemForm'
        - $ref: '#/components/schemas/TemporaryVacancySupervisorsSystemForm'
        - $ref: '#/components/schemas/OnCallShiftStartSystemForm'
      discriminator:
        propertyName: systemFormType
    AbstractSystemForm:
      allOf:
        - $ref: '#/components/schemas/AbstractForm'
        - properties:
            formType:
              type: string
              enum:
                - SYSTEM
            systemFormType:
              type: string
              enum:
                - DEVICE_VALIDATION
                - FORGOT_MY_PASSWORD
                - SUPERVISOR_RESET
                - TEMP_REPLACEMENT_SUPERVISORS
                - TEMP_REPLACEMENT_REPLACER
                - TEMP_VACANCY_SUPERVISORS
                - ON_CALL_START_SHIFT
            version:
              type: integer
              default: 1
              minimum: 1
          required:
            - systemFormType
    DeviceValidationSystemForm:
      allOf:
        - $ref: '#/components/schemas/AbstractSystemForm'
        - properties:
            systemFormType:
              type: string
              enum:
                - DEVICE_VALIDATION
    ForgotMyPasswordSystemForm:
      allOf:
        - $ref: '#/components/schemas/AbstractSystemForm'
        - properties:
            systemFormType:
              type: string
              enum:
                - FORGOT_MY_PASSWORD
    SupervisorResetSystemForm:
      allOf:
        - $ref: '#/components/schemas/AbstractSystemForm'
        - properties:
            systemFormType:
              type: string
              enum:
                - SUPERVISOR_RESET
    TemporaryReplacementSupervisorsSystemForm:
      allOf:
        - $ref: '#/components/schemas/AbstractSystemForm'
        - properties:
            systemFormType:
              type: string
              enum:
                - TEMP_REPLACEMENT_SUPERVISORS
    TemporaryReplacementReplacerSystemForm:
      allOf:
        - $ref: '#/components/schemas/AbstractSystemForm'
        - properties:
            systemFormType:
              type: string
              enum:
                - TEMP_REPLACEMENT_REPLACER
    TemporaryVacancySupervisorsSystemForm:
      allOf:
        - $ref: '#/components/schemas/AbstractSystemForm'
        - properties:
            systemFormType:
              type: string
              enum:
                - TEMP_VACANCY_SUPERVISORS
    OnCallShiftStartSystemForm:
      allOf:
        - $ref: '#/components/schemas/AbstractSystemForm'
        - properties:
            systemFormType:
              type: string
              enum:
                - ON_CALL_START_SHIFT
    FormInput:
      oneOf:
        - $ref: '#/components/schemas/CommunicationFormInput'
      discriminator:
        propertyName: formType
    AbstractFormInput:
      properties:
        formType:
          type: string
          enum:
            - FORM
          default: FORM
      required:
        - formType
    CommunicationFormInput:
      allOf:
        - $ref: '#/components/schemas/AbstractFormInput'
        - description: A form
          properties:
            id:
              type: string
              format: uuid
            name:
              type: string
            description:
              type: string
            mobileEnabled:
              type: boolean
            uiEnabled:
              type: boolean
            apiEnabled:
              type: boolean
            senderOverrides:
              type: object
            recipients:
              description: Pre-configured recipients
              type: array
              items:
                $ref: '#/components/schemas/RecipientPointer'
            plan:
              $ref: '#/components/schemas/PlanPointer'
    FormPointer:
      oneOf:
        - $ref: '#/components/schemas/CommunicationFormPointer'
        - $ref: '#/components/schemas/SystemFormPointer'
      discriminator:
        propertyName: formType
    AbstractFormPointer:
      properties:
        formType:
          type: string
          enum:
            - FORM
            - SYSTEM
          default: FORM
      required:
        - formType
    CommunicationFormPointer:
      allOf:
        - $ref: '#/components/schemas/AbstractFormPointer'
        - properties:
            formType:
              type: string
              enum:
                - FORM
            id:
              type: string
              format: uuid
            name:
              type: string
    SystemFormPointer:
      allOf:
        - $ref: '#/components/schemas/AbstractFormPointer'
        - properties:
            formType:
              type: string
              enum:
                - SYSTEM
            systemFormType:
              type: string
              enum:
                - DEVICE_VALIDATION
                - FORGOT_MY_PASSWORD
                - SUPERVISOR_RESET
                - TEMP_REPLACEMENT
                - ON_CALL_START_SHIFT
    FormReference:
      oneOf:
        - $ref: '#/components/schemas/CommunicationFormReference'
        - $ref: '#/components/schemas/SystemFormReference'
        - $ref: '#/components/schemas/SubscriptionFormReference'
      discriminator:
        propertyName: formType
    AbstractFormReference:
      properties:
        formType:
          type: string
          enum:
            - FORM
            - SYSTEM
          default: FORM
      required:
        - formType
    CommunicationFormReference:
      allOf:
        - $ref: '#/components/schemas/AbstractFormReference'
        - properties:
            formType:
              type: string
              enum:
                - FORM
            id:
              type: string
              format: uuid
            name:
              type: string
          required:
            - id
            - name
    SubscriptionFormReference:
      allOf:
        - $ref: '#/components/schemas/AbstractFormReference'
        - properties:
            formType:
              type: string
              enum:
                - SUBSCRIPTION
            id:
              type: string
              format: uuid
            name:
              type: string
            plan:
              $ref: '#/components/schemas/PlanReference'
          required:
            - id
            - name
            - plan
    SystemFormReference:
      allOf:
        - $ref: '#/components/schemas/AbstractFormReference'
        - properties:
            formType:
              type: string
              enum:
                - SYSTEM
            systemFormType:
              type: string
              enum:
                - DEVICE_VALIDATION
                - FORGOT_MY_PASSWORD
                - SUPERVISOR_RESET
                - TEMP_REPLACEMENT
                - ON_CALL_START_SHIFT
    Function:
      description: Function
      properties:
        id:
          type: string
          format: uuid
        permissions:
          $ref: '#/components/schemas/PermissionPagination'
      required:
        - id
    Group:
      allOf:
        - $ref: '#/components/schemas/AbstractRecipient'
        - description: Groups are used for collecting users and devices and organizing them into notification schedules
          properties:
            recipientType:
              enum:
                - GROUP
              type: string
            allowDuplicates:
              type: boolean
            description:
              type: string
            observedByAll:
              type: boolean
            useDefaultDevices:
              type: boolean
            timezone:
              description: 'The time zone used for calculation of day'
              type: string
              example: US/Pacific
            site:
              $ref: '#/components/schemas/SiteReference'
            supervisors:
              $ref: '#/components/schemas/PersonPagination'
            observers:
              $ref: '#/components/schemas/ObserverPagination'
          required:
            - allowDuplicates
            - observedByAll
            - useDefaultDevices
    GroupInput:
      description: >-
        Groups are used for collecting users and devices and organizing them
        into notification schedules
      allOf:
        - $ref: '#/components/schemas/AbstractRecipientInput'
        - properties:
            recipientType:
              enum:
                - GROUP
              type: string
            allowDuplicates:
              description: >-
                Whether the group allows a notification to be sent to a device
                multiple times
              type: boolean
            description:
              type: string
            observedByAll:
              description: Whether the group notifications are observed by all
              type: boolean
            timezone:
              type: string
              example: US/Pacific
            useDefaultDevices:
              description: >-
                Whether the default user device should be used when sending out
                a notification to the group
              type: boolean
            site:
              $ref: '#/components/schemas/SitePointer'
            supervisors:
              description: >-
                A list of group supervisors. Groups must have at least one
                supervisor
              items:
                $ref: '#/components/schemas/PersonPointer'
              type: array
            observers:
              description: A list of observers
              type: array
              items:
                $ref: '#/components/schemas/ObserverPointer'
    GroupMember:
      properties:
        group:
          $ref: '#/components/schemas/GroupReference'
        member:
          $ref: '#/components/schemas/RecipientReference'
        shifts:
          $ref: '#/components/schemas/ShiftPagination'
      required:
        - group
        - member
    GroupReference:
      allOf:
        - $ref: '#/components/schemas/AbstractRecipientReference'
        - properties:
            recipientType:
              type: string
              enum:
                - GROUP
            status:
              description: Whether the recipient is active. Inactive recipients do not receive notifications
              type: string
              enum:
                - ACTIVE
                - INACTIVE
                - INVALID
            links:
              $ref: '#/components/schemas/SelfLink'
    GroupPointer:
      allOf:
        - $ref: '#/components/schemas/AbstractRecipientPointer'
        - properties:
            targetName:
              description: The target name of the resource
              type: string
    Integration:
      properties:
        id:
          type: string
          format: uuid
        plan:
          $ref: '#/components/schemas/PlanReference'
        form:
          $ref: '#/components/schemas/FormReference'
        name:
          type: string
        integrationType:
          type: string
          enum:
            - INBOUND_WEBHOOK
            - OUTBOUND_WEBHOOK
        operation:
          type: string
          enum:
            - CREATE_EVENT
            - OUTBOUND_CALLBACK
            - RUN_SCRIPT
            - SEND_TO_IA
            - SEND_WEBHOOK
            - CREATE_EVENT_SIMPLE
        triggeredBy:
          type: string
          enum:
            - DELIVERYSTATUS
            - RESPONSE
            - STATUS
        endpoint:
          $ref: '#/components/schemas/EndpointReference'
        authenticationType:
          type: string
          enum:
            - NONE
            - URL
            - BASIC
            - API_KEY
            - OAUTH
        deployed:
          type: boolean
          default: true
        environment:
          type: string
          enum:
            - HOSTED
            - ONPREMISE
        script:
          type: string
        integrationService:
          description: >-
            The integration service on which an ONPREMISE integration will
            execute
          type: string
        integrationServiceSelector:
          description: >-
            Selector for integration agents on which an ONPREMISE integration
            will execute
          type: string
        appendToURL:
          description: Appended to the endpoint's Base URL
          type: string
        loggingLevel:
          type: string
          enum:
            - ERROR
            - INFO
          default: ERROR
        ownerApiKey:
          description: >-
            API Key of the person who owns this integration, the creator of an
            integration becomes the owner
          type: string
        agents:
          $ref: '#/components/schemas/AgentPagination'
      required:
        - id
        - plan
        - name
        - type
        - operation
        - deployed
        - environment
    IntegrationInput:
      description: Insert or update of an integration
      properties:
        id:
          type: string
          format: uuid
        plan:
          $ref: '#/components/schemas/PlanPointer'
        form:
          $ref: '#/components/schemas/FormPointer'
        name:
          type: string
        integrationType:
          type: string
          enum:
            - INBOUND_WEBHOOK
            - OUTBOUND_WEBHOOK
        operation:
          type: string
          enum:
            - CREATE_EVENT
            - OUTBOUND_CALLBACK
            - RUN_SCRIPT
            - SEND_TO_IA
            - SEND_WEBHOOK
            - CREATE_EVENT_SIMPLE
        triggeredBy:
          type: string
          enum:
            - DELIVERYSTATUS
            - RESPONSE
            - STATUS
        endpoint:
          $ref: '#/components/schemas/EndpointPointer'
        authenticationType:
          type: string
          enum:
            - NONE
            - URL
            - BASIC
            - API_KEY
            - OAUTH
        deployed:
          type: boolean
        environment:
          type: string
          enum:
            - HOSTED
            - ONPREMISE
        script:
          type: string
        integrationService:
          description: >-
            The integration service on which an ONPREMISE integration will
            execute
          type: string
        integrationServiceSelector:
          description: >-
            Selector for integration agents on which an ONPREMISE integration
            will execute
          type: string
        appendToURL:
          description: Appended to the endpoint's Base URL
          type: string
        loggingLevel:
          type: string
          enum:
            - ERROR
            - INFO
        agents:
          description: The agents on which an ONPREMISE integration will execute
          type: array
          items:
            $ref: '#/components/schemas/AgentPointer'
    IntegrationReference:
      properties:
        id:
          type: string
          format: uuid
        plan:
          $ref: '#/components/schemas/PlanReference'
        name:
          description: The name
          type: string
      required:
        - id
        - plan
    IntegrationPointer:
      properties:
        id:
          type: string
          format: uuid
      required:
        - id
    IntegrationLog:
      properties:
        id:
          type: string
          format: uuid
        integration:
          $ref: '#/components/schemas/IntegrationReference'
        completed:
          type: string
          format: date-time
        requestMethod:
          type: string
        requestHeaders:
          type: object
        requestParameters:
          type: object
        requestBody:
          type: string
        remoteAddress:
          type: string
        requestId:
          type: string
        status:
          type: string
          enum:
            - COMPLETED
            - WARNING
            - FAILED
            - CANCELED
        by:
          $ref: '#/components/schemas/PersonReference'
      required:
        - id
        - integration
        - completed
    LogEntryInput:
      description: Log entry
      properties:
        at:
          description: Timestamp at caller
          type: string
          format: date-time
        priority:
          description: Logging level
          type: string
          enum:
            - ERROR
            - WARN
            - INFO
            - DEBUG
        source:
          description: Client that sent this log
          type: string
          enum:
            - BROWSER
            - IOS
            - ANDROID
        text:
          description: >-
            The log line text (should be formatted appropriately to key=value
            pairs by the caller)
          type: string
          maxLength: 2000
    MessageTemplate:
      description: A message template
      properties:
        id:
          type: string
          format: uuid
      required:
        - id
    MessageTemplateReference:
      description: A message template
      properties:
        id:
          type: string
          format: uuid
      required:
        - id
    Message:
      oneOf:
        - $ref: '#/components/schemas/SubjectAndBodyMessage'
        - $ref: '#/components/schemas/TextMessage'
        - $ref: '#/components/schemas/VoiceMessage'
      discriminator:
        propertyName: messageType
    AbstractMessage:
      description: A message
      type: object
      properties:
        id:
          type: string
          format: uuid
        messageType:
          description: The type of the message
          type: string
          enum:
            - SUBJECT_AND_BODY
            - TEXT
            - VOICE
        language:
          type: string
          enum:
            - ar
            - da
            - de
            - el
            - en
            - en_GB
            - es
            - fi
            - fr
            - he
            - hi
            - is
            - it
            - ja
            - ko
            - nl
            - 'no'
            - pl
            - pt
            - pt_BR
            - ru
            - sk
            - sv
            - th
            - vi
            - zh_CN
            - zh_HK
        template:
          $ref: '#/components/schemas/MessageTemplateReference'
      required:
        - id
    SubjectAndBodyMessage:
      description: A subject and body message
      allOf:
        - $ref: '#/components/schemas/AbstractMessage'
        - properties:
            messageType:
              type: string
              enum:
                - SUBJECT_AND_BODY
            subject:
              type: string
            body:
              type: string
    TextMessage:
      description: A text message
      allOf:
        - $ref: '#/components/schemas/AbstractMessage'
        - properties:
            messageType:
              type: string
              enum:
                - TEXT
            text:
              type: string
    VoiceMessage:
      description: A text message
      allOf:
        - $ref: '#/components/schemas/AbstractMessage'
        - properties:
            messageType:
              type: string
              enum:
                - VOICE
    Notification:
      description: A notification
      properties:
        id:
          type: string
          format: uuid
        event:
          $ref: '#/components/schemas/EventReference'
        recipient:
          $ref: '#/components/schemas/RecipientReference'
        category:
          type: string
        created:
          type: string
          format: date-time
        deliveryStatus:
          description: Delivery status
          type: string
          enum:
            - PENDING
            - DELIVERED
            - RESPONDED
            - FAILED
        repeatOf:
          $ref: '#/components/schemas/NotificationReference'
        message:
          $ref: '#/components/schemas/Message'
        responseOptions:
          $ref: '#/components/schemas/ResponseOptionPagination'
        responses:
          $ref: '#/components/schemas/ResponsePagination'
      required:
        - id
    NotificationInput:
      description: A notification
      properties:
        id:
          type: string
          format: uuid
        event:
          $ref: '#/components/schemas/EventPointer'
        recipient:
          $ref: '#/components/schemas/RecipientPointer'
        category:
          type: string
        created:
          type: string
          format: date-time
      required:
        - id
    NotificationReference:
      properties:
        id:
          type: string
          format: uuid
      required:
        - id
    NotificationPointer:
      properties:
        id:
          type: string
          format: uuid
      required:
        - id
    Observer:
      description: 'Observer entity (PERSON, ROLE)'
      properties:
        observerType:
          type: string
          description: Observer entity type
          enum:
            - PERSON
            - ROLE
        person:
          $ref: '#/components/schemas/PersonReference'
        role:
          $ref: '#/components/schemas/RoleReference'
      required:
        - observerType
    ObserverPointer:
      description: 'Observer entity (PERSON, ROLE)'
      properties:
        observerType:
          type: string
          description: Observer entity type
          enum:
            - PERSON
            - ROLE
        person:
          $ref: '#/components/schemas/PersonPointer'
        role:
          $ref: '#/components/schemas/RolePointer'
      required:
        - observerType
    OnCall:
      properties:
        group:
          $ref: '#/components/schemas/GroupReference'
        shift:
          $ref: '#/components/schemas/ShiftReference'
        start:
          format: date-time
          type: string
        end:
          format: date-time
          type: string
        members:
          $ref: '#/components/schemas/ShiftOccurrenceMemberPagination'
      required:
        - group
    OnCallReminderConfig:
      description: On call reminders configuration
      properties:
        id:
          type: string
          format: uuid
        person:
          $ref: '#/components/schemas/PersonReference'
        remindersEnabled:
          type: boolean
          description: 'True if the person wants to receive reminders, false if they do not.'
        remindOnShiftEnd:
          type: boolean
          description: >-
            True if the person wants to be notified when their shift ends, false
            if the person does not want to be notified.
        rotationPosition:
          type: string
          enum:
            - ALL
            - PRIMARY
            - PRIMARY_OR_SECONDARY
          default: ALL
        devices:
          $ref: '#/components/schemas/DevicePagination'
        shiftStartConfigs:
          $ref: '#/components/schemas/OnCallReminderShiftStartConfigPagination'
        revision:
          $ref: '#/components/schemas/Revision'
      required:
        - id
        - person
        - remindersEnabled
        - remindOnShiftEnd
    OnCallReminderConfigInput:
      description: On call reminders configuration
      properties:
        id:
          type: string
          format: uuid
        person:
          $ref: '#/components/schemas/PersonPointer'
        remindersEnabled:
          type: boolean
          description: 'True if the person wants to receive reminders, false if they do not.'
        remindOnShiftEnd:
          type: boolean
          description: >-
            True if the person wants to be notified when their shift ends, false
            if the person does not want to be notified.
        rotationPosition:
          type: string
          enum:
            - ALL
            - PRIMARY
            - PRIMARY_OR_SECONDARY
          default: ALL
        devices:
          description: Devices to target for reminders
          type: array
          items:
            $ref: '#/components/schemas/DevicePointer'
        shiftStartConfigs:
          description: Devices to target for reminders
          type: array
          items:
            $ref: '#/components/schemas/OnCallReminderShiftStartConfig'
    OnCallReminderShiftStartConfig:
      properties:
        remindTimeBeforeShiftStartInMinutes:
          type: integer
          description: The time in minutes to receive a reminder before a shift start.
      required:
        - remindTimeBeforeShiftStartInMinutes
    Organization:
      properties:
        id:
          type: string
          format: uuid
        trial:
          type: boolean
          description: True if this is a trial organization
        googleAnalyticsTrackingId:
          type: string
          description: Google Analytics tracking identifier
      required:
        - id
    OrganizationInput:
      properties:
        trial:
          type: boolean
          description: True if this is a trial organization
        googleAnalyticsTrackingId:
          type: string
          description: Google Analytics tracking identifier
    OrganizationPointer:
      properties:
        id:
          type: string
          format: uuid
      required:
        - id
    OrganizationConfig:
      properties:
        mobilePINLockEnabled:
          description: Mobile app users will be required to have an account PIN
          type: boolean
        mobilePINLockTimeout:
          description: Mobile PIN lock timeout in minutes
          type: integer
          format: int32
          default: 10
        passwordUniqueHistory:
          description: Unique history requirement
          type: integer
          format: int32
        passwordMinimumLength:
          description: Minimum length
          type: integer
          format: int32
        passwordRequiredComplexity:
          description: Password Complexity
          type: string
          enum:
            - NONE
            - NON_ALPHA
            - STRONG
        passwordMaximumAge:
          description: Expiry period in days
          type: integer
          format: int32
        passwordMinimumAge:
          description: Minimum password age
          type: integer
          format: int32
        passwordLockoutThreshold:
          description: Lock threshold
          type: integer
          format: int32
        passwordLockoutDuration:
          description: Lockout duration in minutes
          type: integer
          format: int32
          default: 30
        passwordLockoutResetPeriod:
          description: Lockout reset in minutes
          type: integer
          format: int32
          default: 30
    OrganizationConfigInput:
      properties:
        mobilePINLockEnabled:
          description: Mobile app users will be required to have an account PIN
          type: boolean
        mobilePINLockTimeout:
          description: Mobile PIN lock timeout in minutes
          type: integer
          format: int32
        passwordUniqueHistory:
          description: Unique history requirement
          type: integer
          format: int32
        passwordMinimumLength:
          description: Minimum length
          type: integer
          format: int32
        passwordRequiredComplexity:
          description: Password Complexity
          type: string
          enum:
            - NONE
            - NON_ALPHA
            - STRONG
        passwordMaximumAge:
          description: Expiry period in days
          type: integer
          format: int32
        passwordMinimumAge:
          description: Minimum password age
          type: integer
          format: int32
        passwordLockoutThreshold:
          description: Lock threshold
          type: integer
          format: int32
        passwordLockoutDuration:
          description: Lockout duration in minutes
          type: integer
          format: int32
        passwordLockoutResetPeriod:
          description: Lockout reset in minutes
          type: integer
          format: int32
    Person:
      description: >-
        Someone in the xMatters system who can receive notifications is called a
        'Person'. Every person in the xMatters system is a user defined by a set
        of details, including ID number, user name, login password, and so on.
        deliveryStatus, notifications, and response are dynamic derived
        attributes and will only appear when viewing the person as an event
        recipient
      allOf:
        - $ref: '#/components/schemas/AbstractRecipient'
        - properties:
            recipientType:
              enum:
                - PERSON
              type: string
            firstName:
              description: The first name of the user
              type: string
            language:
              type: string
              enum:
                - ar
                - da
                - de
                - el
                - en
                - en_GB
                - es
                - fi
                - fr
                - he
                - hi
                - is
                - it
                - ja
                - ko
                - nl
                - 'no'
                - pl
                - pt
                - pt_BR
                - ru
                - sk
                - sv
                - th
                - vi
                - zh_CN
                - zh_HK
            lastName:
              description: The last name of the user
              type: string
            phoneLogin:
              description: >-
                A numeric string that identifies users when they phone in to
                xMatters. This string may contain only digits and must be unique
                within the company
              type: string
            timezone:
              type: string
              example: US/Pacific
            webLogin:
              description: >-
                The ID of the user when they log on to the web user interface.
                This value must be unique within the company and is often
                identical to the targetName field
              type: string
            properties:
              $ref: '#/components/schemas/Properties'
            site:
              $ref: '#/components/schemas/SiteReference'
            devices:
              $ref: '#/components/schemas/DevicePagination'
            roles:
              $ref: '#/components/schemas/RolePagination'
            deliveryStatus:
              description: >-
                Delivery status. Derived from the status of all notifications to
                this person for this event
              type: string
              enum:
                - PENDING
                - DELIVERED
                - RESPONDED
                - FAILED
            supervisors:
              $ref: '#/components/schemas/PersonPagination'
            notifications:
              $ref: '#/components/schemas/NotificationPagination'
            response:
              $ref: '#/components/schemas/Response'
          required:
            - firstName
            - lastName
    PersonInput:
      description: >-
        Someone in the xMatters system who can receive notifications is called a
        'Person'. Every person in the xMatters system is a user defined by a set
        of details, including ID number, user name, login password, and so on
      allOf:
        - $ref: '#/components/schemas/AbstractRecipientInput'
        - properties:
            recipientType:
              enum:
                - PERSON
              type: string
            firstName:
              description: The first name of the user
              type: string
            language:
              type: string
              enum:
                - ar
                - da
                - de
                - el
                - en
                - en_GB
                - es
                - fi
                - fr
                - he
                - hi
                - is
                - it
                - ja
                - ko
                - nl
                - 'no'
                - pl
                - pt
                - pt_BR
                - ru
                - sk
                - sv
                - th
                - vi
                - zh_CN
                - zh_HK
            lastName:
              description: The last name of the user
              type: string
            phoneLogin:
              description: >-
                A numeric string that identifies users when they phone in to
                xMatters. This string may contain only digits and must be unique
                within the company
              type: string
            properties:
              $ref: '#/components/schemas/Properties'
            roles:
              description: A list of the user's roles. Users must have at least one role
              items:
                type: string
              type: array
            site:
              $ref: '#/components/schemas/SitePointer'
            supervisors:
              description: >-
                A list of supervisors of this users. If this value is not
                provided, the XXX user becomes the supervisor. To assign a user
                as a supervisor, the authenticating user must have the
                appropriate permissions
              items:
                $ref: '#/components/schemas/PersonPointer'
              type: array
            timezone:
              type: string
              example: US/Pacific
            webLogin:
              description: >-
                The ID of the user when they log on to the web user interface.
                This value must be unique within the company and is often
                identical to the targetName field
              type: string
          required:
            - firstName
            - lastName
            - language
            - timezone
            - webLogin
            - roles
    PersonPointer:
      description: A reference to a person resource
      allOf:
        - $ref: '#/components/schemas/AbstractRecipientPointer'
        - properties:
            targetName:
              description: The targetName of the resource
              type: string
            key:
              description: API key used to identify a person
              type: string
    PersonReference:
      allOf:
        - $ref: '#/components/schemas/AbstractRecipientReference'
        - properties:
            recipientType:
              type: string
              enum:
                - PERSON
            firstName:
              description: The first name of the user
              type: string
            lastName:
              description: The last name of the user
              type: string
            status:
              description: Whether the recipient is active. Inactive recipients do not receive notifications
              type: string
              enum:
                - ACTIVE
                - INACTIVE
                - INVALID
            links:
              $ref: '#/components/schemas/SelfLink'
          required:
            - firstName
            - lastName
    Permissible:
      description: 'Permissible entity (GROUP, PERSON, ROLE)'
      properties:
        permissibleType:
          type: string
          description: Permissible entity type
          enum:
            - GROUP
            - PERSON
            - ROLE
        group:
          $ref: '#/components/schemas/GroupReference'
        person:
          $ref: '#/components/schemas/PersonReference'
        role:
          $ref: '#/components/schemas/RoleReference'
      required:
        - permissibleType
    PermissiblePointer:
      description: 'Permissible entity (GROUP, PERSON, ROLE)'
      properties:
        permissibleType:
          type: string
          description: Permissible entity type
          enum:
            - GROUP
            - PERSON
            - ROLE
        group:
          $ref: '#/components/schemas/GroupPointer'
        person:
          $ref: '#/components/schemas/PersonPointer'
        role:
          $ref: '#/components/schemas/RolePointer'
      required:
        - permissibleType
    Permission:
      description: Permission
      properties:
        id:
          type: string
          format: uuid
      required:
        - id
    Plan:
      oneOf:
        - $ref: '#/components/schemas/CommunicationPlan'
        - $ref: '#/components/schemas/BuiltInPlan'
        - $ref: '#/components/schemas/SystemPlan'
      discriminator:
        propertyName: planType
    AbstractPlan:
      type: object
      description: A communication plan
      properties:
        id:
          type: string
          format: uuid
        planType:
          type: string
          enum:
            - PLAN
            - BUILT_IN
            - SYSTEM
        name:
          type: string
          description: User provided name for this plan
        description:
          type: string
        enabled:
          type: boolean
        editable:
          type: boolean
        loggingLevel:
          type: string
          enum:
            - ERROR
            - INFO
          default: ERROR
        accessibleByAll:
          type: boolean
          description: True if all authenticated callers are permitted
        floodControl:
          type: boolean
          description: True if filtering and suppression is active
        created:
          type: string
          format: date-time
        creator:
          $ref: '#/components/schemas/PersonReference'
        forms:
          $ref: '#/components/schemas/FormPagination'
        integrations:
          $ref: '#/components/schemas/IntegrationPagination'
        constants:
          $ref: '#/components/schemas/ConstantPagination'
        endpoints:
          $ref: '#/components/schemas/EndpointPagination'
        permitted:
          $ref: '#/components/schemas/PermissiblePagination'
        propertyDefinitions:
          $ref: '#/components/schemas/PropertyDefinitionPagination'
        properties:
          $ref: '#/components/schemas/Properties'
        revision:
          $ref: '#/components/schemas/Revision'
        links:
          $ref: '#/components/schemas/SelfLink'
      required:
        - id
        - name
        - enabled
    PlanReference:
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          description: User provided name for this plan
      required:
        - id
    PlanPointer:
      properties:
        id:
          type: string
          format: uuid
      required:
        - id
    CommunicationPlan:
      allOf:
        - $ref: '#/components/schemas/AbstractPlan'
        - properties:
            planType:
              type: string
              enum:
                - PLAN
    SystemPlan:
      allOf:
        - $ref: '#/components/schemas/AbstractPlan'
        - properties:
            planType:
              type: string
              enum:
                - SYSTEM
    BuiltInPlan:
      allOf:
        - $ref: '#/components/schemas/AbstractPlan'
        - properties:
            planType:
              type: string
              enum:
                - BUILT_IN
            builtInPlanType:
              type: string
              description: Built-in communication plan type
              enum:
                - APP_DYNAMICS
                - BIG_PANDA
                - DATADOG
                - DYNATRACE
                - HIPCHAT
                - ICINGA
                - JIRA
                - NEW_RELIC
                - PINGDOM
                - PINGDOM_SM
                - SCOUT
                - SENSU
                - SIGNALFX
                - SLACK_BOT
                - SOLAR_WINDS
                - SPLUNK
                - SPLUNK_ITSI
                - SUMO_LOGIC
                - WEBHOOK
    PlanInput:
      oneOf:
        - $ref: '#/components/schemas/CommunicationPlanInput'
        - $ref: '#/components/schemas/BuiltInPlanInput'
        - $ref: '#/components/schemas/SystemPlanInput'
      discriminator:
        propertyName: planType
    AbstractPlanInput:
      type: object
      description: A communication plan
      properties:
        id:
          type: string
          format: uuid
        planType:
          type: string
          enum:
            - PLAN
            - BUILT_IN
            - SYSTEM
        name:
          type: string
          description: User provided name for this specific plan
        description:
          type: string
        enabled:
          type: boolean
        accessibleByAll:
          type: boolean
          description: True if all authenticated callers are permitted
        floodControl:
          type: boolean
          description: True if filtering and suppression is active
        constants:
          type: array
          items:
            $ref: '#/components/schemas/ConstantInput'
        creator:
          $ref: '#/components/schemas/PersonPointer'
        loggingLevel:
          type: string
          enum:
            - ERROR
            - INFO
        permitted:
          type: array
          items:
            $ref: '#/components/schemas/PermissiblePointer'
    CommunicationPlanInput:
      allOf:
        - $ref: '#/components/schemas/AbstractPlanInput'
        - properties:
            planType:
              type: string
              enum:
                - PLAN
    SystemPlanInput:
      allOf:
        - $ref: '#/components/schemas/AbstractPlanInput'
        - properties:
            planType:
              type: string
              enum:
                - SYSTEM
    BuiltInPlanInput:
      oneOf:
        - $ref: '#/components/schemas/AppDynamicsBuiltInPlanInput'
        - $ref: '#/components/schemas/BigPandaBuiltInPlanInput'
        - $ref: '#/components/schemas/ChefBuiltInPlanInput'
        - $ref: '#/components/schemas/DataDogBuiltInPlanInput'
        - $ref: '#/components/schemas/DynatraceBuiltInPlanInput'
        - $ref: '#/components/schemas/HipChatBuiltInPlanInput'
        - $ref: '#/components/schemas/IcingaBuiltInPlanInput'
        - $ref: '#/components/schemas/JiraBuiltInPlanInput'
        - $ref: '#/components/schemas/MSTeamsBuiltInPlanInput'
        - $ref: '#/components/schemas/NewRelicBuiltInPlanInput'
        - $ref: '#/components/schemas/PingdomBuiltInPlanInput'
        - $ref: '#/components/schemas/PingdomSMBuiltInPlanInput'
        - $ref: '#/components/schemas/ScoutBuiltInPlanInput'
        - $ref: '#/components/schemas/SensuBuiltInPlanInput'
        - $ref: '#/components/schemas/SignalFxBuiltInPlanInput'
        - $ref: '#/components/schemas/SlackBotBuiltInPlanInput'
        - $ref: '#/components/schemas/SolarWindsBuiltInPlanInput'
        - $ref: '#/components/schemas/SplunkBuiltInPlanInput'
        - $ref: '#/components/schemas/SplunkITSIBuiltInPlanInput'
        - $ref: '#/components/schemas/SumoLogicBuiltInPlanInput'
        - $ref: '#/components/schemas/WebhookBuiltInPlanInput'
      discriminator:
        propertyName: builtInPlanType
    AbstractBuiltInPlanInput:
      description: Built-in communication plan
      allOf:
        - $ref: '#/components/schemas/AbstractPlanInput'
        - properties:
            planType:
              type: string
              enum:
                - BUILT_IN
            builtInPlanType:
              type: string
              description: Built-in communication plan type
              enum:
                - APP_DYNAMICS
                - BIG_PANDA
                - DATADOG
                - DYNATRACE
                - HIPCHAT
                - ICINGA
                - JIRA
                - MS_TEAMS
                - NEW_RELIC
                - PINGDOM
                - PINGDOM_SM
                - SCOUT
                - SENSU
                - SIGNALFX
                - SLACK_BOT
                - SOLAR_WINDS
                - SPLUNK
                - SPLUNK_ITSI
                - SUMO_LOGIC
                - WEBHOOK
            recipients:
              description: Pre-configured recipients
              type: array
              items:
                $ref: '#/components/schemas/RecipientPointer'
            senderOverrideName:
              type: string
          required:
            - planType
            - builtInPlanType
    AppDynamicsBuiltInPlanInput:
      description: AppDynamics built-in communication plan
      allOf:
        - $ref: '#/components/schemas/AbstractBuiltInPlanInput'
        - properties:
            builtInPlanType:
              type: string
              description: Built-in communication plan type
              enum:
                - APP_DYNAMICS
          required:
            - builtInPlanType
            - recipients
            - senderOverrideName
    BigPandaBuiltInPlanInput:
      description: BigPanda built-in communication plan
      allOf:
        - $ref: '#/components/schemas/AbstractBuiltInPlanInput'
        - properties:
            builtInPlanType:
              type: string
              description: Built-in communication plan type
              enum:
                - BIG_PANDA
            bearerToken:
              type: string
          required:
            - builtInPlanType
            - recipients
            - senderOverrideName
            - bearerToken
    ChefBuiltInPlanInput:
      description: Chef built-in communication plan
      allOf:
        - $ref: '#/components/schemas/AbstractBuiltInPlanInput'
        - properties:
            builtInPlanType:
              type: string
              description: Built-in communication plan type
              enum:
                - CHEF
            bearerToken:
              type: string
          required:
            - builtInPlanType
            - recipients
            - senderOverrideName
    DataDogBuiltInPlanInput:
      description: DataDog built-in communication plan
      allOf:
        - $ref: '#/components/schemas/AbstractBuiltInPlanInput'
        - properties:
            builtInPlanType:
              type: string
              description: Built-in communication plan type
              enum:
                - DATADOG
            apiKey:
              type: string
            applicationKey:
              type: string
          required:
            - builtInPlanType
            - recipients
            - senderOverrideName
            - apiKey
            - applicationKey
    DynatraceBuiltInPlanInput:
      description: Dynatrace built-in communication plan
      allOf:
        - $ref: '#/components/schemas/AbstractBuiltInPlanInput'
        - properties:
            builtInPlanType:
              type: string
              description: Built-in communication plan type
              enum:
                - DYNATRACE
            apiToken:
              type: string
            addCommentOnEventCreation:
              type: boolean
              default: true
            notificationDeliveryStatusDeployed:
              type: boolean
              default: true
          required:
            - apiToken
    HipChatBuiltInPlanInput:
      description: HipChat built-in communication plan
      allOf:
        - $ref: '#/components/schemas/AbstractBuiltInPlanInput'
        - properties:
            builtInPlanType:
              type: string
              description: Built-in communication plan type
              enum:
                - HIPCHAT
          required:
            - builtInPlanType
            - senderOverrideName
    IcingaBuiltInPlanInput:
      description: Icinga built-in communication plan
      allOf:
        - $ref: '#/components/schemas/AbstractBuiltInPlanInput'
        - properties:
            builtInPlanType:
              type: string
              description: Built-in communication plan type
              enum:
                - ICINGA
            apiURL:
              type: string
            apiUsername:
              type: string
            apiPassword:
              type: string
          required:
            - builtInPlanType
            - recipients
            - senderOverrideName
            - apiURL
            - apiUsername
            - apiPassword
    JiraBuiltInPlanInput:
      description: JIRA built-in communication plan
      allOf:
        - $ref: '#/components/schemas/AbstractBuiltInPlanInput'
        - properties:
            builtInPlanType:
              type: string
              description: Built-in communication plan type
              enum:
                - JIRA
          required:
            - builtInPlanType
            - recipients
            - senderOverrideName
    MSTeamsBuiltInPlanInput:
      description: MS Teams built-in communication plan
      allOf:
        - $ref: '#/components/schemas/AbstractBuiltInPlanInput'
        - properties:
            builtInPlanType:
              type: string
              description: Built-in communication plan type
              enum:
                - MS_TEAMS
            appURL:
              type: string
            eventPriority:
              type: string
          required:
            - builtInPlanType
            - senderOverrideName
    NewRelicBuiltInPlanInput:
      description: NewRelic built-in communication plan
      allOf:
        - $ref: '#/components/schemas/AbstractBuiltInPlanInput'
        - properties:
            builtInPlanType:
              type: string
              description: Built-in communication plan type
              enum:
                - NEW_RELIC
          required:
            - builtInPlanType
            - recipients
            - senderOverrideName
    PingdomBuiltInPlanInput:
      description: Pingdom built-in communication plan
      allOf:
        - $ref: '#/components/schemas/AbstractBuiltInPlanInput'
        - properties:
            builtInPlanType:
              type: string
              description: Built-in communication plan type
              enum:
                - PINGDOM
          required:
            - builtInPlanType
            - recipients
            - senderOverrideName
    PingdomSMBuiltInPlanInput:
      description: Pingdom SM built-in communication plan
      allOf:
        - $ref: '#/components/schemas/AbstractBuiltInPlanInput'
        - properties:
            builtInPlanType:
              type: string
              description: Built-in communication plan type
              enum:
                - PINGDOM_SM
            apiKey:
              type: string
          required:
            - builtInPlanType
            - recipients
            - senderOverrideName
            - apiKey
    ScoutBuiltInPlanInput:
      description: Scout built-in communication plan
      allOf:
        - $ref: '#/components/schemas/AbstractBuiltInPlanInput'
        - properties:
            builtInPlanType:
              type: string
              description: Built-in communication plan type
              enum:
                - SCOUT
            apiKey:
              type: string
          required:
            - builtInPlanType
            - recipients
            - senderOverrideName
            - apiKey
    SensuBuiltInPlanInput:
      description: Scout built-in communication plan
      allOf:
        - $ref: '#/components/schemas/AbstractBuiltInPlanInput'
        - properties:
            builtInPlanType:
              type: string
              description: Built-in communication plan type
              enum:
                - SENSU
            apiURL:
              type: string
            apiUsername:
              type: string
            apiPassword:
              type: string
            silenceDuration:
              type: integer
          required:
            - builtInPlanType
            - recipients
            - senderOverrideName
            - apiURL
            - apiUsername
            - apiPassword
            - silenceDuration
    SignalFxBuiltInPlanInput:
      description: SignalFx built-in communication plan
      allOf:
        - $ref: '#/components/schemas/AbstractBuiltInPlanInput'
        - properties:
            builtInPlanType:
              type: string
              description: Built-in communication plan type
              enum:
                - SIGNALFX
            apiToken:
              type: string
            addNoteOnEventCreation:
              type: boolean
              default: false
            notificationDeliveryStatusDeployed:
              type: boolean
              default: false
          required:
            - builtInPlanType
            - recipients
            - senderOverrideName
            - apiToken
    SlackBotBuiltInPlanInput:
      description: Slack Bot built-in communication plan
      allOf:
        - $ref: '#/components/schemas/AbstractBuiltInPlanInput'
        - properties:
            builtInPlanType:
              type: string
              description: Built-in communication plan type
              enum:
                - SLACK_BOT
            teamDomain:
              type: string
          required:
            - builtInPlanType
            - recipients
            - senderOverrideName
            - teamDomain
    SolarWindsBuiltInPlanInput:
      description: Solar Winds built-in communication plan
      allOf:
        - $ref: '#/components/schemas/AbstractBuiltInPlanInput'
        - properties:
            builtInPlanType:
              type: string
              description: Built-in communication plan type
              enum:
                - SOLAR_WINDS
            apiURL:
              type: string
            apiUsername:
              type: string
            apiPassword:
              type: string
            agents:
              description: The agents on which an ONPREMISE integration will execute
              type: array
              items:
                $ref: '#/components/schemas/AgentPointer'
          required:
            - builtInPlanType
            - recipients
            - senderOverrideName
            - apiURL
            - apiUsername
            - apiPassword
            - agents
    SplunkBuiltInPlanInput:
      description: Splunk built-in communication plan
      allOf:
        - $ref: '#/components/schemas/AbstractBuiltInPlanInput'
        - properties:
            builtInPlanType:
              type: string
              description: Built-in communication plan type
              enum:
                - SPLUNK
          required:
            - builtInPlanType
            - senderOverrideName
    SplunkITSIBuiltInPlanInput:
      description: Splunk ITSI built-in communication plan
      allOf:
        - $ref: '#/components/schemas/AbstractBuiltInPlanInput'
        - properties:
            builtInPlanType:
              type: string
              description: Built-in communication plan type
              enum:
                - SPLUNK_ITSI
            apiURL:
              type: string
            apiUsername:
              type: string
            apiPassword:
              type: string
          required:
            - builtInPlanType
            - recipients
            - senderOverrideName
            - apiURL
            - apiUsername
            - apiPassword
    SumoLogicBuiltInPlanInput:
      description: SumoLogic built-in communication plan
      allOf:
        - $ref: '#/components/schemas/AbstractBuiltInPlanInput'
        - properties:
            builtInPlanType:
              type: string
              description: Built-in communication plan type
              enum:
                - SUMO_LOGIC
          required:
            - builtInPlanType
            - recipients
            - senderOverrideName
    WebhookBuiltInPlanInput:
      description: Webhook built-in communication plan
      allOf:
        - $ref: '#/components/schemas/AbstractBuiltInPlanInput'
        - properties:
            builtInPlanType:
              type: string
              description: Built-in communication plan type
              enum:
                - WEBHOOK
            eventStatus:
              type: string
              format: url
            eventStatusDeployed:
              type: boolean
              default: false
            notificationDeliveryStatus:
              type: string
              format: url
            notificationDeliveryStatusDeployed:
              type: boolean
              default: false
            responseStatus:
              type: string
              format: url
            responseStatusDeployed:
              type: boolean
              default: false
          required:
            - builtInPlanType
            - recipients
            - senderOverrideName
    Properties:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Property'
    Property:
      anyOf:
        - type: string
        - type: number
        - type: boolean
        - type: array
          items:
            type: string
        - $ref: '#/components/schemas/Hierarchy'
    Hierarchy:
      type: array
      items:
        $ref: '#/components/schemas/HierarchyItem'
    HierarchyItem:
      properties:
        category:
          type: string
        value:
          type: string
      required:
        - value
    PropertyDefinition:
      oneOf:
        - $ref: '#/components/schemas/StringPropertyDefinition'
        - $ref: '#/components/schemas/NumberPropertyDefinition'
        - $ref: '#/components/schemas/BooleanPropertyDefinition'
        - $ref: '#/components/schemas/PasswordPropertyDefinition'
        - $ref: '#/components/schemas/SingleSelectPropertyDefinition'
        - $ref: '#/components/schemas/MultiSelectPropertyDefinition'
        - $ref: '#/components/schemas/HierarchyPropertyDefinition'
      discriminator:
        propertyName: propertyType
    AbstractPropertyDefinition:
      type: object
      properties:
        id:
          type: string
          format: uuid
        propertyType:
          type: string
          enum:
            - STRING
            - BOOLEAN
            - NUMBER
            - PASSWORD
            - SINGLE_SELECT
            - MULTI_SELECT
            - HIERARCHY
        name:
          type: string
        label:
          type: string
        description:
          type: string
        helpText:
          type: string
        default:
          $ref: '#/components/schemas/Property'
    StringPropertyDefinition:
      allOf:
        - $ref: '#/components/schemas/AbstractPropertyDefinition'
        - properties:
            propertyType:
              type: string
              enum:
                - STRING
            maxLength:
              type: integer
            minLength:
              type: integer
            pattern:
              description: Must match this regular expression
              type: string
            validate:
              type: boolean
    NumberPropertyDefinition:
      allOf:
        - $ref: '#/components/schemas/AbstractPropertyDefinition'
        - properties:
            propertyType:
              type: string
              enum:
                - NUMBER
            maximum:
              type: integer
            minimum:
              type: integer
            units:
              type: string
    BooleanPropertyDefinition:
      allOf:
        - $ref: '#/components/schemas/AbstractPropertyDefinition'
        - properties:
            propertyType:
              type: string
              enum:
                - BOOLEAN
    PasswordPropertyDefinition:
      allOf:
        - $ref: '#/components/schemas/AbstractPropertyDefinition'
        - properties:
            propertyType:
              type: string
              enum:
                - PASSWORD
    SingleSelectPropertyDefinition:
      allOf:
        - $ref: '#/components/schemas/AbstractPropertyDefinition'
        - properties:
            propertyType:
              type: string
              enum:
                - SINGLE_SELECT
            items:
              description: Select value from these items
              type: array
              items:
                type: string
    MultiSelectPropertyDefinition:
      allOf:
        - $ref: '#/components/schemas/AbstractPropertyDefinition'
        - properties:
            propertyType:
              type: string
              enum:
                - MULTI_SELECT
            items:
              description: Select values from these items
              type: array
              items:
                type: string
    HierarchyPropertyDefinition:
      allOf:
        - $ref: '#/components/schemas/AbstractPropertyDefinition'
        - properties:
            propertyType:
              type: string
              enum:
                - HIERARCHY
            categories:
              type: array
              items:
                type: string
            items:
              $ref: '#/components/schemas/Hierarchy'
            default:
              $ref: '#/components/schemas/Hierarchy'
    Endpoint:
      properties:
        id:
          type: string
          format: uuid
        plan:
          $ref: '#/components/schemas/PlanReference'
        name:
          type: string
        url:
          type: string
        endpointType:
          type: string
          enum:
            - XMATTERS
            - EXTERNAL
            - XM_FORM
        authentication:
          $ref: '#/components/schemas/Authentication'
        trustSelfSignedCertificates:
          type: boolean
          default: false
      required:
        - id
        - plan
        - name
        - url
    Authentication:
      oneOf:
        - $ref: '#/components/schemas/NoAuthentication'
        - $ref: '#/components/schemas/BasicAuthentication'
        - $ref: '#/components/schemas/OAuth2Authentication'
        - $ref: '#/components/schemas/ForceOAuth2Authentication'
        - $ref: '#/components/schemas/SlackOAuth2Authentication'
      discriminator:
        propertyName: authenticationType
    AbstractAuthentication:
      properties:
        authenticationType:
          type: string
          enum:
            - NONE
            - BASIC
            - OAUTH2
            - OAUTH2_FORCE
            - OAUTH2_SLACK
      required:
        - authenticationType
    NoAuthentication:
      allOf:
        - $ref: '#/components/schemas/AbstractAuthentication'
        - properties:
            authenticationType:
              type: string
              enum:
                - NONE
          required:
            - authenticationType
    BasicAuthentication:
      allOf:
        - $ref: '#/components/schemas/AbstractAuthentication'
        - properties:
            authenticationType:
              type: string
              enum:
                - BASIC
            username:
              type: string
            password:
              type: string
          required:
            - authenticationType
    OAuth2Authentication:
      allOf:
        - $ref: '#/components/schemas/AbstractAuthentication'
        - properties:
            authenticationType:
              type: string
              enum:
                - OAUTH2
            grant_type:
              type: string
              enum:
                - password
                - refresh_token
            username:
              type: string
            password:
              type: string
              format: password
            refresh_token:
              type: string
            client_id:
              description: The OAuth client id. This is the id by which the OAuth provider identifies your client.
              type: string
            client_secret:
              type: string
              format: password
            accessTokenUri:
              description: The URI of the provider OAuth endpoint that provides the access token.
              type: string
            clientAuthenticationScheme:
              description: The scheme used by your client to authenticate to the access token endpoint.
              type: string
              enum:
                - form
                - header
                - query
                - none
          required:
            - authenticationType
    ForceOAuth2Authentication:
      allOf:
        - $ref: '#/components/schemas/AbstractAuthentication'
        - properties:
            authenticationType:
              type: string
              enum:
                - OAUTH2_FORCE
            grant_type:
              type: string
              enum:
                - password
                - refresh_token
            username:
              type: string
            password:
              type: string
              format: password
            refresh_token:
              type: string
            client_id:
              description: The OAuth client id. This is the id by which the OAuth provider identifies your client.
              type: string
            client_secret:
              type: string
              format: password
            accessTokenUri:
              description: The URI of the provider OAuth endpoint that provides the access token.
              type: string
            clientAuthenticationScheme:
              description: The scheme used by your client to authenticate to the access token endpoint.
              type: string
              enum:
                - form
                - header
                - query
                - none
          required:
            - authenticationType
    SlackOAuth2Authentication:
      allOf:
        - $ref: '#/components/schemas/AbstractAuthentication'
        - properties:
            authenticationType:
              type: string
              enum:
                - OAUTH2_SLACK
            grant_type:
              type: string
              enum:
                - password
                - refresh_token
            username:
              type: string
            password:
              type: string
              format: password
            refresh_token:
              type: string
            client_id:
              description: The OAuth client id. This is the id by which the OAuth provider identifies your client.
              type: string
            client_secret:
              type: string
              format: password
            accessTokenUri:
              description: The URI of the provider OAuth endpoint that provides the access token.
              type: string
            clientAuthenticationScheme:
              description: The scheme used by your client to authenticate to the access token endpoint.
              type: string
              enum:
                - form
                - header
                - query
                - none
          required:
            - authenticationType
    EndpointInput:
      properties:
        id:
          type: string
          format: uuid
        plan:
          $ref: '#/components/schemas/PlanPointer'
        name:
          type: string
        url:
          type: string
        endpointType:
          type: string
          enum:
            - XMATTERS
            - EXTERNAL
            - XM_FORM
        authentication:
          $ref: '#/components/schemas/Authentication'
        trustSelfSignedCertificates:
          type: boolean
          default: false
    EndpointReference:
      properties:
        id:
          type: string
          format: uuid
        plan:
          $ref: '#/components/schemas/PlanReference'
        name:
          type: string
      required:
        - id
        - plan
        - name
    EndpointPointer:
      properties:
        id:
          type: string
          format: uuid
      required:
        - id
    Recipient:
      oneOf:
        - $ref: '#/components/schemas/Group'
        - $ref: '#/components/schemas/Person'
        - $ref: '#/components/schemas/Device'
      discriminator:
        propertyName: recipientType
    AbstractRecipient:
      type: object
      properties:
        id:
          type: string
          format: uuid
        targetName:
          description: An identifier such as a name that can be used to identify a resource
          type: string
        recipientType:
          enum:
            - PERSON
            - DEVICE
            - GROUP
            - DYNAMIC_TEAM
          type: string
        status:
          description: >-
            Whether the recipient is active. Inactive recipients do not receive
            notifications
          type: string
          enum:
            - ACTIVE
            - INACTIVE
            - INVALID
        externalKey:
          description: >-
            Identifies this resource in an external system. Used when
            externallyOwned is true
          type: string
        externallyOwned:
          description: >-
            True if this resource is managed by an external system.
            Externally-owned resources cannot be deleted in the xMatters user
            interface
          type: boolean
        targeted:
          description: Indicates if this is a targeted recipient. If omitted assume false
          type: boolean
        locked:
          description: >-
            Lists the fields of externally-owned objects that are locked and
            cannot be modified in the xMatters user interface
          type: array
          items:
            type: string
        responseCount:
          description: Response count for targeted group or dynamic team
          type: integer
        responseCountThreshold:
          description: >-
            Number of responses required before xMatters stops notifying
            targeted group or dynamic team
          type: integer
        revision:
          $ref: '#/components/schemas/Revision'
      required:
        - id
        - targetName
        - recipientType
        - externallyOwned
        - status
    RecipientInput:
      oneOf:
        - $ref: '#/components/schemas/GroupInput'
        - $ref: '#/components/schemas/PersonInput'
        - $ref: '#/components/schemas/DeviceInput'
      discriminator:
        propertyName: recipientType
    AbstractRecipientInput:
      type: object
      description: >-
        A Recipient can be the target of a notification. Groups, People and
        Devices are all Recipients
      properties:
        id:
          type: string
          format: uuid
        targetName:
          type: string
        recipientType:
          enum:
            - GROUP
            - PERSON
            - DEVICE
            - DYNAMIC_TEAM
          type: string
        status:
          type: string
          enum:
            - ACTIVE
            - INACTIVE
          default: ACTIVE
        externalKey:
          description: >-
            Identifies this resource in an external system. Used when
            externallyOwned is true
          type: string
        externallyOwned:
          description: >-
            True if this resource is managed by an external system.
            Externally-owned resources cannot be deleted in the xMatters user
            interface
          type: boolean
        responseCountThreshold:
          description: >-
            Number of responses required before xMatters stops notifying
            targeted group or dynamic team. Alias responseCount will be mapped
            to this attribute
          type: integer
          minimum: 1
      required:
        - recipientType
        - targetName
    RecipientPointer:
      oneOf:
        - $ref: '#/components/schemas/GroupPointer'
        - $ref: '#/components/schemas/PersonPointer'
        - $ref: '#/components/schemas/DevicePointer'
      discriminator:
        propertyName: recipientType
    AbstractRecipientPointer:
      description: A reference to a recipient resource
      properties:
        id:
          type: string
          format: uuid
        targetName:
          description: The target name of the recipient
          type: string
        recipientType:
          type: string
          enum:
            - GROUP
            - PERSON
            - DEVICE
        responseCountThreshold:
          description: >-
            Number of responses required before xMatters stops notifying
            targeted recipient. Alias responseCount will be mapped to this
            attribute
          type: integer
          minimum: 1
      required:
        - id
    RecipientReference:
      oneOf:
        - $ref: '#/components/schemas/GroupReference'
        - $ref: '#/components/schemas/PersonReference'
        - $ref: '#/components/schemas/DeviceReference'
        - $ref: '#/components/schemas/TeamReference'
        - $ref: '#/components/schemas/DynamicTeamReference'
      discriminator:
        propertyName: recipientType
    AbstractRecipientReference:
      properties:
        id:
          type: string
          format: uuid
        targetName:
          description: The target name of the recipient
          type: string
        recipientType:
          type: string
          enum:
            - GROUP
            - PERSON
            - DEVICE
            - TEAM
            - DYNAMIC_TEAM
        status:
          description: Whether the recipient is active. Inactive recipients do not receive notifications
          type: string
          enum:
            - ACTIVE
            - INACTIVE
            - INVALID
      required:
        - id
        - targetName
        - recipientType
    SelfLink:
      properties:
        self:
          description: A link to this resource
          type: string
      required:
        - self
    RefreshToken:
      description: Refresh token response
      properties:
        name:
          type: string
        refresh_token:
          type: string
      required:
        - name
        - refresh_token
    Response:
      description: A response
      properties:
        id:
          type: string
          format: uuid
        notification:
          $ref: '#/components/schemas/NotificationReference'
        event:
          $ref: '#/components/schemas/EventReference'
        recipient:
          $ref: '#/components/schemas/RecipientReference'
        option:
          $ref: '#/components/schemas/ResponseOption'
        response:
          type: string
        comment:
          type: string
        source:
          type: string
          enum:
            - BROWSER
            - IOS
            - ANDROID
        deviceName:
          type: string
        received:
          type: string
          format: date-time
        language:
          type: string
          enum:
            - ar
            - da
            - de
            - el
            - en
            - en_GB
            - es
            - fi
            - fr
            - he
            - hi
            - is
            - it
            - ja
            - ko
            - nl
            - 'no'
            - pl
            - pt
            - pt_BR
            - ru
            - sk
            - sv
            - th
            - vi
            - zh_CN
            - zh_HK
        properties:
          $ref: '#/components/schemas/Properties'
      required:
        - response
        - received
    ResponseInput:
      description: A response
      properties:
        notification:
          $ref: '#/components/schemas/NotificationPointer'
        option:
          $ref: '#/components/schemas/ResponseOptionPointer'
        response:
          type: string
        comment:
          type: string
        source:
          type: string
          enum:
            - BROWSER
            - IOS
            - ANDROID
        deviceName:
          type: string
        callMeAt:
          type: string
        language:
          type: string
          enum:
            - ar
            - da
            - de
            - el
            - en
            - en_GB
            - es
            - fi
            - fr
            - he
            - hi
            - is
            - it
            - ja
            - ko
            - nl
            - 'no'
            - pl
            - pt
            - pt_BR
            - ru
            - sk
            - sv
            - th
            - vi
            - zh_CN
            - zh_HK
        properties:
          $ref: '#/components/schemas/Properties'
    ResponseOption:
      description: A response option
      properties:
        id:
          type: string
          format: uuid
        number:
          format: int32
          type: integer
        text:
          type: string
        description:
          type: string
        prompt:
          type: string
        action:
          type: string
        contribution:
          type: string
        redirectUrl:
          type: string
        joinConference:
          type: boolean
        language:
          type: string
          enum:
            - ar
            - da
            - de
            - el
            - en
            - en_GB
            - es
            - fi
            - fr
            - he
            - hi
            - is
            - it
            - ja
            - ko
            - nl
            - 'no'
            - pl
            - pt
            - pt_BR
            - ru
            - sk
            - sv
            - th
            - vi
            - zh_CN
            - zh_HK
        allowComments:
          type: boolean
      required:
        - id
        - number
        - text
        - description
        - prompt
    ResponseOptionInput:
      description: A response option
      properties:
        id:
          type: string
          format: uuid
        number:
          format: int32
          type: integer
        text:
          type: string
        description:
          type: string
        prompt:
          type: string
        action:
          type: string
        contribution:
          type: string
        redirectUrl:
          type: string
        joinConference:
          type: boolean
        language:
          type: string
          enum:
            - ar
            - da
            - de
            - el
            - en
            - en_GB
            - es
            - fi
            - fr
            - he
            - hi
            - is
            - it
            - ja
            - ko
            - nl
            - 'no'
            - pl
            - pt
            - pt_BR
            - ru
            - sk
            - sv
            - th
            - vi
            - zh_CN
            - zh_HK
        allowComments:
          type: boolean
    ResponseOptionPointer:
      description: A reference to a response option
      properties:
        id:
          type: string
          format: uuid
      required:
        - id
    Revision:
      description: Revision information
      properties:
        id:
          description: UUID for this specific revision
          type: string
          format: uuid
        at:
          description: >-
            The time this revision was commited to the database
            Only included on calls to the auditstore (calls with at=<time> query param)
          type: string
          format: date-time
        seq:
          description: >-
            An integer value used to sort revisions at a given time by commit order
            Always increasing within an 'at' timestamp
            Taken from the lsn or the kafka offset
            Likely to be non-sequential
            Will roll over occasionally so only a valid sorting attribute in combination with 'at' timestamp
            Only included on calls to the auditstore (calls with at=<time> query param)
          type: integer
          format: int64
      required:
        - id
        - at
        - seq
    VendorResponse:
      description: A vendor response
      properties:
        id:
          type: string
          format: uuid
        notification:
          $ref: '#/components/schemas/NotificationReference'
        status:
          type: string
          enum:
            - CONNECTION_FAILURE
            - PROXY_QUEUED
            - CNS_PROVIDER_DELIVERED
            - DEVICE_ATTEMPT_FAILURE
            - PROVIDER_QUEUED
            - PROVIDER_TIMEOUT
            - VOICEMAIL_ATTEMPT_RETRY
            - PROVIDER_DELIVERED
            - DEVICE_DELIVERED
            - DEVICE_READ
            - PHONE_DELIVERY
            - SMS_BOUNCED
            - QUERY_FAILURE
            - DELIVERY_FAILURE
        at:
          type: string
          format: date-time
        properties:
          type: object
      required:
        - id
        - notification
        - status
        - at
    VendorResponseInput:
      description: A vendor response
      properties:
        notification:
          $ref: '#/components/schemas/NotificationPointer'
        status:
          type: string
          enum:
            - CONNECTION_FAILURE
            - PROXY_QUEUED
            - CNS_PROVIDER_DELIVERED
            - DEVICE_ATTEMPT_FAILURE
            - PROVIDER_QUEUED
            - PROVIDER_TIMEOUT
            - VOICEMAIL_ATTEMPT_RETRY
            - PROVIDER_DELIVERED
            - DEVICE_DELIVERED
            - DEVICE_READ
            - PHONE_DELIVERY
            - SMS_BOUNCED
            - QUERY_FAILURE
            - DELIVERY_FAILURE
        at:
          type: string
          format: date-time
        properties:
          type: object
      required:
        - notification
        - status
        - at
    Role:
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          description: Unique name. Also alias for targetName
        functions:
          $ref: '#/components/schemas/FunctionPagination'
      required:
        - id
        - name
    RoleReference:
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          description: Unique name. Also alias for targetName
      required:
        - id
        - name
    RolePointer:
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          description: Unique name. Also alias for targetName
    RosterMember:
      properties:
        group:
          $ref: '#/components/schemas/GroupReference'
        member:
          $ref: '#/components/schemas/Recipient'
      required:
        - group
        - member
    Recurrence:
      oneOf:
        - $ref: '#/components/schemas/OnceRecurrence'
        - $ref: '#/components/schemas/DailyRecurrence'
        - $ref: '#/components/schemas/WeeklyRecurrence'
        - $ref: '#/components/schemas/EveryWeekdayRecurrence'
        - $ref: '#/components/schemas/EveryWeekendDayRecurrence'
        - $ref: '#/components/schemas/MonthlyRecurrence'
        - $ref: '#/components/schemas/YearlyRecurrence'
        - $ref: '#/components/schemas/HolidayRecurrence'
      discriminator:
        propertyName: frequency
    AbstractRecurrence:
      description: Recurrence details
      properties:
        frequency:
          type: string
          enum:
            - ONCE
            - DAILY
            - WEEKLY
            - EVERY_WEEKDAY
            - EVERY_WEEKEND_DAY
            - MONTHLY
            - YEARLY
            - HOLIDAY
    RecurrenceEnd:
      description: Recurrence end details
      properties:
        endBy:
          type: string
          enum:
            - NEVER
            - DATE
            - REPETITIONS
        date:
          description: End at this date and time (UTC)
          format: date-time
          type: string
        repetitions:
          description: End after this many repetitions
          type: integer
    OnceRecurrence:
      description: Recurrence details for a one time occurrence
      allOf:
        - $ref: '#/components/schemas/AbstractRecurrence'
        - properties:
            frequency:
              description: Repeat at this frequency
              type: string
              enum:
                - ONCE
    DailyRecurrence:
      description: Recurrence details for a daily occurrence
      allOf:
        - $ref: '#/components/schemas/AbstractRecurrence'
        - properties:
            frequency:
              description: Repeat at this frequency
              type: string
              enum:
                - DAILY
            repeatEvery:
              description: Repeat every X days
              type: integer
            end:
              $ref: '#/components/schemas/RecurrenceEnd'
    WeeklyRecurrence:
      description: Recurrence details for a weekly occurrence
      allOf:
        - $ref: '#/components/schemas/AbstractRecurrence'
        - properties:
            frequency:
              description: Repeat at this frequency
              type: string
              enum:
                - WEEKLY
            repeatEvery:
              description: Repeat every X weeks
              type: integer
            onDays:
              description: Repeat on these days of the week
              type: array
              items:
                type: string
                enum:
                  - SU
                  - MO
                  - TU
                  - WE
                  - TH
                  - FR
                  - SA
            end:
              $ref: '#/components/schemas/RecurrenceEnd'
    EveryWeekdayRecurrence:
      description: Recurrence details for an every weekday occurrence
      allOf:
        - $ref: '#/components/schemas/AbstractRecurrence'
        - properties:
            frequency:
              description: Repeat at this frequency
              type: string
              enum:
                - EVERY_WEEKDAY
            end:
              $ref: '#/components/schemas/RecurrenceEnd'
    EveryWeekendDayRecurrence:
      description: Recurrence details for an every weekend day occurrence
      allOf:
        - $ref: '#/components/schemas/AbstractRecurrence'
        - properties:
            frequency:
              description: Repeat at this frequency
              type: string
              enum:
                - EVERY_WEEKEND_DAY
            end:
              $ref: '#/components/schemas/RecurrenceEnd'
    MonthlyRecurrence:
      description: Recurrence details for a monthly occurrence
      oneOf:
        - $ref: '#/components/schemas/MonthlyDateOfMonthRecurrence'
        - $ref: '#/components/schemas/MonthlyDayOfWeekRecurrence'
      discriminator:
        propertyName: 'on'
    AbstractMonthlyRecurrence:
      description: Recurrence details for a monthly occurrence
      allOf:
        - $ref: '#/components/schemas/AbstractRecurrence'
        - properties:
            frequency:
              description: Repeat at this frequency
              type: string
              enum:
                - MONTHLY
            'on':
              description: Repeat on date of month or day of week
              type: string
              enum:
                - DATE_OF_MONTH
                - DAY_OF_WEEK
            months:
              description: Repeat on these months
              type: array
              items:
                type: string
                enum:
                  - JAN
                  - FEB
                  - MAR
                  - APR
                  - MAY
                  - JUN
                  - JUL
                  - AUG
                  - SEP
                  - OCT
                  - NOV
                  - DEC
            end:
              $ref: '#/components/schemas/RecurrenceEnd'
          required:
            - 'on'
    MonthlyDateOfMonthRecurrence:
      description: >-
        Recurrence details for a monthly occurrence on a specific date of the
        month
      allOf:
        - $ref: '#/components/schemas/AbstractMonthlyRecurrence'
        - properties:
            'on':
              description: Repeat on date of month
              type: string
              enum:
                - DATE_OF_MONTH
            dateOfMonth:
              description: Repeat on this day of month
              type: string
              enum:
                - '1'
                - '2'
                - '3'
                - '4'
                - '5'
                - '6'
                - '7'
                - '8'
                - '9'
                - '10'
                - '11'
                - '12'
                - '13'
                - '14'
                - '15'
                - '16'
                - '17'
                - '18'
                - '19'
                - '20'
                - '21'
                - '22'
                - '23'
                - '24'
                - '25'
                - '26'
                - '27'
                - '28'
                - '29'
                - '30'
                - '31'
                - LAST
    MonthlyDayOfWeekRecurrence:
      description: >-
        Recurrence details for a monthly occurrence on a specific day of the
        week
      allOf:
        - $ref: '#/components/schemas/AbstractMonthlyRecurrence'
        - properties:
            'on':
              description: Repeat on day of week
              type: string
              enum:
                - DAY_OF_WEEK
            dayOfWeekClassifier:
              description: Classifier for day of the week within a month
              type: string
              enum:
                - FIRST
                - SECOND
                - THIRD
                - FOURTH
                - LAST
            dayOfWeek:
              description: Day of the week
              type: string
              enum:
                - SU
                - MO
                - TU
                - WE
                - TH
                - FR
                - SA
    YearlyRecurrence:
      description: Recurrence details for a one time occurrence
      allOf:
        - $ref: '#/components/schemas/AbstractRecurrence'
        - properties:
            frequency:
              description: Repeat at this frequency
              type: string
              enum:
                - YEARLY
            end:
              $ref: '#/components/schemas/RecurrenceEnd'
    HolidayRecurrence:
      description: Recurrence details for a holiday
      allOf:
        - $ref: '#/components/schemas/AbstractRecurrence'
        - properties:
            frequency:
              description: Repeat at this frequency
              type: string
              enum:
                - HOLIDAY
            end:
              description: Recurrence end details for an occurrence
              properties:
                endBy:
                  type: string
                  enum:
                    - NEVER
                    - DATE
                date:
                  description: End at this date and time (UTC)
                  format: date-time
                  type: string
    Scenario:
      description: A scenario
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        status:
          type: string
        links:
          $ref: '#/components/schemas/SelfLink'
      required:
        - id
        - name
        - description
        - status
    ServiceProvider:
      description: A service provider
      properties:
        id:
          type: string
          format: uuid
        deviceType:
          type: string
          enum:
            - ANDROID_PUSH
            - APPLE_PUSH
            - BLACKBERRY_PUSH
            - BROWSER
            - EMAIL
            - FAX
            - GENERIC
            - IM
            - NUMERIC_PAGER
            - TEXT_PAGER
            - TEXT_PHONE
            - VOICE
            - VOICE_IVR
        name:
          type: string
      required:
        - id
        - name
    ServiceProviderReference:
      description: A reference to a provider resource
      properties:
        id:
          type: string
          format: uuid
      required:
        - id
    ServiceProviderPointer:
      description: A pointer to a provider resource
      properties:
        id:
          type: string
          format: uuid
      required:
        - id
    SharedLibrary:
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        script:
          type: string
          description: Base64 encoded script source code
        plan:
          $ref: '#/components/schemas/PlanReference'
      required:
        - id
        - name
        - script
    SharedLibraryInput:
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        script:
          type: string
          description: Base64 encoded script source code
        plan:
          $ref: '#/components/schemas/PlanPointer'
    Shift:
      properties:
        id:
          type: string
          format: uuid
        group:
          $ref: '#/components/schemas/GroupReference'
        name:
          type: string
        description:
          type: string
        start:
          description: >-
            Absolute boundary for this shift recurrence. Shift occurrences only
            appear after this time. UTC Timestamp
          format: date-time
          type: string
        end:
          description: >-
            Absolute boundary for this shift recurrence. Shift occurrences only
            appear before this time. UTC Timestamp
          format: date-time
          type: string
        rotationType:
          type: string
          enum:
            - NONE
            - EVENT
            - SCHEDULE
            - SHIFT
          default: NONE
        rotationDirection:
          type: string
          enum:
            - SECOND_TO_FIRST
            - LAST_TO_FIRST
        rotationInterval:
          type: integer
        recurrence:
          $ref: '#/components/schemas/Recurrence'
        timezone:
          type: string
          example: US/Pacific
        members:
          $ref: '#/components/schemas/ShiftMemberPagination'
        revision:
          $ref: '#/components/schemas/Revision'
        links:
          $ref: '#/components/schemas/SelfLink'
      required:
        - id
        - group
        - name
    ShiftInput:
      properties:
        id:
          type: string
          format: uuid
        group:
          $ref: '#/components/schemas/GroupPointer'
        name:
          type: string
        description:
          type: string
        start:
          format: date-time
          type: string
        end:
          format: date-time
          type: string
        rotationType:
          type: string
          enum:
            - NONE
            - EVENT
            - SCHEDULE
            - SHIFT
          default: NONE
        rotationDirection:
          type: string
          enum:
            - SECOND_TO_FIRST
            - LAST_TO_FIRST
        rotationInterval:
          type: integer
        recurrence:
          $ref: '#/components/schemas/Recurrence'
        members:
          type: array
          items:
            $ref: '#/components/schemas/ShiftMemberInput'
    ShiftReference:
      properties:
        id:
          type: string
          format: uuid
        group:
          $ref: '#/components/schemas/GroupReference'
        name:
          type: string
        links:
          $ref: '#/components/schemas/SelfLink'
      required:
        - id
        - name
    ShiftPointer:
      properties:
        id:
          type: string
          format: uuid
        group:
          $ref: '#/components/schemas/GroupPointer'
        name:
          type: string
    ShiftMember:
      properties:
        delay:
          description: 'How long, in minutes, to wait before notifying this shift member'
          type: integer
        escalationType:
          description: >-
            Identifies the type of escalation to use for Performance Report
            metrics; can be one of None, Peer, or Management. Note that if the
            delay is set to 0, this field must be set to None, or omitted. This
            setting cannot be applied to the first recipient in a list
          type: string
          enum:
            - NONE
            - PEER
            - MANAGEMENT
        inRotation:
          description: Indicates whether the team member is included in the rotation cycle
          type: boolean
        position:
          description: Current position in the escalation sequence (rotation effects this position)
          type: integer
        recipient:
          $ref: '#/components/schemas/RecipientReference'
        shift:
          $ref: '#/components/schemas/ShiftReference'
      required:
        - shift
        - recipient
        - position
        - delay
        - escalationType
        - inRotation
    ShiftMemberInput:
      properties:
        delay:
          description: 'How long, in minutes, to wait before notifying this team member'
          type: integer
        escalationType:
          description: >-
            Identifies the type of escalation to use for Performance Report
            metrics; can be one of None, Peer, or Management. Note that if the
            delay is set to 0, this field must be set to None, or omitted. This
            setting cannot be applied to the first recipient in a list
          enum:
            - NONE
            - PEER
            - MANAGEMENT
          type: string
        inRotation:
          description: Indicates whether the team member is included in the rotation cycle
          type: boolean
        position:
          description: Current position in the escalation sequence (rotation effects this position)
          type: integer
        recipient:
          $ref: '#/components/schemas/RecipientPointer'
      required:
        - recipient
    ShiftOccurrence:
      properties:
        group:
          $ref: '#/components/schemas/GroupReference'
        shift:
          $ref: '#/components/schemas/ShiftReference'
        start:
          format: date-time
          type: string
        end:
          format: date-time
          type: string
        members:
          $ref: '#/components/schemas/ShiftOccurrenceMemberPagination'
      required:
        - shift
        - start
        - end
    ShiftOccurrenceMember:
      properties:
        member:
          $ref: '#/components/schemas/Recipient'
        position:
          type: integer
          description: Position in the escalation order
        delay:
          type: integer
          description: 'How long, in minutes, to wait before notifying this shift member'
        escalationType:
          description: >-
            Identifies the type of escalation to use for Performance Report
            metrics. Note that if the delay is set to 0, this field must be set
            to NONE, or omitted. This setting cannot be applied to the first
            recipient in a list
          type: string
          enum:
            - NONE
            - PEER
            - MANAGEMENT
        replacements:
          $ref: '#/components/schemas/TemporaryReplacementPagination'
        absences:
          $ref: '#/components/schemas/TemporaryAbsencePagination'
      required:
        - member
        - position
        - delay
    Site:
      description: Site
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        address1:
          type: string
        address2:
          type: string
        city:
          type: string
        country:
          type: string
        language:
          type: string
          enum:
            - ar
            - da
            - de
            - el
            - en
            - en_GB
            - es
            - fi
            - fr
            - he
            - hi
            - is
            - it
            - ja
            - ko
            - nl
            - 'no'
            - pl
            - pt
            - pt_BR
            - ru
            - sk
            - sv
            - th
            - vi
            - zh_CN
            - zh_HK
        latitude:
          format: double
          type: number
        longitude:
          format: double
          type: number
        postalCode:
          type: string
        state:
          type: string
        timezone:
          type: string
          example: US/Pacific
        externalKey:
          description: >-
            Identifies this resource in an external system. Used when
            externallyOwned is true
          type: string
        externallyOwned:
          description: >-
            True if this resource is managed by an external system.
            Externally-owned resources cannot be deleted in the xMatters user
            interface
          type: boolean
        revision:
          $ref: '#/components/schemas/Revision'
        links:
          $ref: '#/components/schemas/SelfLink'
      required:
        - id
        - name
        - language
        - timezone
        - country
    SiteInput:
      description: Site
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        address1:
          type: string
        address2:
          type: string
        city:
          type: string
        country:
          type: string
        language:
          type: string
          enum:
            - ar
            - da
            - de
            - el
            - en
            - en_GB
            - es
            - fi
            - fr
            - he
            - hi
            - is
            - it
            - ja
            - ko
            - nl
            - 'no'
            - pl
            - pt
            - pt_BR
            - ru
            - sk
            - sv
            - th
            - vi
            - zh_CN
            - zh_HK
        latitude:
          format: double
          type: number
        longitude:
          format: double
          type: number
        postalCode:
          type: string
        state:
          type: string
        timezone:
          type: string
          example: US/Pacific
      required:
        - name
        - language
        - timezone
        - country
    SitePointer:
      description: Site a group belongs to
      properties:
        id:
          type: string
          format: uuid
    SiteReference:
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        links:
          $ref: '#/components/schemas/SelfLink'
      required:
        - id
    Subscription:
      description: Subscription
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        form:
          $ref: '#/components/schemas/SubscriptionFormReference'
        owner:
          $ref: '#/components/schemas/PersonReference'
        created:
          type: string
          format: date-time
        notificationDelay:
          format: int32
          type: integer
        properties:
          $ref: '#/components/schemas/Properties'
        recipients:
          $ref: '#/components/schemas/RecipientPagination'
        targetAllDevices:
          description: Target all device types
          type: boolean
        targetDeviceNames:
          description: Target specific device categories
          $ref: '#/components/schemas/DeviceNamePagination'
        revision:
          $ref: '#/components/schemas/Revision'
        links:
          $ref: '#/components/schemas/SelfLink'
      required:
        - id
        - name
    SubscriptionInput:
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        form:
          $ref: '#/components/schemas/SubscriptionFormPointer'
        notificationDelay:
          format: int32
          type: integer
        owner:
          $ref: '#/components/schemas/PersonPointer'
        properties:
          $ref: '#/components/schemas/Properties'
        recipients:
          type: array
          items:
            $ref: '#/components/schemas/RecipientPointer'
        targetAllDevices:
          description: Target all device types
          type: boolean
        targetDeviceNames:
          description: Target specific device names
          type: array
          items:
            $ref: '#/components/schemas/DeviceNamePointer'
      required:
        - name
        - form
        - owner
        - properties
        - recipients
        - targetDeviceNames
    SubscriptionForm:
      allOf:
        - $ref: '#/components/schemas/AbstractForm'
        - description: Subscription Form
          properties:
            id:
              type: string
              format: uuid
            name:
              type: string
            formType:
              type: string
              enum:
                - SUBSCRIPTION
            description:
              type: string
            plan:
              $ref: '#/components/schemas/PlanReference'
            owner:
              $ref: '#/components/schemas/PersonReference'
            scope:
              type: string
              enum:
                - ALL_FORMS
                - FORM
            form:
              description: FormReference if the Scope is FORM
              $ref: '#/components/schemas/FormReference'
            created:
              type: string
              format: date-time
            oneWay:
              type: boolean
            subscribeOthers:
              type: boolean
            notificationDelay:
              format: int32
              type: integer
            properties:
              $ref: '#/components/schemas/Properties'
            roles:
              $ref: '#/components/schemas/RolePagination'
            targetAllDevices:
              description: Target all device types
              type: boolean
            isTargetAllDevicesVisible:
              type: boolean
            targetDeviceNames:
              description: Target specific device names
              $ref: '#/components/schemas/DeviceNamePagination'
            visibleTargetDeviceNames:
              description: List of device names visible in the subscription form
              $ref: '#/components/schemas/DeviceNamePagination'
            revision:
              $ref: '#/components/schemas/Revision'
            links:
              $ref: '#/components/schemas/SelfLink'
          required:
            - id
            - name
            - plan
            - owner
            - created
            - scope
            - oneWay
            - subscribeOthers
            - notificationDelay
            - targetAllDevices
            - isTargetAllDevicesVisible
            - targetDeviceNames
            - visibleTargetDeviceNames
    SubscriptionFormPointer:
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
      required:
        - id
    Targetable:
      description: 'Targetable entity (RECIPIENT, SITE)'
      properties:
        targetableType:
          type: string
          description: Targetable entity type
          enum:
            - RECIPIENT
            - SITE
        recipient:
          $ref: '#/components/schemas/RecipientReference'
        site:
          $ref: '#/components/schemas/SiteReference'
      required:
        - targetableType
    TargetablePointer:
      description: 'Targetable entity (RECIPIENT, SITE)'
      properties:
        targetableType:
          type: string
          description: Targetable entity type
          enum:
            - RECIPIENT
            - SITE
        recipient:
          $ref: '#/components/schemas/RecipientPointer'
        site:
          $ref: '#/components/schemas/SitePointer'
      required:
        - targetableType
    TeamReference:
      allOf:
        - $ref: '#/components/schemas/AbstractRecipientReference'
        - properties:
            recipientType:
              type: string
              enum:
                - TEAM
    TemporaryAbsence:
      oneOf:
        - $ref: '#/components/schemas/TemporaryVacancy'
        - $ref: '#/components/schemas/TemporaryReplacement'
      discriminator:
        propertyName: absenceType
    TemporaryAbsenceInput:
      oneOf:
        - $ref: '#/components/schemas/TemporaryVacancyInput'
        - $ref: '#/components/schemas/TemporaryReplacementInput'
      discriminator:
        propertyName: absenceType
    AbstractTemporaryAbsence:
      description: Temporary absence
      properties:
        id:
          type: string
          format: uuid
        absenceType:
          type: string
          enum:
            - VACANCY
            - REPLACEMENT
        start:
          format: date-time
          type: string
        end:
          format: date-time
          type: string
        member:
          $ref: '#/components/schemas/PersonReference'
        group:
          $ref: '#/components/schemas/GroupReference'
        includeDirectNotifications:
          type: boolean
      required:
        - id
        - absenceType
        - start
        - end
        - member
        - includeDirectNotifications
    AbstractTemporaryAbsenceInput:
      description: Temporary absence
      properties:
        id:
          type: string
          format: uuid
        absenceType:
          type: string
          enum:
            - VACANCY
            - REPLACEMENT
        start:
          format: date-time
          type: string
        end:
          format: date-time
          type: string
        member:
          $ref: '#/components/schemas/PersonPointer'
        group:
          $ref: '#/components/schemas/GroupPointer'
        includeDirectNotifications:
          type: boolean
          default: false
      required:
        - absenceType
        - start
        - end
        - member
        - includeDirectNotifications
    TemporaryVacancy:
      description: Temporary vacancy
      allOf:
        - $ref: '#/components/schemas/AbstractTemporaryAbsence'
        - properties:
            absenceType:
              type: string
              enum:
                - VACANCY
    TemporaryVacancyInput:
      description: Temporary vacancy
      allOf:
        - $ref: '#/components/schemas/AbstractTemporaryAbsenceInput'
        - properties:
            absenceType:
              type: string
              enum:
                - VACANCY
    TemporaryReplacement:
      description: Temporary replacement
      allOf:
        - $ref: '#/components/schemas/AbstractTemporaryAbsence'
        - properties:
            absenceType:
              type: string
              enum:
                - REPLACEMENT
            replacement:
              $ref: '#/components/schemas/PersonReference'
          required:
            - replacement
    TemporaryReplacementInput:
      description: Temporary replacement
      allOf:
        - $ref: '#/components/schemas/AbstractTemporaryAbsenceInput'
        - properties:
            absenceType:
              type: string
              enum:
                - REPLACEMENT
            replacement:
              $ref: '#/components/schemas/PersonPointer'
          required:
            - replacement
    Transform:
      description: A Transform defines how a file or files will be mapped to xMatters systems from files in the case of import, or from xMatters systems to files in the case of export and reporting.
      properties:
        id:
          type: string
          format: uuid
        name:
          description: Transform name
          type: string
        url:
          description: File upload URL
          type: string
      required:
        - id
        - name
        - url
    TransformInput:
      description: A Transform defines how a file or files will be mapped to xMatters systems from files in the case of import, or from xMatters systems to files in the case of export and reporting.
      properties:
        id:
          type: string
          format: uuid
        name:
          description: Transform name
          type: string
    TransformReference:
      description: A Transform defines how a file or files will be mapped to xMatters systems from files in the case of import, or from xMatters systems to files in the case of export and reporting.
      properties:
        id:
          type: string
          format: uuid
        name:
          description: Transform name
          type: string
        url:
          description: File upload URL
          type: string
      required:
        - id
        - name
        - url
    AbstractHTTPResponse:
      properties:
        code:
          description: HTTP status code
          format: int32
          type: integer
          enum:
            - 400
            - 401
            - 403
            - 404
            - 409
        subcode:
          description: An application-specific response sub-status provided for client side localization of message
          type: string
        arguments:
          description: String replacement positional arguments provided for client side localization of message
          type: array
          items:
            type: string
        message:
          description: A detailed description of the response or error
          type: string
        reason:
          description: A description of the response code
          type: string
          enum:
            - Bad Request
            - Unauthorized
            - Forbidden
            - Not Found
            - Conflict
      required:
        - code
        - subcode
        - reason
        - message
    BadRequestResponse:
      allOf:
        - $ref: '#/components/schemas/AbstractHTTPResponse'
        - properties:
            code:
              description: HTTP status code
              format: int32
              type: integer
              enum:
                - 400
            reason:
              description: A description of the response code
              type: string
              enum:
                - Bad Request
    UnauthorizedResponse:
      allOf:
        - $ref: '#/components/schemas/AbstractHTTPResponse'
        - properties:
            code:
              description: HTTP status code
              format: int32
              type: integer
              enum:
                - 401
            reason:
              description: A description of the response code
              type: string
              enum:
                - Unauthorized
    ForbiddenResponse:
      allOf:
        - $ref: '#/components/schemas/AbstractHTTPResponse'
        - properties:
            code:
              description: HTTP status code
              format: int32
              type: integer
              enum:
                - 403
            reason:
              description: A description of the response code
              type: string
              enum:
                - Forbidden
    NotFoundResponse:
      allOf:
        - $ref: '#/components/schemas/AbstractHTTPResponse'
        - properties:
            code:
              description: HTTP status code
              format: int32
              type: integer
              enum:
                - 404
            reason:
              description: A description of the response code
              type: string
              enum:
                - Not Found
    ConflictResponse:
      allOf:
        - $ref: '#/components/schemas/AbstractHTTPResponse'
        - properties:
            code:
              description: HTTP status code
              format: int32
              type: integer
              enum:
                - 409
            reason:
              description: A description of the response code
              type: string
              enum:
                - Conflict
    PaginationLinks:
      properties:
        next:
          description: A link to the next page of results
          type: string
        previous:
          description: A link to the previous page of results
          type: string
        self:
          description: A link to this page of results
          type: string
      required:
        - self
    AbstractPagination:
      type: object
      properties:
        count:
          description: >-
            The number of items in this page of results (the number of items in
            the data array)
          format: int32
          type: integer
        links:
          $ref: '#/components/schemas/PaginationLinks'
        total:
          description: The total number of items in the result set
          format: int32
          type: integer
      required:
        - count
        - data
        - total
        - links
    AgentPagination:
      allOf:
        - $ref: '#/components/schemas/AbstractPagination'
        - properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/Agent'
          required:
            - data
    AgentMonitorPagination:
      allOf:
        - $ref: '#/components/schemas/AbstractPagination'
        - properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/AgentMonitor'
          required:
            - data
    AgentOwnerPagination:
      allOf:
        - $ref: '#/components/schemas/AbstractPagination'
        - properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/AgentOwner'
          required:
            - data
    AuditPagination:
      type: object
      properties:
        data:
          description: An array that contains this page of resources
          items:
            $ref: '#/components/schemas/Audit'
          type: array
        links:
          $ref: '#/components/schemas/PaginationLinks'
      required:
        - data
        - links
    APIKeyPagination:
      allOf:
        - $ref: '#/components/schemas/AbstractPagination'
        - properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/APIKey'
          required:
            - data
    CountryPagination:
      allOf:
        - $ref: '#/components/schemas/AbstractPagination'
        - properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/Country'
          required:
            - data
    DeepLinkPagination:
      allOf:
        - $ref: '#/components/schemas/AbstractPagination'
        - properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/DeepLink'
          required:
            - data
    DevicePagination:
      allOf:
        - $ref: '#/components/schemas/AbstractPagination'
        - properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/Device'
          required:
            - data
    DeviceNamePagination:
      allOf:
        - $ref: '#/components/schemas/AbstractPagination'
        - properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/DeviceName'
          required:
            - data
    DeviceTimeframePagination:
      allOf:
        - $ref: '#/components/schemas/AbstractPagination'
        - properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/DeviceTimeframe'
          required:
            - data
    DeviceTypePagination:
      allOf:
        - $ref: '#/components/schemas/AbstractPagination'
        - properties:
            data:
              type: array
              items:
                type: string
                enum:
                  - ANDROID_PUSH
                  - APPLE_PUSH
                  - BLACKBERRY_PUSH
                  - BROWSER
                  - EMAIL
                  - FAX
                  - GENERIC
                  - IM
                  - NUMERIC_PAGER
                  - TEXT_PAGER
                  - TEXT_PHONE
                  - VOICE
                  - VOICE_IVR
          required:
            - data
    DynamicTeamPagination:
      allOf:
        - $ref: '#/components/schemas/AbstractPagination'
        - properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/DynamicTeam'
          required:
            - data
    EventPagination:
      allOf:
        - $ref: '#/components/schemas/AbstractPagination'
        - properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/Event'
          required:
            - data
    EventAnnotationPagination:
      allOf:
        - $ref: '#/components/schemas/AbstractPagination'
        - properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/EventAnnotation'
          required:
            - data
    EventSchedulePagination:
      allOf:
        - $ref: '#/components/schemas/AbstractPagination'
        - properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/EventSchedule'
          required:
            - data
    EventSuppressionPagination:
      allOf:
        - $ref: '#/components/schemas/AbstractPagination'
        - properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/EventSuppression'
          required:
            - data
    EventFilterPagination:
      allOf:
        - $ref: '#/components/schemas/AbstractPagination'
        - properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/EventFilter'
          required:
            - data
    FeatureTogglePagination:
      allOf:
        - $ref: '#/components/schemas/AbstractPagination'
        - properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/FeatureToggle'
          required:
            - data
    FileAttachmentPagination:
      allOf:
        - $ref: '#/components/schemas/AbstractPagination'
        - properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/FileAttachment'
          required:
            - data
    FilterPagination:
      allOf:
        - $ref: '#/components/schemas/AbstractPagination'
        - properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/Filter'
          required:
            - data
    FormPagination:
      allOf:
        - $ref: '#/components/schemas/AbstractPagination'
        - properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/Form'
          required:
            - data
    FunctionPagination:
      allOf:
        - $ref: '#/components/schemas/AbstractPagination'
        - properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/Function'
          required:
            - data
    GroupPagination:
      allOf:
        - $ref: '#/components/schemas/AbstractPagination'
        - properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/Group'
          required:
            - data
    GroupMemberPagination:
      allOf:
        - $ref: '#/components/schemas/AbstractPagination'
        - properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/GroupMember'
          required:
            - data
    ImportPagination:
      allOf:
        - $ref: '#/components/schemas/AbstractPagination'
        - properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/Import'
          required:
            - data
    IntegrationAgentPagination:
      allOf:
        - $ref: '#/components/schemas/AbstractPagination'
        - properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/IntegrationAgent'
          required:
            - data
    NotificationPagination:
      allOf:
        - $ref: '#/components/schemas/AbstractPagination'
        - properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/Notification'
          required:
            - data
    NotificationFilterPagination:
      allOf:
        - $ref: '#/components/schemas/AbstractPagination'
        - properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/NotificationFilter'
          required:
            - data
    ObserverPagination:
      allOf:
        - $ref: '#/components/schemas/AbstractPagination'
        - properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/Observer'
          required:
            - data
    OnCallPagination:
      allOf:
        - $ref: '#/components/schemas/AbstractPagination'
        - properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/OnCall'
          required:
            - data
    OnCallReminderShiftStartConfigPagination:
      allOf:
        - $ref: '#/components/schemas/AbstractPagination'
        - properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/OnCallReminderShiftStartConfig'
          required:
            - data
    PermissiblePagination:
      allOf:
        - $ref: '#/components/schemas/AbstractPagination'
        - properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/Permissible'
          required:
            - data
    PermissionPagination:
      allOf:
        - $ref: '#/components/schemas/AbstractPagination'
        - properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/Permission'
          required:
            - data
    PersonPagination:
      allOf:
        - $ref: '#/components/schemas/AbstractPagination'
        - properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/Person'
          required:
            - data
    PlanPagination:
      allOf:
        - $ref: '#/components/schemas/AbstractPagination'
        - properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/Plan'
          required:
            - data
    PropertyDefinitionPagination:
      allOf:
        - $ref: '#/components/schemas/AbstractPagination'
        - properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/PropertyDefinition'
          required:
            - data
    CorrelationEventFilterPagination:
      allOf:
        - $ref: '#/components/schemas/AbstractPagination'
        - properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/CorrelationEventFilter'
          required:
            - data
    ConferencePagination:
      allOf:
        - $ref: '#/components/schemas/AbstractPagination'
        - properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/Conference'
          required:
            - data
    ConferenceParticipantPagination:
      allOf:
        - $ref: '#/components/schemas/AbstractPagination'
        - properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/ConferenceParticipant'
          required:
            - data
    ConstantPagination:
      allOf:
        - $ref: '#/components/schemas/AbstractPagination'
        - properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/Constant'
          required:
            - data
    EndpointPagination:
      allOf:
        - $ref: '#/components/schemas/AbstractPagination'
        - properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/Endpoint'
          required:
            - data
    IntegrationPagination:
      allOf:
        - $ref: '#/components/schemas/AbstractPagination'
        - properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/Integration'
          required:
            - data
    IntegrationLogPagination:
      allOf:
        - $ref: '#/components/schemas/AbstractPagination'
        - properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/IntegrationLog'
          required:
            - data
    IntegrationServicePagination:
      allOf:
        - $ref: '#/components/schemas/AbstractPagination'
        - properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/IntegrationService'
          required:
            - data
    RecipientPagination:
      allOf:
        - $ref: '#/components/schemas/AbstractPagination'
        - properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/Recipient'
          required:
            - data
    RefreshTokenPagination:
      allOf:
        - $ref: '#/components/schemas/AbstractPagination'
        - properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/RefreshToken'
          required:
            - data
    ResponsePagination:
      allOf:
        - $ref: '#/components/schemas/AbstractPagination'
        - properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/Response'
          required:
            - data
    ResponseOptionPagination:
      allOf:
        - $ref: '#/components/schemas/AbstractPagination'
        - properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/ResponseOption'
          required:
            - data
    RolePagination:
      allOf:
        - $ref: '#/components/schemas/AbstractPagination'
        - properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/Role'
          required:
            - data
    RosterMemberPagination:
      allOf:
        - $ref: '#/components/schemas/AbstractPagination'
        - properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/RosterMember'
          required:
            - data
    ScenarioPagination:
      allOf:
        - $ref: '#/components/schemas/AbstractPagination'
        - properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/Scenario'
          required:
            - data
    SearchCriterionPagination:
      allOf:
        - $ref: '#/components/schemas/AbstractPagination'
        - properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/SearchCriterion'
          required:
            - data
    ServiceProviderPagination:
      allOf:
        - $ref: '#/components/schemas/AbstractPagination'
        - properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/ServiceProvider'
          required:
            - data
    SharedLibraryPagination:
      allOf:
        - $ref: '#/components/schemas/AbstractPagination'
        - properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/SharedLibrary'
          required:
            - data
    ShiftPagination:
      allOf:
        - $ref: '#/components/schemas/AbstractPagination'
        - properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/Shift'
          required:
            - data
    ShiftMemberPagination:
      allOf:
        - $ref: '#/components/schemas/AbstractPagination'
        - properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/ShiftMember'
          required:
            - data
    ShiftOccurrencePagination:
      allOf:
        - $ref: '#/components/schemas/AbstractPagination'
        - properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/ShiftOccurrence'
          required:
            - data
    ShiftOccurrenceMemberPagination:
      allOf:
        - $ref: '#/components/schemas/AbstractPagination'
        - properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/ShiftOccurrenceMember'
          required:
            - data
    SitePagination:
      allOf:
        - $ref: '#/components/schemas/AbstractPagination'
        - properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/Site'
          required:
            - data
    SubscriptionPagination:
      allOf:
        - $ref: '#/components/schemas/AbstractPagination'
        - properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/Subscription'
          required:
            - data
    SubscriptionFormPagination:
      allOf:
        - $ref: '#/components/schemas/AbstractPagination'
        - properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/SubscriptionForm'
          required:
            - data
    TargetablePagination:
      allOf:
        - $ref: '#/components/schemas/AbstractPagination'
        - properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/Targetable'
          required:
            - data
    TemporaryReplacementPagination:
      allOf:
        - $ref: '#/components/schemas/AbstractPagination'
        - properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/TemporaryReplacement'
          required:
            - data
    TemporaryAbsencePagination:
      allOf:
        - $ref: '#/components/schemas/AbstractPagination'
        - properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/TemporaryAbsence'
          required:
            - data
    TransformPagination:
      allOf:
        - $ref: '#/components/schemas/AbstractPagination'
        - properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/Transform'
          required:
            - data
    MessagePagination:
      allOf:
        - $ref: '#/components/schemas/AbstractPagination'
        - properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/Message'
          required:
            - data
